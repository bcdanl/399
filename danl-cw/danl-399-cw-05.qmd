---
title: Classwork 5
subtitle: The Layered Grammar of Graphics
date: 2023-02-10
execute: 
  echo: true
  warning: false
  message: false
  
from: markdown+emoji
---

```{r}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)

theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(angle = 0,
                               size = rel(1.33),
                               margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(angle = 90,
                               size = rel(1.33),
                               margin = margin(0,10,0,0))
                )
          )
```

# Question 1. Geometric Objects

## Q1a.
Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.

```{r}
#| echo: true
#| eval: false

ggplot(data = mpg, 
       mapping = aes(x = displ, y = hwy, 
                     color = drv)) +
  geom_point(alpha = .4) +
  geom_smooth(se = FALSE)

```


<br>

## Q1b.
What does `show.legend = FALSE` do? What happens if you remove it? Why do you think I used it earlier in the lecture?


<br>

**Answer:** 

```{r}
ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy, 
                           color = drv),
             alpha = .5,
             show.legend = FALSE)
```



## Q1c.
Recreate the R code necessary to generate the following graphs.

### (a)
```{r}
#| echo: false
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(alpha = .4) +
  geom_smooth(se = FALSE)
```

<br>

### (b)
```{r}
#| echo: false
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(mapping = aes(group = drv), 
              se = FALSE) +
  geom_point(alpha = .4)

```

<br>


### (c)
```{r}
#| echo: false
ggplot(mpg, aes(x = displ, y = hwy, 
                color = drv)) +
  geom_point(alpha = .4) +
  geom_smooth(se = FALSE)

```

<br>


### (d)
```{r}
#| echo: false
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv), alpha = .4) +
  geom_smooth(se = FALSE)

```

<br>

### (e)
```{r}
#| echo: false
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(color = drv), alpha = .4) +
  geom_smooth(aes(linetype = drv), se = FALSE)

```

<br>

### (f)
```{r}
#| echo: false
ggplot(mpg, 
       aes(x = displ, y = hwy)) +
  geom_point(size = 4, color = "white") +
  geom_point(aes(color = drv), alpha = .4) +
  theme_gray()
```

<br>


## Q1d.
- Use the data.frame, `organdata_simple` to visualize the yearly trend of the variable `donors` for each country.
```{r}
organdata_simple <- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')
```

<br><br><br>

# Question 2. Statistical Transformation and Position Adjustment

## Q2a.
What does `geom_col()` do? How is it different to `geom_bar()`?

**Answer**:



<br><br>

## Q2b.
- Install the R package, `nycflights13`, which provides the `flights` data.frame.

- Visualize the distribution of `carrier`.

- Visualize how the distribution of `carrier` varies by `origin`.

**Answer**:



<br><br>

