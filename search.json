[
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html",
    "href": "danl-hw/danl-399-hw-01-q.html",
    "title": "Homework 1",
    "section": "",
    "text": "Decorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture file (e.g., png) of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nAdd the PDF file of your resum√© to the website working directory in your laptop (or Posit Cloud).\nCorrect links for your resum√©, LinkedIn, email, and optionally social media.\nMake sure that you do not have any broken links in your website.\n\n\nAdd a ‚Äúggplot Basics‚Äù blog post to your blog using Quarto document.\n\n\nIn your ‚Äúggplot Basics‚Äù blog post, briefly explain ggplot Basics we discussed in Lecture 2, Lecture 3, Classwork 4, and Classwork 5\n\n\nUse the 3-step git commands (git add, git commit, and git push) to update your online website."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-1",
    "href": "danl-hw/danl-399-hw-01-q.html#question-1",
    "title": "Homework 1",
    "section": "Question 1",
    "text": "Question 1"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-2",
    "href": "danl-hw/danl-399-hw-01-q.html#question-2",
    "title": "Homework 1",
    "section": "Question 2",
    "text": "Question 2"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-3",
    "href": "danl-hw/danl-399-hw-01-q.html#question-3",
    "title": "Homework 1",
    "section": "Question 3",
    "text": "Question 3\nUse ggridges::geom_density_ridges() for Question 3."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-4",
    "href": "danl-hw/danl-399-hw-01-q.html#question-4",
    "title": "Homework 1",
    "section": "Question 4",
    "text": "Question 4\nUse datasets::mtcars for Question 4."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-5",
    "href": "danl-hw/danl-399-hw-01-q.html#question-5",
    "title": "Homework 1",
    "section": "Question 5",
    "text": "Question 5\nUse the following data.frame for Question 5.\n\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-6",
    "href": "danl-hw/danl-399-hw-01-q.html#question-6",
    "title": "Homework 1",
    "section": "Question 6",
    "text": "Question 6\nUse the following data.frame for Question 6\n\nmale_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-7",
    "href": "danl-hw/danl-399-hw-01-q.html#question-7",
    "title": "Homework 1",
    "section": "Question 7",
    "text": "Question 7\nUse the following data.frame for Question 7\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-8",
    "href": "danl-hw/danl-399-hw-01-q.html#question-8",
    "title": "Homework 1",
    "section": "Question 8",
    "text": "Question 8\nUse the following data.frame for Question 8.\n\ncows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')"
  },
  {
    "objectID": "listing-danl-399-class.html",
    "href": "listing-danl-399-class.html",
    "title": "DANL 399 - Class Notes",
    "section": "",
    "text": "All class Quarto documents are stored in:\nthis GitHub Repository.\nHTML outputs from the class Quarto documents are provided below:\n\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 2 - Note\n\n\nggplot Basics\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 3 - Note\n\n\nggplot grammar\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 4 - Note\n\n\nShow the Right Number\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 5 - Note\n\n\nGraph tables, add labels, make notes\n\n\nFebruary 23, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-03.html",
    "href": "danl-qa/danl-399-qa-03.html",
    "title": "Lecture 3 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 3 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 3 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 3 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-05.html",
    "href": "danl-qa/danl-399-qa-05.html",
    "title": "Lecture 5 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 5 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 5 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 5 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "",
    "text": "Welcome! üëã\n\\(-\\) Explore, Learn, and Grow with the DANL! üåü"
  },
  {
    "objectID": "index.html#bullet-lecture-slides",
    "href": "index.html#bullet-lecture-slides",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Lecture Slides üöÄ",
    "text": "\\(\\bullet\\,\\) Lecture Slides üöÄ\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nLecture 5\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 1\n\n\nJanuary 26, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-lecture-q-a",
    "href": "index.html#bullet-lecture-q-a",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Lecture Q & A ‚ùì",
    "text": "\\(\\bullet\\,\\) Lecture Q & A ‚ùì\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nLecture 5 - Q & A\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4 - Q & A\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2 - Q & A\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 1 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-classwork",
    "href": "index.html#bullet-classwork",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è",
    "text": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nClasswork 5\n\n\nFebruary 10, 2023\n\n\n\n\nClasswork 4\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 3\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 2\n\n\nJanuary 26, 2024\n\n\n\n\nClasswork 1\n\n\nJanuary 26, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-homework",
    "href": "index.html#bullet-homework",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Homework üíª",
    "text": "\\(\\bullet\\,\\) Homework üíª\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nHomework 1\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl-class/danl-399-note-02-2024-0202.html",
    "href": "danl-class/danl-399-note-02-2024-0202.html",
    "title": "Lecture 2 - Note",
    "section": "",
    "text": "1 Make a plot!\nTo add a code chunk, - Alt + Ctrl + I - option + command + I\nTo run a code chunk - Ctrl + Shift + Enter - command + shift + return\nTo run a current line of code - Ctrl + Enter - command + return\n\nlibrary(gapminder)\ngapminder &lt;- gapminder::gapminder\nskim(gapminder)\n\n\nData summary\n\n\nName\ngapminder\n\n\nNumber of rows\n1704\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncountry\n0\n1\nFALSE\n142\nAfg: 12, Alb: 12, Alg: 12, Ang: 12\n\n\ncontinent\n0\n1\nFALSE\n5\nAfr: 624, Asi: 396, Eur: 360, Ame: 300\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1979.50\n17.27\n1952.00\n1965.75\n1979.50\n1993.25\n2007.0\n‚ñá‚ñÖ‚ñÖ‚ñÖ‚ñá\n\n\nlifeExp\n0\n1\n59.47\n12.92\n23.60\n48.20\n60.71\n70.85\n82.6\n‚ñÅ‚ñÜ‚ñá‚ñá‚ñá\n\n\npop\n0\n1\n29601212.32\n106157896.74\n60011.00\n2793664.00\n7023595.50\n19585221.75\n1318683096.0\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\ngdpPercap\n0\n1\n7215.33\n9857.45\n241.17\n1202.06\n3531.85\n9325.46\n113523.1\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data = gapminder,\n            aes(x = gdpPercap, y = lifeExp))\n\nBelow is the scatter plot of gdpPercap vs.¬†lifeExp\n\np + geom_point()\n\n\n\n\nLet‚Äôs add a curve that fits into the data points.\n\np + geom_point() +\n  geom_smooth()\n\n\n\n\n\np + geom_point() +\n  geom_smooth() +\n  geom_smooth(method = lm)\n\n\n\n\n\np1 &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\n\np1 + geom_point()\n\n\n\n\n\np + geom_point(color = \"red\")\n\n\n\n\n\np + geom_point(color = \"purple\") +\n  geom_smooth(method = lm)\n\n\n\n\n\np + geom_point(alpha = .2, size = 10)\n\n\n\n\n\np + geom_point(alpha = .2) +\n  geom_smooth(method = lm,\n              color = \"orange\",\n              se = F,\n              linewidth = 10\n              )\n\n\n\n\n\np + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np1 + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np1 + geom_point(alpha = .25) +\n  geom_smooth() +\n  geom_smooth(method = lm) +\n  guides(color = \"none\") +\n  facet_wrap( . ~ continent ) +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np + geom_point(alpha = .25,\n               aes(color = continent)) +\n  geom_smooth(  )\n\n\n\n\n\np_out &lt;- p + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_continuous(trans = scales::log_trans())  # natural log\np_out\n\n\n\n# ggsave(\"my_figure.pdf\", plot = p_out)\n\n\n\n\n2 References\n\nR for Data Science by Hadley Wickham\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-04-2024-0216.html",
    "href": "danl-class/danl-399-note-04-2024-0216.html",
    "title": "Lecture 4 - Note",
    "section": "",
    "text": "DT::datatable(gapminder)\n\n\n\n\n\n\n\nlength(unique(gapminder$country))\n\n[1] 142\n\nlength(unique(gapminder$continent))\n\n[1] 5\n\n\n\ndatatable(gss_sm)\n\n\n\n\n\n\n\n?gss_sm\nskimr::skim(gss_sm)\n\n\nData summary\n\n\nName\ngss_sm\n\n\nNumber of rows\n2867\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nfactor\n23\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nballot\n0\n1.0\n1\n1\n0\n3\n0\n\n\nsibs\n5\n1.0\n1\n2\n0\n26\n0\n\n\npres12\n1137\n0.6\n1\n1\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ndegree\n8\n1.00\nFALSE\n5\nHig: 1461, Bac: 536, Lt : 328, Gra: 318\n\n\nrace\n0\n1.00\nFALSE\n3\nWhi: 2100, Bla: 490, Oth: 277\n\n\nsex\n0\n1.00\nFALSE\n2\nFem: 1591, Mal: 1276\n\n\nregion\n0\n1.00\nFALSE\n9\nSou: 550, E. : 502, Pac: 397, Mid: 313\n\n\nincome16\n271\n0.91\nFALSE\n26\n$60: 258, $40: 218, $75: 214, $50: 207\n\n\nrelig\n18\n0.99\nFALSE\n13\nPro: 1371, Cat: 649, Non: 619, Jew: 51\n\n\nmarital\n1\n1.00\nFALSE\n5\nMar: 1212, Nev: 806, Div: 495, Wid: 251\n\n\npadeg\n698\n0.76\nFALSE\n5\nHig: 1010, Lt : 663, Bac: 273, Gra: 159\n\n\nmadeg\n200\n0.93\nFALSE\n5\nHig: 1349, Lt : 736, Bac: 292, Gra: 146\n\n\npartyid\n32\n0.99\nFALSE\n8\nNot: 496, Ind: 473, Str: 463, Ind: 405\n\n\npolviews\n111\n0.96\nFALSE\n7\nMod: 1032, Con: 426, Sli: 382, Lib: 350\n\n\nhappy\n8\n1.00\nFALSE\n3\nPre: 1601, Ver: 806, Not: 452\n\n\npartners\n1106\n0.61\nFALSE\n9\n1 P: 1085, No : 409, 2 P: 124, 3 P: 50\n\n\ngrass\n1024\n0.64\nFALSE\n2\nLeg: 1126, Not: 717\n\n\nzodiac\n85\n0.97\nFALSE\n12\nVir: 274, Can: 257, Tau: 240, Aqu: 236\n\n\nincome_rc\n271\n0.91\nFALSE\n16\nGt : 258, Gt : 218, Gt : 214, Gt : 213\n\n\nagegrp\n17\n0.99\nFALSE\n5\nAge: 786, Age: 573, Age: 529, Age: 510\n\n\nageq\n10\n1.00\nFALSE\n4\nAge: 737, Age: 731, Age: 695, Age: 694\n\n\nsiblings\n5\n1.00\nFALSE\n7\n6+: 609, 2: 596, 1: 550, 3: 452\n\n\nkids\n8\n1.00\nFALSE\n5\n0: 797, 2: 733, 3: 467, 1: 459\n\n\nreligion\n18\n0.99\nFALSE\n5\nPro: 1371, Cat: 649, Non: 619, Oth: 159\n\n\nbigregion\n0\n1.00\nFALSE\n4\nSou: 1052, Mid: 695, Wes: 632, Nor: 488\n\n\npartners_rc\n1115\n0.61\nFALSE\n5\n1: 1085, 0: 409, 2: 124, 4+: 84\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1.0\n2016.00\n0.00\n2016.00\n2016.00\n2016.00\n2016.00\n2016.00\n‚ñÅ‚ñÅ‚ñá‚ñÅ‚ñÅ\n\n\nid\n0\n1.0\n1434.00\n827.78\n1.00\n717.50\n1434.00\n2150.50\n2867.00\n‚ñá‚ñá‚ñá‚ñá‚ñá\n\n\nage\n10\n1.0\n49.16\n17.69\n18.00\n34.00\n49.00\n62.00\n89.00\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÉ\n\n\nchilds\n8\n1.0\n1.85\n1.67\n0.00\n0.00\n2.00\n3.00\n8.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nwtssall\n0\n1.0\n1.00\n0.50\n0.39\n0.48\n0.96\n1.44\n4.31\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nobama\n1137\n0.6\n0.63\n0.48\n0.00\n0.00\n1.00\n1.00\n1.00\n‚ñÖ‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\n\n\ngss_sm &lt;- gss_sm\n\n\ngss_sm |&gt; \n  group_by(race) |&gt; \n  count()\n\n# A tibble: 3 √ó 2\n# Groups:   race [3]\n  race      n\n  &lt;fct&gt; &lt;int&gt;\n1 White  2100\n2 Black   490\n3 Other   277\n\n\n\np &lt;- ggplot(data = gss_sm |&gt; filter(!is.na(degree)),\n            mapping = \n              aes( x = age, \n                   y = childs))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth(aes(color = degree),\n                se = F) +\n    facet_grid(sex ~ race)\n\n\n\n\n\n1 Bar Charts\n\ngss_sm &lt;- gss_sm\ngss_sm |&gt; \n  count(bigregion)\n\n# A tibble: 4 √ó 2\n  bigregion     n\n  &lt;fct&gt;     &lt;int&gt;\n1 Northeast   488\n2 Midwest     695\n3 South      1052\n4 West        632\n\n\n\ngss_sm |&gt;   # short-cut Ctrl/command + Shift + M\n  group_by(religion) |&gt; \n  count()\n\n# A tibble: 6 √ó 2\n# Groups:   religion [6]\n  religion       n\n  &lt;fct&gt;      &lt;int&gt;\n1 Protestant  1371\n2 Catholic     649\n3 Jewish        51\n4 None         619\n5 Other        159\n6 &lt;NA&gt;          18\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar() \n\n\n\n\nShort-cut for code chunk is Alt/option + Ctrl/command + I\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar(show.legend = F) \n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar()\n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar(position = \"dodge\")\n\n\n\n\n\n?midwest\ndatatable(midwest)\n\n\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 10)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 100)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(binwidth = .001)\n\n\n\n\n\ndatatable(titanic)\n\n\n\n\n\n\n\n?oecd_sum\ndatatable(oecd_sum)\n\n\n\n\n\n\n\np &lt;- ggplot(data = socviz::oecd_sum,\n            mapping = \n              aes(x = year, \n                  y = diff, \n                  fill = hi_lo))\np + geom_col() + \n  guides(fill = \"none\") +\n  labs(x = NULL, \n       y = \"Difference in Years\",\n       title = \"The US Life Expectancy Gap\",\n       subtitle = \"Difference between US and OECD\n                   average life expectancies, 1960-2015\",\n       caption = \"Data: OECD. After a chart by Christopher Ingraham,\n                  Washington Post, December 27th 2017.\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html",
    "href": "danl-cw/danl-399-cw-04.html",
    "title": "Classwork 4",
    "section": "",
    "text": "Load the following data.frame, mpg.\n\nlibrary(tidyverse)\nmpg &lt;- ggplot2::mpg\n\n\ndatatable(mpg)\n\n\n\n\n\n\n\n\nlibrary(skimr)\nskim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ\n\n\n\n\n\n\n\nRun ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)\n\n\n\n\n\n\n\n\nWrite a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))\n\n\n\n\n\n\n\n\n\nWhat happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1a.",
    "href": "danl-cw/danl-399-cw-04.html#q1a.",
    "title": "Classwork 4",
    "section": "",
    "text": "Run ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1b.",
    "href": "danl-cw/danl-399-cw-04.html#q1b.",
    "title": "Classwork 4",
    "section": "",
    "text": "Write a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1c.",
    "href": "danl-cw/danl-399-cw-04.html#q1c.",
    "title": "Classwork 4",
    "section": "",
    "text": "What happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2a.",
    "href": "danl-cw/danl-399-cw-04.html#q2a.",
    "title": "Classwork 4",
    "section": "Q2a.",
    "text": "Q2a.\n\nWhich variables in mpg are categorical?\nWhich variables are continuous?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2b.",
    "href": "danl-cw/danl-399-cw-04.html#q2b.",
    "title": "Classwork 4",
    "section": "Q2b.",
    "text": "Q2b.\n\nMap a continuous variable to color, size, and shape.\nHow do these aesthetics behave differently for categorical vs.¬†continuous variables?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2d.",
    "href": "danl-cw/danl-399-cw-04.html#q2d.",
    "title": "Classwork 4",
    "section": "Q2d.",
    "text": "Q2d.\nWhat happens if you map an aesthetic to something other than a variable name, like aes(color = displ &lt; 5)?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3a.",
    "href": "danl-cw/danl-399-cw-04.html#q3a.",
    "title": "Classwork 4",
    "section": "Q3a.",
    "text": "Q3a.\nWhat happens if you facet on a continuous variable?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3b.",
    "href": "danl-cw/danl-399-cw-04.html#q3b.",
    "title": "Classwork 4",
    "section": "Q3b.",
    "text": "Q3b.\n\nWhat do the empty cells in the scatterplot of displ vs.¬†hwy with facet_grid(drv ~ cyl) mean?\n\nHow do they relate to this plot?\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = drv, y = cyl))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3c.",
    "href": "danl-cw/danl-399-cw-04.html#q3c.",
    "title": "Classwork 4",
    "section": "Q3c.",
    "text": "Q3c.\nWhat plots does the following code make? What does . do?\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(drv ~ .)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(drv ~ .)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(. ~ cyl)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3d.",
    "href": "danl-cw/danl-399-cw-04.html#q3d.",
    "title": "Classwork 4",
    "section": "Q3d.",
    "text": "Q3d.\nConsider the following faceted plot:\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) + \n  facet_wrap(~ class, nrow = 2)\n\n\nWhat are the advantages to using faceting instead of the color aesthetic?\nWhat are the disadvantages?\nHow might the balance change if you had a larger dataset?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3e.",
    "href": "danl-cw/danl-399-cw-04.html#q3e.",
    "title": "Classwork 4",
    "section": "Q3e.",
    "text": "Q3e.\n\nRead ?facet_wrap.\n\nWhat does nrow do?\nWhat does ncol do?\nWhat other options control the layout of the individual panels?\nWhy doesn‚Äôt facet_grid() have nrow and ncol arguments?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3f.",
    "href": "danl-cw/danl-399-cw-04.html#q3f.",
    "title": "Classwork 4",
    "section": "Q3f.",
    "text": "Q3f.\nWhen using facet_grid(), you should usually put the variable with more unique levels in the columns. Why?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3g.",
    "href": "danl-cw/danl-399-cw-04.html#q3g.",
    "title": "Classwork 4",
    "section": "Q3g.",
    "text": "Q3g.\nUse the following data.frame.\n\ntvshows_web &lt;- read_csv(\n        'https://bcdanl.github.io/data/tvshows.csv')\n\n\ndatatable(tvshows_web)\n\n\n\n\n\n\n\n\nDescribe the relationship between audience size (GRP) and audience engagement (PE) using ggplot.\nExplain the relationship in words."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html",
    "href": "danl-cw/danl-399-cw-03.html",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd.\n\n\n\n\n\n\n\nRules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file.\n\n\n\n\n\n\n\nDecorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-399-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website.\n\n\n\n\n\n\nQuarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#website-files",
    "href": "danl-cw/danl-399-cw-03.html#website-files",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#blogging",
    "href": "danl-cw/danl-399-cw-03.html#blogging",
    "title": "Classwork 3",
    "section": "",
    "text": "Rules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#practice-problems",
    "href": "danl-cw/danl-399-cw-03.html#practice-problems",
    "title": "Classwork 3",
    "section": "",
    "text": "Decorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-399-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#references",
    "href": "danl-cw/danl-399-cw-03.html#references",
    "title": "Classwork 3",
    "section": "",
    "text": "Quarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "listing-danl-399-qa.html",
    "href": "listing-danl-399-qa.html",
    "title": "DANL 399 - Lecture Discussion",
    "section": "",
    "text": "Title\n\n\nDate\n\n\n\n\n\n\nLecture 5 - Q & A\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4 - Q & A\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2 - Q & A\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 1 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#learning-objectives",
    "title": "Lecture 2",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\n\nQuarto Basics\nQuarto Website Basics\n\n\n\nggplot Basics"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#rstudio-workflow",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#rstudio-workflow",
    "title": "Lecture 2",
    "section": "RStudio Workflow",
    "text": "RStudio Workflow\nShortcuts for RStudio and RScript\n\n\nMac\n\ncommand + shift + N opens a new RScript.\ncommand + return runs a current line or selected lines.\ncommand + shift + C is the shortcut for # (commenting).\noption + -  is the shortcut for &lt;-.\n\n\nWindows\n\nCtrl + Shift + N opens a new RScript.\nCtrl + return runs a current line or selected lines.\nCtrl + Shift + C is the shortcut for # (commenting).\nAlt + -  is the shortcut for &lt;-."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#workflow",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#workflow",
    "title": "Lecture 2",
    "section": "Workflow",
    "text": "Workflow\nShortcuts for Lecture Slides\n\no or Esc overviews lecture slides\n\nUse arrow keys to move around.\n\nYou can also click the menu button at the top-right corner, and go to a specific slide.\nCtrl + Shift + F to search."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-1",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nYAML\n\n\n\n\n\n\nAn YAML (yet another markup language) header surrounded by ---.\n\nIt is commonly used for document configuration (e.g., title, author, date, style, ‚Ä¶).\n\nChunks of Python/R code surrounded by three backticks, \\(\\text{```}\\)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-2",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nKnitting / Rendering\n\nWhen we knit the document, Quarto sends the .qmd file to jupyter/knitr, which executes all of the code chunks and creates a new markdown (.md) document which includes the code and its output.\nThe markdown file (*.md) generated by jupyter/knitr is then processed by pandoc, which is responsible for creating the output file."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-3",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nMarkdown, Quarto, and HTML\n\n\nThe very original version of Markdown was invented mainly to write HTML content more easily.\n\nFor example, - SOME_TEXT in ‚Äú.md‚Äù is equivalent to &lt;ul&gt;&lt;li&gt; SOME_TEXT &lt;/li&gt; in ‚Äù.html‚Äù\n\nPandoc makes it possible to convert a Markdown document to a large variety of output formats, such as HTML."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-and-html",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-and-html",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto and HTML",
    "text": "Getting Started with Quarto and HTML\nMarkdown, Quarto, and HTML\n\n\nTo create an HTML document from Quarto, we specify the html output format in the YAML metadata of our document.\n\nBy default, format: html is set.\n\nIn RStudio, we can create a new Quarto file from the menu, File -&gt; New File -&gt; Quarto Document.\nOpen an empty Quarto file.\n\nType the following YAML metadata to the empty Quarto file.\n\n\n\n---\ntitle: \"Habits\"\nauthor: YOUR_NAME\ndate: January 30, 2024\nformat: \n  html\n---"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-4",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nQuarto Basics\n\n\nIn RStudio, close the project USERNAME.github.io.Rporj if it is on.\n\nClick USERNAME.github.io.Rporj at the top-right corner.\nClick Close Project.\n\nDownload the Quarto file, danl-399-quarto-r.qmd from Brightspace, and open it from RStudio."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-5",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nQuarto Basics\n\nThe following syntax is part of YAML metadata in danl-399-quarto-r.qmd.\n\nIn YAML, indentation really matters!\ntab (or four spaces) defines a level in YAML.\n\n\n---\ntitle: \nsubtitle: \nauthor: \ndate: last-modified\n\nformat: \n  html:\n  \nexecute: \n  echo: true\n  eval: true\n---"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\n\nIn RStudio, open the project USERNAME.github.io.Rporj.\n\nClick Project: (None) at the top-right corner.\nClick USERNAME.github.io.Rporj.\n\nYour website has a _quarto.yml configuration file.\n\nThis file provides options for HTML documents within the website.\n\n\n\n\n---\nproject:\n  type: website\n\nwebsite:\n  title: \"YOUR NAME\"\n  navbar:\n    left:\n      - text: Project\n        href: project.qmd\n      - text: Blog\n        href: blog-listing.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: false\n---\n\nThe _quarto.yml file configures the website settings.\nIndentation matters!"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-1",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nCustom CSS\n\n\nCascading Style Sheets (CSS) is used to format the layout of a webpage (color, font, text size, background, display, etc.).\n\nHTML will format the architecture of the house.\nCSS will be the carpet and walls to decorate the house.\nJavaScript adds interactive elements in the house, such as opening doors and lighting.\n\nWe are not front-end web developers.\n\nWe will not cover discuss the use of CSS and JavaScript."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-2",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nRendering\n\n\nThe Render button (command/Ctrl + shift + K) renders a single Quarto file.\nquarto render from Terminal renders all Quarto/Jupyter Notebook files in your local working directory:\n\nquarto render\n\nWe should use quarto render when we have changes in _quarto.yml.\nMake changes only from your local laptop.\n\nDo not make any change from the GitHub repo webpage."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-3",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAdding *.ipynb to Quarto websites\n\n\nBy default, quarto render doesn‚Äôt execute any code in .ipynb notebooks.\nquarto render renders .ipynb notebooks, so that corresponding html files are rendered.\n\nIf we need to update cell outputs in *.ipynb, run that *.ipynb on Google Colab, and save the notebook."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-4",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAppearance and Style\n\ntheme specifies the Bootstrap theme to use for the page (themes are drawn from the Bootswatch theme library).\n\nValid themes include default, bootstrap, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, and yeti.\n\nhighlight-style specifies the code highlighting style.\n\nSupported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, and textmate."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-5",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAbout\n\nYour index.qmd sets a page about you.\n\nDetails in about pages are available here:\nhttps://quarto.org/docs/websites/website-about.html.\n\nQuarto includes 5 built in templates:\n\njolla\ntrestles\nsolana\nmarquee\nbroadside"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-6",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nIcons and Emojis\n\nA ton of Bootstrap icons are available here:\n\nhttps://icons.getbootstrap.com.\n\nA ton of markdown emojis are available here üòÑ:\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\nhttps://gist.github.com/rxaviers/7360908"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-7",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\n\nWe can add a new page to the website through navbar in _quarto.yml\n\nleft:\n- text: Project\n  href: project.qmd\n- text: Blog\n  href: blog-listing.qmd\n- text: Homeowrk\n  href: hw.qmd"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-8",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\n\nWe can also create a navigation bar menu by including a menu\n\nleft:\n  - text: \"Projects\"\n    menu:\n      - project_1.qmd\n      - project_2.qmd \n\nMore details about navbar are available here:\n\nhttps://quarto.org/docs/websites/website-navigation.html"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-9",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nColors\n\nA ton of hex codes for colors are available here:\n\nhttps://www.color-hex.com"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-website-basics",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-website-basics",
    "title": "Lecture 2",
    "section": "Quarto Website Basics",
    "text": "Quarto Website Basics\n\nLet‚Äôs do Classwork 3."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nUse theme() if you want to tweak the display of an existing theme.\nThe following lists basic ggplot themes:\n\n\n\n\ntheme\ntheme\n\n\n\n\ntheme_grey()\ntheme_gray()\n\n\ntheme_bw()\ntheme_linedraw()\n\n\ntheme_light()\ntheme_dark()\n\n\ntheme_minimal()\ntheme_classic()\n\n\ntheme_void()\ntheme_test()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-1",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nggthemes package provides the following themes:\n\ntheme_economist(), theme_wsj(), theme_fivethirtyeight(), theme_gdocs(), theme_map()\n\nhrbrthemes package provides the following themes:\n\ntheme_ipsum(), theme_ipsum_rc(), theme_ft_rc(), and more."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-2",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\ngapminder data\n\nThe gapminder package include the gapminder data frame.\n\nlibrary(gapminder)\ngapminder\nskim(gapminder)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-3",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMappings link data to things we see\n\nFirst, we tell the core ggplot function what our data is and what our aesthetic mapping is:\n\np &lt;- ggplot(data = gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\nWe can then add the geometric object (geom_*()) to the ggplot().\n\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-4",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\n1. Tell the ggplot() function what our tidy data is. - ggplot(data = ...)\n2. Tell ggplot() what relationships we want to see. - The ggplot(mapping = aes(...)) - p &lt;- ggplot(data = ... , aes(...))\n3. Tell ggplot() how we want to see the relationships in our data. - Choose a geom_*().\n4. Layer on geoms as needed, by adding them to the p object one at a time.\n5. Use some additional functions to adjust scales, labels, tick marks, titles, etc."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-5",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nBuild your plots layer by layer\np + geom_point() + geom_smooth() \np + geom_point() + geom_smooth(method = \"lm\") \np + geom_point() +\n    geom_smooth(method = \"lm\")\np + geom_point() +\n    geom_smooth(method = \"gam\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-6",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nIn the following, we map color to continent in the aes() function:\n\np1 &lt;-  ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\nWe then add geoms.\n\np1 + geom_point() +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-7",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nIn the following, we map color to \"purple\" outside of the aes() function:\n\np2 &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap, y = lifeExp))\n\nWe then add geoms, manually set aethetics, and then adjust scales.\n\np2 + geom_point(color = \"purple\") +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-8",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nHere are another exmaples that set aesthetic mapping manually outside aes() function and inside geom_*() function.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\np + geom_point(color = \"purple\") +\n    geom_smooth(method = \"loess\") \n\np + geom_point(alpha = 0.3) +\n    geom_smooth(color = \"orange\", se = F, size = 8, method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-9",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nLet‚Äôs add scale_*() and labs() functions to ggplot()\n\np + geom_point(alpha = 0.3) +\n    geom_smooth(method = \"gam\") +\n    scale_x_log10(labels = scales::dollar) +\n    labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\nQ. Is it really the best way to display this country-year data?\n\nWhat are we gaining and losing by ignoring the temporal and country-level structure of the data? How could we do better?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-10",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-10",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nAesthetics can be mapped per geom\n\nWe can have different aesthetic mappings across different geoms:\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, y = lifeExp))\n\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")  +\n    scale_x_continuous(trans = scales::log_trans())  # natural log"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-11",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-11",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can use ggsave() to save ggplot output as a .png or .pdf file.\n\nggsave(filename = \"my_figure.png\")\n\nWe can put our recent plot into an object called p_out and then tell ggave() that we want to save that object.\n\np_out &lt;- p + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()\nggsave(\"my_figure.pdf\", plot = p_out)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-12",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-12",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can set the size of ggplot figue:\n\nggsave(\"lifexp_vs_gdp_gradient.pdf\",\n       plot = p_out, height = 8, width = 10, units = \"in\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-13",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-13",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens when you put the geom_smooth() function before geom_point() instead of after it?\n\nWhat does this tell you about how the plot is drawn? Think about how this might be useful when drawing plots."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-14",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-14",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nChange the mappings in the aes() function so that you plot Life Expectancy against population (pop) rather than per capita GDP.\n\nWhat does that look like?\nWhat does it tell you about the unit of observation in the dataset?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-15",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-15",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens if you map color to year instead of continent?\n\nIs the result what you expected?\nThink about what class of object year is.\nRemember you can get a quick look at the top of the data, which includes some shorthand information on the class of each variable, by typing gapminder.\nInstead of mapping color = year, what happens if you try color = factor(year)?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-1",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line() \n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-2",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-3",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped.\n\nHow about color aesthetic, instead of group?\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-4",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-5",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\np + geom_line(color=\"gray70\", aes(group = country)) +\n    geom_smooth(size = 1.1, method = \"loess\", se = FALSE) +\n    facet_[?] +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = element_text(angle = 45),\n          axis.title.x = element_text(margin = margin(t = 25))) +\n    labs(x = \"Year\", y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-6",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\ninstall.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nglimpse(gss_sm)\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-7",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + [?](alpha = 0.2) +\n    [?]()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-8",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    [?]"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-9",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\ne.g., the relationship between the age and the number of children by sex and race\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-10",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-10",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-11",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-11",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-12",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-12",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this: &lt;mapping&gt; = &lt;..statistic..&gt;.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-13",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-13",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead.\n\nTo do so we specify group = 1 inside the aes() call.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop.., group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-14",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-14",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ntable(gss_sm$religion)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-15",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-15",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, color = religion))\np + geom_bar()\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-16",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-16",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, fill = religion))\np + geom_bar() + guides( fill = \"none\" )\n\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-17",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-17",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"fill\")\n\nAn alternative choice is to set the position argument to \"fill\".\n\nIt is to compare proportions across groups."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-18",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-18",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-19",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-19",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = religion))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-20",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-20",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = bigregion)) +\n    facet_wrap(~ bigregion, ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-21",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-21",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-22",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-22",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-23",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-23",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\n\n\nlibrary(gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\np + geom_line()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-1",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-1",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-2",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-2",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-3",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-3",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-4",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-4",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nHow about color aesthetic, instead of group?\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-5",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-5",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( color = country ),\n               show.legend = F)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-6",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-6",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-7",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-7",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-8",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-8",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\n\n\np + geom_line(color=\"gray70\", \n              aes(group = country)) +\n    geom_smooth(size = 1.1, \n                method = \"loess\", \n                se = FALSE) +\n    facet_wrap(.~ continent, nrow = 1) +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = \n            element_text(\n              angle = 45),\n          axis.title.x = \n            element_text(\n              margin = margin(t = 25))) +\n    labs(x = \"Year\", \n         y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-9",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-9",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\n# install.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-10",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-10",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-11",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-11",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-12",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-12",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-13",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-13",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-14",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-14",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-15",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-15",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this:\n\n&lt;mapping&gt; = &lt;..statistic..&gt;;\n&lt;mapping&gt; = stat(statistic); or\n&lt;mapping&gt; = after_stat(statistic)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-16",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-16",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar(mapping = \n               aes(y = ..prop..))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-17",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-17",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-18",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-18",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nTo do so we specify group = 1 inside the aes() call.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar(mapping = \n               aes(y = ..prop.., \n                   group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-19",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-19",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ngss_sm |&gt; \n  group_by(religion) |&gt; \n  count()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-20",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-20",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  color = religion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-21",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-21",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-22",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-22",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar() + \n  guides( fill = \"none\" )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-23",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-23",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-24",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-24",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nAn alternative choice is to set the position argument to \"fill\". \n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"fill\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-25",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-25",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop..))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-26",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-26",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop.., \n                   group = religion))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-27",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-27",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-28",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-28",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop.., \n                   group = bigregion)) +\n    facet_wrap(~ bigregion, \n               ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-29",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-29",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-30",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-30",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-31",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-31",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-32",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-32",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhile histograms summarize single variables, it‚Äôs also possible to use several at once to compare distributions.\n\nWe can facet histograms by some variable of interest.\nWe can also compare them in the same plot using the fill mapping."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-33",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-33",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = \n              filter(midwest, \n                     state %in% \n                       c(\"OH\", \"WI\")),\n            mapping = \n              aes(x = percollege, \n                  fill = state) )\np + geom_histogram(alpha = 0.4, \n                   bins = 20)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-34",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-34",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen working with a continuous variable, an alternative to binning the data and making a histogram is to calculate a kernel density estimate of the underlying distribution with geom_density()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-35",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-35",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_density()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-36",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-36",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nHere we can use color (for the lines) and fill (for the body of the density curve) for aesthetic mappings.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area, \n                  fill = state, \n                  color = state))\np + geom_density(alpha = 0.3)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-37",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-37",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nFor geom_density(), the stat_density() function can return its default after_stat(density) statistic, or after_stat(scaled), which will give a proportional density estimate."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-38",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-38",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = \n              filter(midwest, \n                     state %in% \n                       c(\"OH\", \"WI\")),\n            mapping = \n              aes(x = area, \n                  fill = state, \n                  color = state))\np + geom_density( alpha = 0.3, \n                  mapping =  \n                    aes(y = after_stat(scaled) ))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-39",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-39",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nWhen we call geom_bar(), it does its calculations on the fly using stat_count() behind the scenes to produce the counts or proportions it displays."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-40",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-40",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nBut often, our data is in effect already a summary table.\nLet‚Äôs consider the socviz::titanic data.frame.\n\nsocviz::titanic"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-41",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-41",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nShould we avoid transforming data if we want to describe the relationship between fate and percent?\n\n\n\np &lt;- ggplot(data = titanic,\n            mapping = \n              aes(x = fate, \n                  y = percent, \n                  fill = sex))\np + geom_bar(position = \"dodge\", \n             stat = \"identity\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-42",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-42",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\ngeom_col() has exactly the same as geom_bar() except that it assumes that stat = \"identity\".\nLet‚Äôs consider socviz::oecd_sum data.frame.\n\nIt contains information on average life expectancy at birth within the United States, and across other OECD countries.\n\n\noecd_sum\n\nLet‚Äôs draw the bar chart that describe the difference over time using color = hi_lo."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-43",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-43",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\n\np &lt;- ggplot(data = socviz::oecd_sum,\n            mapping = \n              aes(x = year, \n                  y = diff, \n                  fill = hi_lo))\np + geom_col() + \n  guides(fill = \"none\") +\n  labs(x = NULL, \n       y = \"Difference in Years\",\n       title = \"The US Life Expectancy Gap\",\n       subtitle = \"Difference between US and OECD\n                   average life expectancies, 1960-2015\",\n       caption = \"Data: OECD. After a chart by Christopher Ingraham,\n                  Washington Post, December 27th 2017.\") +\n  theme_minimal()"
  },
  {
    "objectID": "listing-danl-399-hw.html",
    "href": "listing-danl-399-hw.html",
    "title": "DANL 399 - Homework",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nHomework 1\n\n\nPersonal Website and ggplot Visualization\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-1",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nCurrent Appointment & Education\n\nName: Byeong-Hak Choe.\nAssistant Professor of Data Analytics and Economics, School of Business at SUNY Geneseo.\nPh.D.¬†in Economics from University of Wyoming.\nM.S. in Economics from Arizona State University.\nM.A.¬†in Economics from SUNY Stony Brook.\nB.A. in Economics & B.S. in Applied Mathematics from Hanyang University at Ansan, South Korea.\n\nMinor in Business Administration.\nConcentration in Finance."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-2",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H., 2021. ‚ÄúSocial Media Campaigns, Lobbying and Legislation: Evidence from #climatechange and Energy Lobbies.‚Äù\nQuestion: To what extent do social media campaigns compete with fossil fuel lobbying on climate change legislation?\nData include:\n\n5.0 million tweets with #climatechange/#globalwarming around the globe;\n12.0 million retweets/likes to those tweets;\n0.8 million Twitter users who wrote those tweets;\n1.4 million Twitter users who retweeted or liked those tweets;\n0.3 million US Twitter users with their location at a city level;\nFirm-level lobbying data (expenses, targeted bills, etc.)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-3",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H. and Ore-Monago, T., 2024. ‚ÄúGovernance and Climate Finance in the Developing World‚Äù\nClimate finance refers to the financial resources allocated for mitigating and adapting to climate change, including support for initiatives that reduce greenhouse gas emissions and enhance resilience to climate impacts.\n\nWe focus on transnational financing that rich countries provide poor countries with financial resources, in order to help them adapt to climate change and mitigate greenhouse gas (GHG) emissions.\nSince the GHG emissions in developing countries are rapidly growing, it is crucial to assess the effectiveness of climate finance.\nPoor governance can be significant barriers to emissions reductions within these countries."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-4",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H. and Ore-Monago, T., 2024. ‚ÄúGovernance and Climate Finance in the Developing World‚Äù\nData include:\n\nGlobal climate finance data (e.g., donors, recipients, characteristics of climate change projects)\nWorld Bank Governance Indicators over the years (e.g., government effectiveness, voice and accountability, political stability and absence of violence/terrorism, regulatory quality, rule of law, control of corruption)\nVarious economic indicators (e.g., trade pattern of low carbon technology products, macroeconomic risks, energy)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-1",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nEmail, Class & Office Hours\n\nEmail: bchoe@geneseo.edu\nClass Homepage:\n\nhttps://brightspace.geneseo.edu/\nhttp://bcdanl.github.io/399/\n\nClass Schedule\n\nOnline Component: Asynchronous\nIn-Person Sessions:\n\nWednesdays, 11:30 A.M.-12:30 P.M.\nWednesdays, 3:30 P.M.-4:30 P.M.\n\n\nOffice: South Hall 301\nOffice Hours:\n\nTuesdays 12:30 P.M.-1:30 P.M.\nWednesdays 12:30 P.M.-2:30 P.M."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-2",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Description\n\nThis course delves into the tools and methodologies essential for creating visually engaging and informative data representations. Its focus is on enhancing data comprehension and facilitating effective data analytics through aesthetically pleasing graphics. The curriculum includes:\nKey topics include:\n\nExploring a variety of graph types, including line graphs, scatter plots, and bar charts.\nPreparing and organizing data from diverse sources for visualization.\nTailoring graphics with a range of formats and styles, such as color schemes, fonts, and line types.\nMapping geographical data effectively.\nCreating dynamic and interactive visualizations.\nBuilding and deploying web applications using Shiny for data visualization.\nUtilizing Shiny dashboard to synthesize information and narrate data stories.\n\nThese areas will be explored through detailed, real-world examples to address common data analysis challenges.\nThroughout the course, practical experience is emphasized, with hands-on projects using tools like R, Python, RStudio, Quarto, Jupyter Notebook, Shiny, Git, and GitHub."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-3",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nRequired Materials\n\nData Visualization: A Practical Introduction by Kieran Healy\n\nA free online version of this book is available."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-4",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - R\n\nR for Data Science (1ed)\nR for Data Science (2ed)\nFundamentals of Data Visualization\nR Graphics Cookbook: Practical Recipes for Visualizing Data\nggplot2: elegant graphics for data analysis"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-5",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-5",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Python\n\nPython for Data Analysis (3rd Edition) by Wes McKinney\nIPython Interactive Computing and Visualization Cookbook\nPython Programming for Data Science by Tomas Beuzen\nCoding for Economists by Arthur Turrell\nPython for Econometrics in Economics by Fabian H. C. Raters\nQuantEcon DataScience - Python Fundamentals by Chase Coleman, Spencer Lyon, and Jesse Perla\nQuantEcon DataScience - pandas by Chase Coleman, Spencer Lyon, and Jesse Perla"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-6",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-6",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Website\n\nGuide for Quarto"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-7",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-7",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Requirements\n\nLaptop: You should bring your own laptop (Mac or Windows) to the classroom.\n\nIt is recommended to have 2+ core CPU, 4+ GB RAM, and 500+ GB disk storage in your laptop for this course.\n\n\n\n\nHomework: There will be six homework assignments.\nTeam Project: There will be one team project on a personal website.\nExams: There will be one Midterm Exam and one final exam.\n\nThe final exam is comprehensive.\n\nDiscussions: You are encouraged to participate in GitHub-based online discussions for each lecture, classwork, and homework.\n\nCheckout the netiquette policy in the syllabus."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-8",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-8",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nPersonal Website\n\nYou will create your own website using Quarto, R Studio, and Git.\nYou will publish your homework assignments and team project on your website.\nYour website will be hosted in GitHub.\nThe basics in Markdown will be discussed.\nReferences:\n\nQuarto Guide"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-9",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-9",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nTeam Project\n\nTeam formation is scheduled for late March.\n\n\n\nEach team must have one to two students.\nFor the team project, a team must choose data related to business or socioeconomic issues.\nThe project report should include exploratory data analysis using summary statistics, visual representations, and data wrangling.\nThe document for the team project must be published in each member‚Äôs website.\nThe project for the team project must include a Shiny dashboard.\nAny changes to team composition require approval from Byeong-Hak Choe."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-10",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-10",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nClass Schedule and Exams\n\nThere will be tentatively 14 lecture sessions.\nThe Midterm Exam is scheduled on March 7, 2024, Thursday, during the class time.\nThe due for the team project is scheduled on May 16, 2024, Thursday."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-11",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-11",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe first half of the course covers fundamentals of data visualization:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-12",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-12",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe second half of the course covers advanced data visualization and Shiny apps:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-13",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-13",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\\[\n\\begin{align}\n(\\text{Total Percentage Grade}) =&\\quad\\;\\, 0.05\\times(\\text{Total Attendance Score})\\notag\\\\\n&\\,+\\, 0.05\\times(\\text{Discussion Score})\\notag\\\\\n&\\,+\\, 0.05\\times(\\text{Website Score})\\notag\\\\\n&\\,+\\, 0.15\\times(\\text{Team Project and Website Score})\\notag\\\\\n&\\,+\\, 0.20\\times(\\text{Total Homework Score})\\notag\\\\\n&\\,+\\, 0.50\\times(\\text{Total Exam Score}).\\notag\n\\end{align}\n\\]"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-14",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-14",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\nYou are allowed up to 2 absences without penalty.\n\nSend me an email if you have standard excused reasons (illness, family emergency, transportation problems, etc.).\n\n\n\n\nFor each absence beyond the initial two, there will be a deduction of 1% from the Total Percentage Grade.\nParticipation in discussions will be evaluated by quantity and quality of discussions in the GitHub-based discussion boards.\nThe single lowest homework score will be dropped when calculating the total homework score.\n\nEach homework except for the homework with the lowest score accounts for 20% of the total homework score."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-15",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-15",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nMake-up Policy\n\nMake-up exams will not be given unless you have either a medically verified excuse or an absence excused by the University.\n\n\n\nIf you cannot take exams because of religious obligations, notify me by email at least two weeks in advance so that an alternative exam time may be set.\nA missed exam without an excused absence earns a grade of zero.\nLate submissions for homework assignment will be accepted with a penalty.\nA zero will be recorded for a missed assignment."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-personal-website",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-personal-website",
    "title": "Lecture 1",
    "section": "Why Personal Website?",
    "text": "Why Personal Website?\nBenefits of a Personal Website in Data Analytics\n\n\nHere are the example websites:\n\nByeong-Hak‚Äôs Website\nDANL Website Template\n\n\n\n\n\nProfessional Showcase: Display skills and projects\nVisibility and Networking: Increase online presence\nControlled Narrative: Manage your professional brand\nContent Sharing and Engagement: Publish articles, insights\nJob Opportunities: Attract potential employers and clients\nLong-term Asset: A growing repository of your career journey\nReproducible Research: Showcase data-driven reports"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases",
    "title": "Lecture 1",
    "section": "Why Python, R, and Databases?",
    "text": "Why Python, R, and Databases?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases-1",
    "title": "Lecture 1",
    "section": "Why Python, R, and Databases?",
    "text": "Why Python, R, and Databases?\n\nStack Overflow is the most popular Q & A website specifically for programmers and software developers in the world.\nSee how programming languages have trended over time based on use of their tags in Stack Overflow from 2008 to 2022.\n\n\n\nMost Popular Languagues\n\n\nData Science and Big Data"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\n\nData Science and Big Data Trend\nFrom 2008 to 2023\n\n\nProgrammers in 2024"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-1",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\nGenerative AI refers to a category of artificial intelligence (AI) that is capable of generating new content, ranging from text, images, and videos to music and code.\n\n\n\nIn the early 2020s, advances in transformer-based deep neural networks enabled a number of generative AI systems notable for accepting natural language prompts as input.\n\nThese include large language model (LLM) chatbots such as ChatGPT, Copilot, Bard, and LLaMA.\n\nChatGPT (Chat Generative Pre-trained Transformer) is a chatbot developed by OpenAI and launched on November 30, 2022.\n\nBy January 2023, it had become what was then the fastest-growing consumer software application in history."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-2",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\nUsers around the world have explored how to best utilize GPT for writing essays and programming codes.\n\n\n\n\nIs AI a threat to data analytics?\n\nFundamental understanding of the subject matter is still crucial for effectively utilizing AI‚Äôs capabilities.\n\n\n\n\n\nIf you use Generative AI such as ChatGPT, please try to understand what ChatGPT gives you.\n\nCopying and pasting it without any understanding harms your learning opportunity."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#learning-objectives",
    "title": "Lecture 1",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\nUnderstand the concept of the tools we will use throughout the course:\n\nGit\nGitHub\n\n\n\n\n\nSet up the tools in your laptop.\n\nAnaconda\nR, RStudio, and R Packages\nGit\nPersonal website"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git",
    "title": "Lecture 1",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\n\n\\(\\quad\\)\n\nGit is the most popular version control tool for any software development.\n\nIt tracks changes in a series of snapshots of the project, allowing developers to revert to previous versions, compare changes, and merge different versions.\nIt is the industry standard and ubiquitous for coding collaboration."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git-1",
    "title": "Lecture 1",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\n\ngit add .\ngit commit -m \"any message is here\"\ngit push -u origin main\n\\(\\quad\\)\n\n\nGit operates primarily through command-line tools (e.g., Terminal) and is local to a user‚Äôs computer.\n\nIt has a steep learning curve.\n\nWe will not do git collaboration but use only the 3-step git commands on Terminal to update a website."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-github",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-github",
    "title": "Lecture 1",
    "section": "What is GitHub?",
    "text": "What is GitHub?\n\nGitHub is a web-based hosting platform for Git repositories to store, manage, and share code.\n\n\n\nYour personal website will be hosted on a GitHub repository.\nCourse contents will be posted not only in Brightspace but also in our GitHub repositories (‚Äúrepos‚Äù) and websites.\nGithub is useful for many reasons, but the main reason is how user friendly it makes uploading and sharing code."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-anaconda",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-anaconda",
    "title": "Lecture 1",
    "section": "What is Anaconda?",
    "text": "What is Anaconda?\n\n\nAnaconda is an all-in-one Python distribution.\n\nAnaconda includes Python 3.x and its standard libraries such as pip, pandas, matplotlib, etc.\nAnaconda also includes several software applications of integrated development environment (IDE).\nAn IDE is a software application that provides comprehensive facilities (e.g., text code editor, graphical user interface (GUI)) to computer programmers for software development.\n\nFor our course, we will mainly use Google Colab.\n\nIf we need to use Python locally from your laptop, we can use Jupyter or Spyder IDE from Anaconda Distribution.\n\nIf you know how to set up Visual Studio Code (VS Code), go for it!\n\nVS Code is a free, open-source code editor developed by Microsoft, and is widely used by developers for programming and software development."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-r",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-r",
    "title": "Lecture 1",
    "section": "What is R?",
    "text": "What is R?\n\nR is a programming language and software environment designed for statistical computing and graphics.\nR has become a major tool in data analysis, statistical modeling, and visualization.\n\nIt is widely used among statisticians and data scientists for developing statistical software and performing data analysis.\nR is open source and freely available."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-rstudio",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-rstudio",
    "title": "Lecture 1",
    "section": "What is RStudio?",
    "text": "What is RStudio?\n\n\nRStudio is an integrated development environment (IDE) mainly for R.\nRStudio is a user-friendly interface that makes using R easier and more interactive.\n\nIt provides a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging, and workspace management.\nIt integrates well with Git."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#python-vs.-r",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#python-vs.-r",
    "title": "Lecture 1",
    "section": "Python vs.¬†R",
    "text": "Python vs.¬†R\n\n\n\nPython\n\nPython can be used for a wide range of applications, from web and game development to machine learning, making it a highly versatile language.\nPython has the largest community in the programming world, providing a wealth of resources, libraries, and frameworks.\n\n\nR\n\nR is particularly strong in statistical analysis and visualization, with a vast number of packages for statistical methods, including machine learning.\nThe community around R, particularly in academia and research, is very active.\n\n\n\n\nBoth Python and R hold significant value in industry and government sectors.\n\nHowever, Python is often more favored for roles in the industry, whereas R tends to be preferred for positions in the public sector."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-1",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nGetting a GitHub account\n\n\n\nCreate the GitHub account with your Geneseo email.\n\nGo to GitHub.\nClick ‚ÄúSign up for GitHub‚Äù.\n\n\n\n\n\nChoose your GitHub username carefully:\n\nhttps://USERNAME.github.io will be the address for your website.\nByeong-Hak‚Äôs GitHub username is bcdanl, so that Byeong-Hak owns the web address https://bcdanl.github.io.\n\n\n\n\n\nIt is better to have a username with all lower cases."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-2",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nParticipate in the Discussions!\n\nGo to Lecture 1 - Q & A.\nSign in with GitHub account, and then add comments to the board."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-3",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nAnaconda\n\nTo install Anaconda, go to the following download page:\n\nAnaconda Distribution.\nClick the ‚ÄúDownload‚Äù button."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-4",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR programming\n\nThe R language is available as a free download from the R Project website at:\n\nWindows: R for Windows\nMac: R for Mac\nDownload the file of R that corresponds to your Mac OS (Big Sur, Apple silicon arm64, High Sierra, El Capitan, Mavericks, etc.)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-5",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-5",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Studio\n\n\nThe RStudio Desktop is available as a free download from the following webpage:\n\nRStudio Download\n\nA recent version of RStudio includes Quarto, so that we do not need to install Quarto separately.\n\n\n\n\n\nFor Mac users, try below steps:\n\nRun RStudio-*.dmg file.\nFrom the Pop-up menu, click the RStudio icon.\nWhile clicking the RStudio icon, drag it to the Applications directory."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-6",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-6",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nScript Pane is where you write R commands in a script file that you can save.\n\n\n\nAn R script is simply a text file containing R commands.\nRStudio will color-code different elements of your code to make it easier to read.\n\n\n\n\n\n\n\n\nTo open an R script,\n\nFile \\(&gt;\\) New File \\(&gt;\\) R Script\n\n\n\n\n\n\nTo save the R script,\n\nFile \\(&gt;\\) Save"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-7",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-7",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nConsole Pane allows you to interact directly with the R interpreter and type commands where R will immediately execute them."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-8",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-8",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nEnvironment Pane is where you can see the values of variables, data frames, and other objects that are currently stored in memory.\nType below in the Console Pane, and then hit Enter:\n\na &lt;- 1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-9",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-9",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nPlots Pane contains any graphics that you generate from your R code."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-10",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-10",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Packages and tidyverse\n\nR packages are collections of R functions, compiled code, and data that are combined in a structured format."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-11",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-11",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\ntidyverse\n\n\n\nThe tidyverse is a collection of R packages designed for data science that share an underlying design philosophy, grammar, and data structures.\n\n\n\ntidyverse includes a lot of R packages, including ggplot2, dplyr, and tidyr.\nThe tidyverse packages work harmoniously together to make data manipulation, exploration, and visualization more."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-12",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-12",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nInstalling R packages with install.packages(\"packageName\")\n\nR packages can be easily installed from within R using functions install.packages(\"packageName\").\n\nTo install the R package tidyverse, type and run the following from R console:\n\n\n\ninstall.packages(\"tidyverse\")\n\nWhile running the above codes, you may encounter the question below from the R Console:\n\n\n\n\nMac: ‚ÄúDo you want to install from sources the packages which need compilation?‚Äù from Console Pane.\n\n\n\nWindows: ‚ÄúWould you like to use a personal library instead?‚Äù from Pop-up message.\n\n\n\n\nType no in the R Console, and then hit Enter."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-13",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-13",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nLoading R packages with library(packageName)\n\nOnce installed, a package is loaded into an R session using library(packageName) so that its functions and data can be used.\n\nTo load the R package tidyverse, type and run the following command from a R script:\n\n\nlibrary(tidyverse)\ndf_mpg &lt;- mpg\n\n\nmpg is the data.frame provided by the R package ggplot2, one of the R pakcages in tidyverse.\n\nSince tidyverse is installed, ggplot2 package is already installed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-14",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-14",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Options Setting\n\n\n\n\n\nThis option menu is found by menus as follows:\n\nTools \\(&gt;\\) Global Options\n\nCheck the boxes as in the left.\nChoose the option Never for  Save workspace to .RData on exit:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-15",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-15",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nPython in RStudio\n\nPython OptionR package, reticulate\n\n\n\nWe can run Python codes within RStudio.\nSelect Python interpreter in RStudio from Tools \\(&gt;\\) Global Options \\(&gt;\\) Python:\n\n\n\n\n\nInstall the R package, reticulate\n\ninstall.packages(\"reticulate\")\n\nThis package allows Quarto to use Python and R objects interactively within one Quarto document."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-16",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-16",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nBuilding a Website\n\nLet‚Äôs do Classwork 1."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-17",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-17",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nMarkdown\n\nJupyter Notebook, Quarto, and GitHub-based Discussion Boards use markdown as its underlying document syntax.\nLet‚Äôs do Classwork 2."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-1",
    "title": "Lecture 5",
    "section": "Data Visualization with ggplot()",
    "text": "Data Visualization with ggplot()\n\nStep 1. Figure out whether variables of interests are categorical or continuous.\nStep 2. Think which geometric objects, aesthetic mappings, and faceting are appropriate to visualize distributions and relationships.\nStep 3. If needed, transform a given data.frame (e.g., filtered observations, new variables, summarized data) and try new visualizations."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-2",
    "title": "Lecture 5",
    "section": "Data Visualization with ggplot()",
    "text": "Data Visualization with ggplot()\nGeometric objects\n\nA distribution of a categorical variable (e.g., geom_bar() and more)\nA distribution of a continuous variable (e.g., geom_histogram() and more)\nA relationship between two categorical variables (e.g., geom_bar() and more)\nA relationship between two continuous variables (e.g., geom_point() with geom_smooth() and more)\nA relationship between a categorical variable and a continuous variable (e.g., geom_boxplot() and more)\nA time trend of a categorical variable (e.g., geom_bar() and more)\nA time trend of a continuous variable (e.g., geom_line() and more)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-1",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\n\nWe will learn about how to transform data.frame before we send it to ggplot to be turned into a figure.\n\nWe will learn how to use some of dplyr‚Äôs ‚Äúaction verbs‚Äù to filter, select, group, mutate, summarize and transform our data.\n\nWe will expand the number of geoms we know about, and learn more about how to choose between them.\n\nDifferent geoms potentially requires different aesthetic mappings.\n\nWe discuss the five key dplyr functions to solve various data manipulation challenges"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\n\nFilter observations by logical conditions about values of variables (filter()).\nArrange/sort rows (arrange()).\nSelect variables by their names (select()).\nRename variables by their names (rename()).\nCreate new variables with functions of existing variables (mutate()).\nRelocate existing variables by their names (relocate()).\nCollapse a data.frame down to a summarized version of it (summarize()).\nGroup a data.frame by a categorical variable (group_by())."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-1",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\nTools -&gt; Global Options -&gt; Code -&gt; Check ‚ÄúUser native pipe operator‚Äù"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-2",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\n\nBecause the first argument is a data.frame and the output is a data.frame, dplyr verbs work well with the pipe, |&gt;\n\nCtrl + Shift + M for Windows; command + Shift + M for Mac.\n\nThe pipe (|&gt;) takes the thing on its left and passes it along to the function on its right so that\n\nf(x, y) is equivalent to x |&gt; f(y).\ne.g., filter(DATA_FRAME, LOGICAL_STATEMENT) is equivalent to DATA_FRAME |&gt;  filter(LOGICAL_STATEMENT).\n\nThe easiest way to pronounce the pipe (|&gt;) is ‚Äúthen‚Äù.\n\nThe pipe (|&gt;) is super useful when we have a chain of data transforming operations to do."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-3",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\n\nDATA_FRAME |&gt; filter(LOGICAL_CONDITIONS)\nDATA_FRAME |&gt; arrange(VARIABLES)\nDATA_FRAME |&gt; select(VARIABLES)\nDATA_FRAME |&gt; rename(NEW_VAR = EXISTING_VAR)\nDATA_FRAME |&gt; mutate(NEW_VARIABLE = ... )\nDATA_FRAME |&gt; relocate(VARIABLES)\nDATA_FRAME |&gt; group_by(VARIABLES)\nDATA_FRAME |&gt; summarize(NEW_VARIABLE = ...)\nThe subsequent arguments describe what to do with the data.frame, mostly using variable names."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-2",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\n\n\nLet‚Äôs describe how the distribution of religious preferences varies by regions in the US using the socviz::gss_sm data.frame."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-3",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\nGroup the data into the nested structure we want for our summary, such as ‚ÄúReligion by Region‚Äù or ‚ÄúAuthors by Publications by Year‚Äù.\nFilter or select pieces of the data by row, column, or both.\nMutate the data by creating new variables at the current level of grouping.\n\nThis adds new columns to the table without aggregating it.\n\nSummarize or aggregate the grouped data.\n\nThis creates new variables (e.g., means with mean(), sums with sum(), and counts with n()) at a higher level of grouping."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-4",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\nrel_by_region &lt;- gss_sm |&gt;\n    group_by( bigregion, religion ) |&gt;\n    summarize( N = n() ) |&gt;\n    mutate( freq = N / sum(N),\n            pct = round( (freq*100), 0) )\n\n\nWe use the dplyr functions, group_by(), filter(), select(), mutate(), and summarize(), to carry out these data transformation tasks within our pipeline (|&gt;, Ctrl/Cmd + Shift + M).\nHere we create a new data.frame called rel_by_region."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-5",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\np &lt;- ggplot( rel_by_region, \n             aes( x = bigregion, \n                  y = pct, \n                  fill = religion))\n\np + geom_col( position = \"dodge2\" ) +\n    labs(x = \"Region\", \n         y = \"Percent\", \n         fill = \"Religion\") +\n    theme(legend.position \n            = \"top\") \n\n\n\n\n\n\n\nNow that we are working directly with percentage values in a summary table, we can use geom_col() instead of geom_bar()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-6",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\nLet‚Äôs replicate the above bar chart."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-7",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\norgandata\nskimr::skim(organdata)\n\n\nLet‚Äôs move to a new dataset, the socviz::organdata data.frame."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-8",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = year, \n                  y = donors))\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-9",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + \n  geom_line(aes(group = country)) + \n  facet_wrap(~ country) +\n  theme(axis.text.x = \n          element_text(angle = 45))\n\n\n\n\n\n\n\nThe above describes a yearly trend of donors for each country."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-10",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs focus on the country-level variation of donors using geom_boxplot(), but without paying attention to the time trend."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-11",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-11",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nlevels(organdata$country)\n\n\norgandata &lt;- organdata |&gt;\n  mutate(country = \n           fct_reorder(country, \n                       donors, na.rm = T) ) \n\n\nWe can reorder the levels using fct_reorder(f, x, fun), which can take three arguments.\n\nf: the factor whose levels we want to modify.\nx: a numeric vector that we want to use to reorder the levels.\nOptionally, fun: a function that‚Äôs used if there are multiple values of x for each value of f. The default value is median."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-12",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-12",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = country, \n                  y = donors))\np + geom_boxplot() + \n  labs(x = NULL) + \n  coord_flip()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-13",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-13",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = \n                    reorder(\n                      country, \n                      donors, \n                      na.rm=TRUE),\n                  y = donors, \n                  fill = world))\np + geom_boxplot() + \n  labs(x=NULL) +\n  coord_flip() + \n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-14",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-14",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nSometimes it is better to sort the data with a categorical variable when plotting a bar chart or a Cleveland dotplot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-15",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-15",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n    summarize(donors_mean= mean(donors, na.rm = TRUE),\n              donors_sd = sd(donors, na.rm = TRUE),\n              gdp_mean = mean(gdp, na.rm = TRUE),\n              health_mean = mean(health, na.rm = TRUE),\n              roads_mean = mean(roads, na.rm = TRUE),\n              cerebvas_mean = mean(cerebvas, na.rm = TRUE))\n\n\nSummarize the data.frame organdata to calculate the mean and the standard deviation of each numeric variable for each consent_law-country pair.\nWould there be a simpler way to do the task above?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-16",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-16",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n  summarize_if(is.numeric, lst(mean, sd), na.rm = TRUE) |&gt;\n  ungroup()\n\n\nWhat we would like to do is apply the mean() and sd() functions to every numerical variable in organdata, but only the numerical ones.\n\nsummarize_if( is.numeric, lst(mean, sd), na.rm = T) works really well."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-17",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-17",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above dot plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-18",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-18",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above faceted dot plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-19",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-19",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nCleveland dotplots are generally preferred to bar or column charts.\n\nWhen making them, put the categories on the y-axis and order them in the way that is most relevant to the numerical summary you are providing.\nThis sort of plot is also an excellent way to summarize model results or any data with error ranges."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-20",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-20",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nUsing geom_pointrange(), we can tell ggplot to show us a point estimate and a range around it.\n\nWith geom_pointrange(), we map our x and y variables as usual, but the function needs a little more information than geom_point(), for example (ymin, ymax) or (xmin, xmax)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-21",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-21",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above dot-and-whisker plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-1",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nWe have used scale_x_log10(), scale_x_continuous() and otherscale_*_*() functions to adjust axis labels.\nWe used the guides() function to remove the legends for a color mapping and a label mapping.\nWe also used the theme() function to move the position of a legend from the side to the top of a figure.\nWhat are the differences between the scale_*_*() functions, the guides() function, and the theme() function?\nWhen do we know to use one rather than the other? Why are there so many scale_*_*() functions? How can we tell which one we need?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-2",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nHere is a rough and ready starting point:\nEvery aesthetic mapping has a scale.\n\nIf we want to adjust how that scale is marked or graduated, then we use a scale_*_*() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-3",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nMany scales come with a legend or key to help the reader interpret the graph. These are called guides.\n\nWe can make adjustments to them with the guides() function.\nPerhaps the most common use case is to make the legend disappear.\nAnother is to adjust the arrangement of the key in legends and colorbars.\nguides is also one of the parameters in scales_*_*()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-4",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nGraphs have other features not strictly connected to the logical structure of the data being displayed.\n\nThese include things like their background color, the typeface used for labels, or the placement of the legend on the graph.\nTo adjust these, use the theme() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-5",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = world))\np + geom_point()\n\n\nscale_*_*() and guides() are closely connected.\n\nThe guides() provides information about the scale, such as in a legend or colorbar.\nSo, it is possible to make adjustments to guides from inside the various scale_*_*() functions.\n\nThe x and y scales are both continuous.\nThe color scale is discrete.\n\nA color or fill mapping can also be a continuous quantity (colorbar)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-6",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;\n\n\n\n\nBecause we have several potential mappings, and each mapping might be to one of several different scales, we end up with a lot of individual scale_*_* functions.\n\nEach deals with one combination of mapping and scale. Too many to memorize.\nThey are named according to a consistent logic:\n\nhttps://ggplot2tor.com/scales provides a complete guide to scales.\n\nThis app makes it easy for you to find the right scales and arguments for your variable types and aesthetics."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-7",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nLet‚Äôs replicate the following:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-8",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-9",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-10",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above using theme()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-1",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = roads_mean, \n                  y = donors_mean))\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country))\n\n\n\n\n\n\n\nIt can sometimes be useful to plot the labels along with the points in a scatterplot, or just plot informative labels directly using geom_text()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-2",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country), \n            hjust = 0)\n\n\n\n\n\n\n\nBy default, the text is plotted right on top of the points.\nhjust = 0 will left justify the label; hjust = 1 will right justify it."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-3",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-4",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\ninstall.packages(\"ggrepel\")\nlibrary(ggrepel)\n\n\nInstead of wrestling any further with geom_text(), we can use ggrepel::geom_text_repel() instead."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-5",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\nsocviz::elections_historic |&gt; select(2:7) \n\n\nLet‚Äôs use some historical U.S. presidential election data provided in the socviz library."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-6",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\np &lt;- ggplot(elections_historic, aes(x = popular_pct, y = ec_pct,\n                                    label = winner_label))\n\n\nStep 1. Let‚Äôs map aethetics to variables"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-7",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- p + \n    geom_hline(yintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_vline(xintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_point() +\n    geom_text_repel()\np\n\n\n\n\n\n\n\nStep 2. Then, add geometric objects to ggplot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-8",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- p + \n     scale_x_continuous(\n       labels = scales::percent) +\n     scale_y_continuous(\n       labels = scales::percent) \np\n\n\n\n\n\n\n\nStep 3. Let‚Äôs set the scales for x and y."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-9",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np_title &lt;- \"Presidential Elections: Popular & Electoral College Margins\"\np_subtitle &lt;- \"1824-2016\"\np_caption &lt;- \"Data for 2016 are provisional.\"\nx_label &lt;- \"Winner's share of Popular Vote\"\ny_label &lt;- \"Winner's share of Electoral College Votes\"\n\np + labs(x = x_label, \n         y = y_label, \n         title = p_title, \n         subtitle = p_subtitle,\n         caption = p_caption)\n\n\n\n\n\n\n\nStep 4. Let‚Äôs set the labels."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-10",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean, \n                  y = health_mean))\n\np + geom_point() +\n    geom_text_repel(\n      data = filter(by_country, \n                    gdp_mean &gt; 25000),\n      mapping = \n        aes(label = country))\n\n\n\n\n\n\n\nSometimes we want to pick out some points of interest in the data without labeling every single item.\n\nWe do this using the filter() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-11",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-11",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean, \n                  y = health_mean))\np + geom_point() +\n    geom_text_repel(\n      data = \n        filter(by_country,\n               gdp_mean &gt; 25000 | \n                 health_mean &lt; 1500 |\n                 country %in% \"Belgium\"),\n      mapping = \n        aes(label = country))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-12",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-12",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\n# creating a dummy variable for labels\norgandata$ind &lt;- \n  organdata$ccode %in% c(\"Ita\", \"Spa\") & \n  organdata$year &gt; 1998   \np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = ind))\np + geom_point() +\n    geom_text_repel(\n      data = filter(organdata, ind),\n      mapping = aes(label = ccode)) +\n    guides(label = \"none\", \n           color = \"none\")\n\n\n\n\n\n\n\nWe can also add a logical variable (either TRUE or FALSE) to label specific points using filter()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-13",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-13",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\nLet‚Äôs replicate the above using ggplot::mtcars:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-14",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-14",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"text\")\n\n\n\np &lt;- ggplot(data = organdata, \n            mapping = \n              aes(x = roads, \n                  y = donors))\np + geom_point() + \n  annotate(geom = \"text\", \n           x = 91, y = 33,\n           label = \"A surprisingly high \\n recovery rate.\",\n           hjust = 0)\n\n\n\n\n\n\n\nWe can use annotate() to annotate the figure directly."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-15",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-15",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"rect\")\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors))\np + geom_point() +\n    annotate(geom = \"rect\", \n             xmin = 125, xmax = 155,\n             ymin = 30, ymax = 35, \n             fill = \"red\", \n             alpha = 0.2) + \n    annotate(geom = \"text\", \n             x = 157, y = 33,\n             label = \"A surprisingly high \\n recovery rate.\", \n             hjust = 0)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-16",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-16",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"point\")\n\n\np &lt;- ggplot(mpg, aes(displ, hwy)) +\n  geom_point(\n    data = \n      filter(mpg, \n             manufacturer == \"subaru\"), \n    color = \"orange\", \n    size = 3) +\n  geom_point() \np + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40, \n           colour = \"orange\", \n           size = 3) + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40) + \n  annotate(geom = \"text\", \n           x = 5.6, y = 40, \n           label = \"subaru\", \n           hjust = \"left\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-17",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-17",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"curve\")\n\n\np + \n  annotate(\n    geom = \"curve\", \n    x = 4, y = 35, \n    xend = 2.65, yend = 27, \n    curvature = .3, \n    arrow = \n      arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", \n           x = 4.1, y = 35, \n           label = \"subaru\", \n           hjust = \"left\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#learning-objectives",
    "title": "Lecture 3",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\n\nggplot grammar"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#exploratory-data-analysis",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#exploratory-data-analysis",
    "title": "Lecture 3",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\n\n\n\nIn data visualization, you‚Äôll turn data into plots.\nIn data transformation, you‚Äôll learn the key verbs that allow you to select important variables, filter out key observations, create new variables, and compute summaries.\nIn exploratory data analysis, you‚Äôll combine summary statistics (skim()), visualization, and transformation with your curiosity and skepticism to ask and answer interesting questions about data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#data-visualization",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#data-visualization",
    "title": "Lecture 3",
    "section": "Data visualization",
    "text": "Data visualization\n\n‚ÄúThe simple graph has brought more information to the data analyst‚Äôs mind than any other device.‚Äù John Tukey\n\n\nData visualization is the creation and study of the visual representation of data\nMany tools for visualizing data ‚Äì R is one of them\nMany approaches/systems within R for making data visualizations ‚Äì ggplot2 is one of them, and that‚Äôs what we‚Äôre going to use"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#grammar-of-graphics",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#grammar-of-graphics",
    "title": "Lecture 3",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-1",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nIn the plot above, one group of points (highlighted in red) seems to fall outside of the linear trend.\n\nHow can you explain these cars? Are those hybrids?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-2",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nAn aesthetic is a visual property (e.g., size, shape, color) of the objects (e.g., class) in your plot.\nYou can display a point in different ways by changing the values of its aesthetic properties."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-3",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-4",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a shape to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   shape = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-5",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a size to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   size = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-6",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding an alpha (transparency) to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   alpha = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-7",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting problem\n\nMany points overlap each other.\n\nThis problem is known as overplotting.\n\nWhen points overlap, it‚Äôs hard to know how many data points are at a particular location.\nOverplotting can obscure patterns and outliers, leading to potentially misleading conclusions.\nWe can set a transparency level (alpha) between 0 (full transparency) and 1 (no transparency)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-8",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and alpha\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .2)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-9",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and size\n\nWe can also consider setting size smaller than 1.\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             size = .5)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-10",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             color = \"blue\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-11",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nTo set an aesthetic manually, set the aesthetic by name as an argument of your geom_ function; i.e.¬†it goes outside of aes().\n\nYou‚Äôll need to pick a level that makes sense for that aesthetic:\n\nThe name of a color as a character string.\nThe size of a point in mm.\nThe shape of a point as a number, as shown below."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-12",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-12",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot?\n\n\nggplot(data = mpg) + \n  geom_point( mapping = \n                aes(x = displ, \n                    y = hwy, \n                    color = \"blue\") )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#common-problems-in-ggplot",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#common-problems-in-ggplot",
    "title": "Lecture 3",
    "section": "Common problems in ggplot()",
    "text": "Common problems in ggplot()\n\nOne common problem when creating ggplot2 graphics is to put the + in the wrong place.\n\n\nggplot(data = mpg) \n + geom_point( mapping = \n                 aes(x = displ, \n                     y = hwy) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-1",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOne way to add a variable, particularly useful for categorical variables, is to use facets to split our plot into facets, subplots that each display one subset of the data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-2",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot by a single variable, use facet_wrap().\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( . ~ class, nrow = 2)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-3",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot on the combination of two variables, add facet_grid( VAR_ROW ~ VAR_COL ) to our plot call."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-4",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nThe first argument of facet_grid() is also a formula.\n\nThis time the formula should contain two variable names separated by a ~."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-5",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-6",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOption scales in facet_*() is whether scales is\n\nfixed (\"fixed\", the default),\nfree in one dimension (\"free_x\", \"free_y\"), or\nfree in two dimensions (\"free\")."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-7",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl, \n             scales = \"free_x\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-1",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nHow are these two plots similar?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-2",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nA geom_*() is the geometrical object that a plot uses to represent data.\n\nBar charts use geom_bar();\nLine charts use geom_line();\nBoxplots use the geom_boxplot();\nScatterplots use the geom_point();\nFitted lines use the geom_smooth();\nand many more!\n\nWe can use different geom_*() to plot the same data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-3",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nScatterplot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-4",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nFitted lines\n\n\nggplot(data = mpg) + \n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-5",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nEvery geom function in ggplot2 takes a mapping argument.\nHowever, not every aesthetic works with every geom.\n\nWe could set the shape of a point, but you couldn‚Äôt set the shape of a line;\nWe could set the linetype of a line."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-6",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy, \n                      linetype = drv) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-7",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nSetting method = lm manually in geom_smooth() gives a straight line that fits into data points.\n\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy),\n               method = lm)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-8",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can set the group aesthetic to a categorical variable to draw multiple objects.\n\nggplot2 will draw a separate object for each unique value of the grouping variable."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-9",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-10",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy, \n                    group = drv))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-11",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIn practice, ggplot2 will automatically group the data for these geoms whenever we map an aesthetic to a discrete variable (as in the linetype example).\n\n\n\nggplot(data = mpg) +\n  geom_smooth(\n    mapping = aes(x = displ, \n                  y = hwy, \n                  color = drv),\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-12",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-12",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nTo display multiple geometric objects in the same plot, add multiple geom_*() functions to ggplot():\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy)) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy), \n              method = lm, \n              color = 'red')\n\n\n\n\n\n\n\nUsing geom_point(), geom_smooth(), and geom_smooth(method = lm) together is an excellent option to visualize the relationship between the two variables."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-13",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-13",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIf we place mappings in a geom function, ggplot2 will treat them as local mappings for the layer.\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class),\n             alpha = .3) + \n  geom_smooth()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-14",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-14",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class), \n             alpha = .3) + \n  geom_smooth(data = \n                filter(mpg, \n                       class == \"subcompact\"), \n              se = FALSE)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-15",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-15",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can use the same idea to specify different data for each layer.\nHere, our smooth line displays just a subset of the mpg data.frame, the subcompact cars.\n\nfilter() is the tidyverse-way to filter observations in a data.frame.\n\nThe local data argument in geom_smooth() overrides the global data argument in ggplot() for that layer only.\nThe standard error (se) tells us how much the predicted values from a model might differ from the actual values we‚Äôre trying to predict.\n\nIt‚Äôs a way to measure how good a quality of prediction is."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-1",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nMany graphs, including bar charts, calculate new values to plot:\n\ngeom_bar(), geom_histogram(), and geom_freqpoly() bin our data and then plot bin counts, the number of observations that fall in each bin.\ngeom_boxplot() computes a summary of the distribution and then display a specially formatted box.\ngeom_smooth() fits a model to our data and then plot predictions from the model."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-2",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA histogram geom_histogram() is a continuous version of a bar chart.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-3",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nWhen using geom_histogram(), we should experiment on either bins or binwidth.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-4",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA frequency polygon geom_freqpoly() is a line version of a histogram.\n\n\n\nggplot(diamonds) +\n  geom_freqpoly(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#a-little-bit-of-math-for-log",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#a-little-bit-of-math-for-log",
    "title": "Lecture 3",
    "section": "A Little Bit of Math for log()",
    "text": "A Little Bit of Math for log()\n\nlog functionslog examples\n\n\n\nThe logarithm function, \\(y = \\log_{b}\\,(\\,x\\,)\\), looks like ‚Ä¶.\n\n\n\n\n\n\n\n\\(\\log_{10}\\,(\\,100\\,)\\): the base \\(10\\) logarithm of \\(100\\) is \\(2\\), because \\(10^{2} = 100\\)\n\\(\\log_{e}\\,(\\,x\\,)\\): the base \\(e\\) logarithm is called the natural log, where \\(e = 2.718\\cdots\\) is the mathematical constant, the Euler‚Äôs number.\n\\(\\log\\,(\\,x\\,)\\) or \\(\\ln\\,(\\,x\\,)\\): the natural log of \\(x\\) .\n\\(\\log_{e}\\,(\\,7.389\\cdots\\,)\\): the natural log of \\(7.389\\cdots\\) is \\(2\\), because \\(e^{2} = 7.389\\cdots\\)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nNYC Housing Sales\n\nlibrary(tidyverse)\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\nsale_df contains data for residential property sales from September 2017 and August 2018 in NYC.\n\nLet‚Äôs focus on sale.price, a property‚Äôs sales price."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-1",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nPercentage Change\n1. We should consider using a logarithmic scale when percent change, or change in orders of magnitude, is more important than changes in absolute units.\n\nFor small changes in variable \\(x\\) from \\(x_{0}\\) to \\(x_{1}\\), the following can be shown:\n\n\\[\\Delta \\log(x) \\,= \\, \\log(x_{1}) \\,-\\, \\log(x_{0})\n\\approx\\, \\frac{x_{1} \\,-\\, x_{0}}{x_{0}}\n\\,=\\, \\frac{\\Delta\\, x}{x_{0}}.\\]\n\nFor example, a difference in sale.price of $10,000 means something very different across people with different income/wealth levels."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-2",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nWide Range of Skewed Data\n2. We should consider using a log scale when a variable is heavily skewed. - It can help visualize both small and large values effectively.\n\n\nggplot(sale_df, \n       aes(x = sale.price), \n       bins = 500) +\n  geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-5",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nBar charts seem simple, but they are interesting because they reveal something subtle about plots.\nConsider a basic bar chart, as drawn with geom_bar().\nThe following bar chart displays the total number of diamonds in the ggplot2::diamonds data.frame, grouped by cut.\nThe diamonds data.frame comes in ggplot2 and contains information about ~54,000 diamonds, including the price, carat, color, clarity, and cut of each diamond."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-6",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\ngeom_bar() bins our data and then plot bin counts, the number of observations that fall in each bin.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = aes(x = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-7",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nThe algorithm used to calculate new values for a graph is called a stat, short for statistical transformation.\nThe figure below describes how this process works with geom_bar()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-8",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\nThere are three reasons we might need to use a stat explicitly:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-9",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\n1. We might want to override the default stat.\n\n\n\n# to make a simple data.frame\ndemo &lt;- tribble(         \n  ~cut,         ~freq,\n  \"Fair\",       1610,\n  \"Good\",       4906,\n  \"Very Good\",  12082,\n  \"Premium\",    13791,\n  \"Ideal\",      21551 )\n\nggplot(data = demo) +\n  geom_bar(mapping = \n             aes(x = cut, \n                 y = freq), \n           stat = \"identity\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-10",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nCount vs.¬†Proportion\n\n2. We might want to override the default mapping from transformed variables to aesthetics.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 y = stat(prop), \n                 group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-11",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nStat summary\n\n3. We might want to draw greater attention to the statistical transformation in our code.\n\n\n\nggplot(data = diamonds) + \n  stat_summary(\n    mapping = aes(x = cut, y = depth),\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-1",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\ncolor and fill aesthetic\n\nWe can color a bar chart using either the color aesthetic, or, more usefully, fill.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 color = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-2",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nfill\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-3",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nNote that the bars are automatically stacked if we map the fill aesthetic to another variable.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-4",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nThe stacking is performed automatically by the position adjustment specified by the position argument.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity),\n           position = \"stack\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-5",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\n\nIf we don‚Äôt want a stacked bar chart with counts, we can use one of two other position options: fill or dodge.\nposition = \"fill\" works like stacking, but makes each set of stacked bars the same height.\n\nThis makes it easier to compare proportions across groups.\n\nposition = \"dodge\" places overlapping objects directly beside one another."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-6",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"fill\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"fill\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-7",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"dodge\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"dodge\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-1",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ngeom_abline()\n\nWhat does geom_abline() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() # math: y = ax + b"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-2",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ncoord_fixed()\n\nWhat does coord_fixed() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() +\n  coord_fixed()"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html",
    "href": "danl-cw/danl-399-cw-02.html",
    "title": "Classwork 2",
    "section": "",
    "text": "Markdown is a lightweight markup language with plain-text formatting syntax. Its main goal is to be readable and easy to write, even when viewed as plain text. Markdown is widely used for creating formatted text on the web and in various applications such as Quarto.\n\n\n\n\nHeadings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL), and images with ![Alt Text](Image URL).\n[DANL 210](https://bcdanl.github.io/210)\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)\n\n\n\n\n\n\n&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```\n\n\n\n\n\nDo the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji.\n\n\n\n\n\n\nQuarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#basic-syntax",
    "href": "danl-cw/danl-399-cw-02.html#basic-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "Headings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL), and images with ![Alt Text](Image URL).\n[DANL 210](https://bcdanl.github.io/210)\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#advanced-syntax",
    "href": "danl-cw/danl-399-cw-02.html#advanced-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#practice-problems",
    "href": "danl-cw/danl-399-cw-02.html#practice-problems",
    "title": "Classwork 2",
    "section": "",
    "text": "Do the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji."
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#references",
    "href": "danl-cw/danl-399-cw-02.html#references",
    "title": "Classwork 2",
    "section": "",
    "text": "Quarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-cw/danl-399-cw-01.html",
    "href": "danl-cw/danl-399-cw-01.html",
    "title": "Classwork 1",
    "section": "",
    "text": "Getting a GitHub account\nStep 1. Create the GitHub account with your Geneseo email.\n\nGo to GitHub.\nClick ‚ÄúSign up for GitHub‚Äù.\n\n\nChoose your GitHub username carefully:\n\nhttps://USERNAME.github.io will be the address for your website.\nByeong-Hak‚Äôs GitHub username is bcdanl, so that Byeong-Hak owns the web address https://bcdanl.github.io.\n\nIt is recommended to have a username with all lower cases.\n\n\n\n\n\nInstalling git if you do not have one.\nStep 2.\n\nCheck whether git is installed in your laptop.\n\n\nFrom the Console Pane in RStudio, click Terminal tab.\n\n\n\n\n\nFrom the Terminal, run the following command to check if your laptop has git installed.\n\ngit --version\n\nIf your computer has git installed, you will see the message below and you do not need to install git:\n\ngit version 2.xx\n\nIf your computer does not have git installed, you will see the message below and you need to install git:\n\n'git' is not recognized as an internal or external command\n\n\nInstall git if you do not have one. Move to the next step if you have git installed in your laptop.\n\n\n\n\nMac\n\nGo to http://git-scm.com/downloads, and download the file.\nClick ‚ÄúmacOS‚Äù, scroll down the webpage, and then click ‚Äúinstaller‚Äù from the Binary installer section.\nRun the downloaded file.\n\n\n\n\nWindows\n\nGo to https://gitforwindows.org, and download the file.\nRun the downloaded file.\n\n\n\n\n\nKeep clicking ‚ÄúNext‚Äù to complete the installation of git.\nAfter the git installation is done, close RStudio and re-open it.\n\n\n\n\nSetting up GitHub Credential on your local Git.\nStep 3. In Terminal, run the following commands one by one:\ngit config --global user.email \"YOUR_EMAIL_ADDRESS\"\ngit config --global user.name \"YOUR_USERNAME\"\nFor example, the email address for my GitHub account is bchoe@geneseo.edu, and my GitHub username is bcdanl, so that I ran below:\ngit config --global user.email \"bchoe@geneseo.edu\"\ngit config --global user.name \"bcdanl\"\n\nStep 4. Obtain a personal access token (PAT) from GitHub.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"usethis\")\nusethis::create_github_token()\n\nThen, click ‚ÄúGenerate token‚Äù in the pop-upped web browser.\nWe can think of GitHub‚Äôs personal access token as a password that expires. You can decide how long it remains valid. My recommendation is to set its expiration for May 31, 2024, or later.\n\n\n\n\n\nThen, copy the generated PAT, and paste it to your clipboard or R script.\n\n\nStep 5. Set the GitHub credential using the PAT.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"gitcreds\")\ngitcreds::gitcreds_set()\n\nYou will be asked to provide your PAT.\nPaste your PAT to the RStudio Console, and then hit Enter.\n\n\n\n\n\n\n\nNote\n\n\n\n\nIt does not harm to create multiple PAT for one GitHub account.\nAfter the PAT expires, you should repeat the following if you want to update your GitHub website:\n\n\nCreate a new PAT:\n\nusethis::create_github_token()\n\nReplace the current PAT with the new PAT:\n\ngitcreds::gitcreds_set()\n\nSelect the option 2: Replace these credentials by typing 2 and hitting Enter on R Console.\n\n\n\n\n\n\nEstablishing the Connection between GitHub repo and your local Git\nStep 6. Login to your GitHib and make the repository.\n\nFrom https://github.com, click the plus [+] icon in the upper right corner and select ‚ÄúNew repository‚Äù.\nName this repo USERNAME.github.io, which will be the domain for your website.\n\n\ne.g., If your GitHub username is abc9, the name of your repo should be abc9.github.io, not abc_9.github.io.\n\n\nThen, copy the web address of your GitHub repo, https://github.com/USERNAME/USERNAME.github.io\n\n\nFor example, the web address for Byeong-Hak‚Äôs GitHub repo is https://github.com/bcdanl/bcdanl.github.io.\n\n\nStep 7. Create a RStudio project with Version Control\n\n\n\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúVersion Control‚Äù &gt; ‚ÄúGit‚Äù\nPaste the web address of your GitHub repo to the Repository URL menu.\nClick ‚ÄúBrowse‚Äù to select the parent directory for your local project directory (I recommend ‚ÄúDocuments‚Äù folder.)\nClick ‚ÄúCreate‚Äù\n\n\n\n\n\n\n\nNote\n\n\n\nIf Step 7 does not work on your laptop, try below Steps 7-1 and 7-2 instead. If Step 7 DOES work well, skip Steps 7-1 and 7-2.\n\n\nStep 7-1. Use git clone to establish the connection between GitHub repo and your local laptop:\n\nChange directory to ‚ÄúDocuments‚Äù in Terminal using cd command.\n\ncd &lt;pathname of \"Documents\" directory&gt;\n\nHere, you need to know the pathname of ‚ÄúDocuments‚Äù directory.\nFor example, LAPTOP_USERNAME below is not your GitHub username but one for your local laptop.\n\nMac\ncd /Users/LAPTOP_USERNAME/Documents\nWindows\ncd C:/Users/LAPTOP_USERNAME/Documents\n\nUse git clone to creates a local copy of the GitHub Repository.\n\ngit clone &lt;repository-url&gt;\n\nFor example,\n\ngit clone https://github.com/USERNAME/USERNAME.github.io\n\nStep 7-2. Create a RStudio project from Existing Directory\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúExisting Directory‚Äù\nClick ‚ÄúBrowse‚Äù to select the local copy of the GitHub Repository\nClick ‚ÄúCreate Project‚Äù\n\n\n\n\nDownloading Website Template Files\nStep 8. Download the files of website template:\n\nGo to the following webpage: https://github.com/bcdanl/danl-website-template\nFrom the webpage above, click the green icon &lt; &gt; Code, and then click ‚ÄúDownload Zip‚Äù\nExtract the Zip file you have downloaded\nIf there are the files, .gitignore, .DS_Store, or *.Rproj, in the folder, delete all of them.\nMove all the files that were compressed in the Zip file to your local project directory, USERNAME.github.io.\n\n\nSelect all the files in the danl-website-template folder (Tip: Ctrl + A (Windows) / command + A (Mac) selects all files in a directory).\nThen, Ctrl + C (Windows) / command + C (Mac) to copy them.\nThen, go to your local project directory USERNAME.github.io.\nThen, Ctrl + V (Windows) / command + V (Mac) to paste them to your local project directory USERNAME.github.io.\n\n\nRemove the danl-website-template directory from your local project directory, if you have one.\n\n\nAll the website files should be located at the same level with the R Project file (USERNAME.github.io.Rproj), shown below.\n\n\n\n\n\n\n\nPushing the Website Files to the GitHub repository\n\n\n\nStep 8. Push the files to your GitHub repository\n\nOn Terminal within RStudio, execute the following 3-step git commands, which will stage, commit, and push all the files in the local working directory to your GitHub repository:\n\n\ngit add . adds changes in your local working directory (e.g., edited files, new files, deleted files) to the staging area, which is a temporary area where you can prepare your next commit\n\ngit add .\n\ngit commit -m \"...\" records the changes in the staging area as a new snapshot in the local working directory, along with a message describing the changes.\n\ngit commit -m \"any message to describe the changes\"\n\ngit push -u origin main uploads the local changes to the online repository in GitHub.\n\ngit push -u origin main\n\n\n\n\n\n\nNote\n\n\n\nIf git push -u origin main gives error, try the following:\ngit push -u origin master\n\nThe name of the default branch in a GitHub repo is usually main, but sometimes GitHub gives master default branch instead.\n\n\n\n\nStep 9. Check whether the files are well uploaded.\n\nGo to the webpages of your GitHub repository and your website:\n\nhttps://github.com/USERNAME/USERNAME.github.io.git\nhttps://USERNAME.github.io\nRefresh the webpages (Ctrl + R for Windows users; cmd + R for Mac users)\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html",
    "href": "danl-cw/danl-399-cw-05.html",
    "title": "Classwork 5",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\nWhat does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)\n\n\n\n\n\n\n\nRecreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1a.",
    "href": "danl-cw/danl-399-cw-05.html#q1a.",
    "title": "Classwork 5",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1b.",
    "href": "danl-cw/danl-399-cw-05.html#q1b.",
    "title": "Classwork 5",
    "section": "",
    "text": "What does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1c.",
    "href": "danl-cw/danl-399-cw-05.html#q1c.",
    "title": "Classwork 5",
    "section": "",
    "text": "Recreate the R code necessary to generate the following graphs."
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1d.",
    "href": "danl-cw/danl-399-cw-05.html#q1d.",
    "title": "Classwork 5",
    "section": "",
    "text": "Use the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q2a.",
    "href": "danl-cw/danl-399-cw-05.html#q2a.",
    "title": "Classwork 5",
    "section": "Q2a.",
    "text": "Q2a.\nWhat does geom_col() do? How is it different to geom_bar()?\nAnswer:"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q2b.",
    "href": "danl-cw/danl-399-cw-05.html#q2b.",
    "title": "Classwork 5",
    "section": "Q2b.",
    "text": "Q2b.\n\nInstall the R package, nycflights13, which provides the flights data.frame.\nVisualize the distribution of carrier.\nVisualize how the distribution of carrier varies by origin.\n\nAnswer:"
  },
  {
    "objectID": "danl-class/danl-399-note-05-2024-0223.html",
    "href": "danl-class/danl-399-note-05-2024-0223.html",
    "title": "Lecture 5 - Note",
    "section": "",
    "text": "DT::datatable(gapminder)\n\n\n\n\n\n\n\nlength(unique(gapminder$country))\n\n[1] 142\n\nlength(unique(gapminder$continent))\n\n[1] 5\n\n\n\ndatatable(gss_sm)\n\n\n\n\n\n\n\n?gss_sm\nskimr::skim(gss_sm)\n\n\nData summary\n\n\nName\ngss_sm\n\n\nNumber of rows\n2867\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nfactor\n23\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nballot\n0\n1.0\n1\n1\n0\n3\n0\n\n\nsibs\n5\n1.0\n1\n2\n0\n26\n0\n\n\npres12\n1137\n0.6\n1\n1\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ndegree\n8\n1.00\nFALSE\n5\nHig: 1461, Bac: 536, Lt : 328, Gra: 318\n\n\nrace\n0\n1.00\nFALSE\n3\nWhi: 2100, Bla: 490, Oth: 277\n\n\nsex\n0\n1.00\nFALSE\n2\nFem: 1591, Mal: 1276\n\n\nregion\n0\n1.00\nFALSE\n9\nSou: 550, E. : 502, Pac: 397, Mid: 313\n\n\nincome16\n271\n0.91\nFALSE\n26\n$60: 258, $40: 218, $75: 214, $50: 207\n\n\nrelig\n18\n0.99\nFALSE\n13\nPro: 1371, Cat: 649, Non: 619, Jew: 51\n\n\nmarital\n1\n1.00\nFALSE\n5\nMar: 1212, Nev: 806, Div: 495, Wid: 251\n\n\npadeg\n698\n0.76\nFALSE\n5\nHig: 1010, Lt : 663, Bac: 273, Gra: 159\n\n\nmadeg\n200\n0.93\nFALSE\n5\nHig: 1349, Lt : 736, Bac: 292, Gra: 146\n\n\npartyid\n32\n0.99\nFALSE\n8\nNot: 496, Ind: 473, Str: 463, Ind: 405\n\n\npolviews\n111\n0.96\nFALSE\n7\nMod: 1032, Con: 426, Sli: 382, Lib: 350\n\n\nhappy\n8\n1.00\nFALSE\n3\nPre: 1601, Ver: 806, Not: 452\n\n\npartners\n1106\n0.61\nFALSE\n9\n1 P: 1085, No : 409, 2 P: 124, 3 P: 50\n\n\ngrass\n1024\n0.64\nFALSE\n2\nLeg: 1126, Not: 717\n\n\nzodiac\n85\n0.97\nFALSE\n12\nVir: 274, Can: 257, Tau: 240, Aqu: 236\n\n\nincome_rc\n271\n0.91\nFALSE\n16\nGt : 258, Gt : 218, Gt : 214, Gt : 213\n\n\nagegrp\n17\n0.99\nFALSE\n5\nAge: 786, Age: 573, Age: 529, Age: 510\n\n\nageq\n10\n1.00\nFALSE\n4\nAge: 737, Age: 731, Age: 695, Age: 694\n\n\nsiblings\n5\n1.00\nFALSE\n7\n6+: 609, 2: 596, 1: 550, 3: 452\n\n\nkids\n8\n1.00\nFALSE\n5\n0: 797, 2: 733, 3: 467, 1: 459\n\n\nreligion\n18\n0.99\nFALSE\n5\nPro: 1371, Cat: 649, Non: 619, Oth: 159\n\n\nbigregion\n0\n1.00\nFALSE\n4\nSou: 1052, Mid: 695, Wes: 632, Nor: 488\n\n\npartners_rc\n1115\n0.61\nFALSE\n5\n1: 1085, 0: 409, 2: 124, 4+: 84\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1.0\n2016.00\n0.00\n2016.00\n2016.00\n2016.00\n2016.00\n2016.00\n‚ñÅ‚ñÅ‚ñá‚ñÅ‚ñÅ\n\n\nid\n0\n1.0\n1434.00\n827.78\n1.00\n717.50\n1434.00\n2150.50\n2867.00\n‚ñá‚ñá‚ñá‚ñá‚ñá\n\n\nage\n10\n1.0\n49.16\n17.69\n18.00\n34.00\n49.00\n62.00\n89.00\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÉ\n\n\nchilds\n8\n1.0\n1.85\n1.67\n0.00\n0.00\n2.00\n3.00\n8.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nwtssall\n0\n1.0\n1.00\n0.50\n0.39\n0.48\n0.96\n1.44\n4.31\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nobama\n1137\n0.6\n0.63\n0.48\n0.00\n0.00\n1.00\n1.00\n1.00\n‚ñÖ‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\n\n\ngss_sm &lt;- gss_sm\n\n\ngss_sm |&gt; \n  group_by(race) |&gt; \n  count()\n\n# A tibble: 3 √ó 2\n# Groups:   race [3]\n  race      n\n  &lt;fct&gt; &lt;int&gt;\n1 White  2100\n2 Black   490\n3 Other   277\n\n\n\np &lt;- ggplot(data = gss_sm |&gt; filter(!is.na(degree)),\n            mapping = \n              aes( x = age, \n                   y = childs))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth(aes(color = degree),\n                se = F) +\n    facet_grid(sex ~ race)\n\n\n\n\n\n1 Bar Charts\n\ngss_sm &lt;- gss_sm\ngss_sm |&gt; \n  count(bigregion)\n\n# A tibble: 4 √ó 2\n  bigregion     n\n  &lt;fct&gt;     &lt;int&gt;\n1 Northeast   488\n2 Midwest     695\n3 South      1052\n4 West        632\n\n\n\ngss_sm |&gt;   # short-cut Ctrl/command + Shift + M\n  group_by(religion) |&gt; \n  count()\n\n# A tibble: 6 √ó 2\n# Groups:   religion [6]\n  religion       n\n  &lt;fct&gt;      &lt;int&gt;\n1 Protestant  1371\n2 Catholic     649\n3 Jewish        51\n4 None         619\n5 Other        159\n6 &lt;NA&gt;          18\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar() \n\n\n\n\nShort-cut for code chunk is Alt/option + Ctrl/command + I\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar(show.legend = F) \n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar()\n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar(position = \"dodge\")\n\n\n\n\n\n?midwest\ndatatable(midwest)\n\n\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 10)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 100)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(binwidth = .001)\n\n\n\n\n\ndatatable(titanic)\n\n\n\n\n\n\n\n?oecd_sum\ndatatable(oecd_sum)\n\n\n\n\n\n\n\np &lt;- ggplot(data = socviz::oecd_sum,\n            mapping = \n              aes(x = year, \n                  y = diff, \n                  fill = hi_lo))\np + geom_col() + \n  guides(fill = \"none\") +\n  labs(x = NULL, \n       y = \"Difference in Years\",\n       title = \"The US Life Expectancy Gap\",\n       subtitle = \"Difference between US and OECD\n                   average life expectancies, 1960-2015\",\n       caption = \"Data: OECD. After a chart by Christopher Ingraham,\n                  Washington Post, December 27th 2017.\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-03-2024-0209.html",
    "href": "danl-class/danl-399-note-03-2024-0209.html",
    "title": "Lecture 3 - Note",
    "section": "",
    "text": "library(tidyverse)\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\nggplot(sale_df, \n       aes(x = sale.price), \n       bins = 500) +\n  geom_histogram()\n\n\n\n\n\nggplot(sale_df, \n       aes(x = log(sale.price)), \n       bins = 500) +\n  geom_histogram()\n\n\n\n\n\ndiamonds &lt;- ggplot2::diamonds\n\n??diamonds\n\n\n# to make a simple data.frame\ndemo &lt;- tribble(         \n  ~cut,         ~freq,\n  \"Fair\",       1610,\n  \"Good\",       4906,\n  \"Very Good\",  12082,\n  \"Premium\",    13791,\n  \"Ideal\",      21551 )\n\nggplot(data = demo) +\n  geom_bar(mapping = \n             aes(x = cut, \n                 y = freq), \n           stat = \"identity\")\n\n\n\n\n\nggplot(data = demo) +\n  geom_col(mapping = \n             aes(x = cut, \n                 y = freq))\n\n\n\n\n\nggplot(diamonds) +\n  geom_bar(aes(x = cut,\n               fill = clarity),\n           position = \"fill\") +\n  labs(y = \"Proportion\")\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "listing-danl-399-cw.html",
    "href": "listing-danl-399-cw.html",
    "title": "DANL 399 - Classwork",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nClasswork 5\n\n\nThe Layered Grammar of Graphics\n\n\nFebruary 10, 2023\n\n\n\n\nClasswork 4\n\n\nggplot Basics\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 3\n\n\nQuarto Website Basics\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 2\n\n\nMarkdown Basics\n\n\nJanuary 26, 2024\n\n\n\n\nClasswork 1\n\n\nBuilding a Personal Website using Git, GitHub, and RStudio with Quarto\n\n\nJanuary 26, 2023\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-04.html",
    "href": "danl-qa/danl-399-qa-04.html",
    "title": "Lecture 4 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 4 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 4 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 4 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-02.html",
    "href": "danl-qa/danl-399-qa-02.html",
    "title": "Lecture 2 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 2 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 2 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 2 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-01.html",
    "href": "danl-qa/danl-399-qa-01.html",
    "title": "Lecture 1 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 1 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 1 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 3 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "listing-danl-399-lec.html",
    "href": "listing-danl-399-lec.html",
    "title": "DANL 399 - Lecture",
    "section": "",
    "text": "Title\n\n\nDate\n\n\n\n\n\n\nLecture 5\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 1\n\n\nJanuary 26, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  }
]