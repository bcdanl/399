[
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html",
    "href": "danl-hw/danl-399-hw-01-q.html",
    "title": "Homework 1",
    "section": "",
    "text": "Decorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture file (e.g., png) of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nAdd the PDF file of your resum√© to the website working directory in your laptop (or Posit Cloud).\nCorrect links for your resum√©, LinkedIn, email, and optionally social media.\nMake sure that you do not have any broken links in your website.\n\n\nAdd a ‚Äúggplot Basics‚Äù blog post to your blog using Quarto document.\n\n\nIn your ‚Äúggplot Basics‚Äù blog post, briefly explain ggplot Basics we discussed in Lecture 2, Lecture 3, Classwork 4, and Classwork 5\n\n\nUse the 3-step git commands (git add, git commit, and git push) to update your online website."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-1",
    "href": "danl-hw/danl-399-hw-01-q.html#question-1",
    "title": "Homework 1",
    "section": "Question 1",
    "text": "Question 1"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-2",
    "href": "danl-hw/danl-399-hw-01-q.html#question-2",
    "title": "Homework 1",
    "section": "Question 2",
    "text": "Question 2"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-3",
    "href": "danl-hw/danl-399-hw-01-q.html#question-3",
    "title": "Homework 1",
    "section": "Question 3",
    "text": "Question 3\nUse ggridges::geom_density_ridges() for Question 3."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-4",
    "href": "danl-hw/danl-399-hw-01-q.html#question-4",
    "title": "Homework 1",
    "section": "Question 4",
    "text": "Question 4\nUse datasets::mtcars for Question 4."
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-5",
    "href": "danl-hw/danl-399-hw-01-q.html#question-5",
    "title": "Homework 1",
    "section": "Question 5",
    "text": "Question 5\nUse the following data.frame for Question 5.\n\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-6",
    "href": "danl-hw/danl-399-hw-01-q.html#question-6",
    "title": "Homework 1",
    "section": "Question 6",
    "text": "Question 6\nUse the following data.frame for Question 6\n\nmale_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-7",
    "href": "danl-hw/danl-399-hw-01-q.html#question-7",
    "title": "Homework 1",
    "section": "Question 7",
    "text": "Question 7\nUse the following data.frame for Question 7\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')"
  },
  {
    "objectID": "danl-hw/danl-399-hw-01-q.html#question-8",
    "href": "danl-hw/danl-399-hw-01-q.html#question-8",
    "title": "Homework 1",
    "section": "Question 8",
    "text": "Question 8\nUse the following data.frame for Question 8.\n\ncows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')"
  },
  {
    "objectID": "listing-danl-399-class.html",
    "href": "listing-danl-399-class.html",
    "title": "DANL 399 - Class Notes",
    "section": "",
    "text": "All class Quarto documents are stored in:\nthis GitHub Repository.\nHTML outputs from the class Quarto documents are provided below:\n\n\n\n\n\n\n\n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 2 - Note\n\n\nggplot Basics\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 3 - Note\n\n\nggplot grammar\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 4 - Note\n\n\nShow the Right Number\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 5 - Note\n\n\nGraph tables, add labels, make notes\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 6 - Note\n\n\nRefine Your Plots\n\n\nMarch 1, 2024\n\n\n\n\nAdvanced ggplot Visualization\n\n\nHomework 1 and Classwork 7\n\n\nMarch 22, 2024\n\n\n\n\nLecture 7\n\n\nDraw Maps\n\n\nApril 5, 2024\n\n\n\n\nLecture 8\n\n\nInteractive Visualization; Animated Plots\n\n\nApril 12, 2024\n\n\n\n\nNote 10\n\n\nMap Visualization; Interactive Visualization; Animated Plots\n\n\nApril 20, 2024\n\n\n\n\nNote 11\n\n\nShiny Apps\n\n\nApril 26, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-03.html",
    "href": "danl-qa/danl-399-qa-03.html",
    "title": "Lecture 3 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 3 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 3 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 3 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-05.html",
    "href": "danl-qa/danl-399-qa-05.html",
    "title": "Lecture 5 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 5 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 5 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 5 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "",
    "text": "Welcome! üëã\n\\(-\\) Explore, Learn, and Grow with the DANL! üåü"
  },
  {
    "objectID": "index.html#bullet-lecture-slides",
    "href": "index.html#bullet-lecture-slides",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Lecture Slides üöÄ",
    "text": "\\(\\bullet\\,\\) Lecture Slides üöÄ\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nLecture 10\n\n\nMay 3, 2024\n\n\n\n\nLecture 8\n\n\nApril 12, 2024\n\n\n\n\nLecture 7\n\n\nApril 5, 2024\n\n\n\n\nLecture 6\n\n\nMarch 1, 2024\n\n\n\n\nLecture 5\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 1\n\n\nJanuary 26, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-lecture-q-a",
    "href": "index.html#bullet-lecture-q-a",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Lecture Q & A ‚ùì",
    "text": "\\(\\bullet\\,\\) Lecture Q & A ‚ùì\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nLecture 10 - Q & A\n\n\nMay 3, 2024\n\n\n\n\nLecture 8 - Q & A\n\n\nApril 12, 2024\n\n\n\n\nLecture 7 - Q & A\n\n\nApril 5, 2024\n\n\n\n\nLecture 6 - Q & A\n\n\nMarch 1, 2024\n\n\n\n\nLecture 5 - Q & A\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4 - Q & A\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 1 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 3 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2 - Q & A\n\n\nFebruary 2, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-classwork",
    "href": "index.html#bullet-classwork",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è",
    "text": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nClasswork 8\n\n\nApril 12, 2024\n\n\n\n\nClasswork 7\n\n\nMarch 22, 2024\n\n\n\n\nClasswork 6\n\n\nMarch 2, 2024\n\n\n\n\nClasswork 2\n\n\nJanuary 26, 2024\n\n\n\n\nClasswork 5 - Example Answers\n\n\nMarch 8, 2023\n\n\n\n\nClasswork 4 - Example Answers\n\n\nMarch 8, 2023\n\n\n\n\nClasswork 5\n\n\nFebruary 10, 2023\n\n\n\n\nClasswork 4\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 3\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 1\n\n\nJanuary 26, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-homework",
    "href": "index.html#bullet-homework",
    "title": "DANL 399-01: Data Visualization and Presentation, Spring 2024",
    "section": "\\(\\bullet\\,\\) Homework üíª",
    "text": "\\(\\bullet\\,\\) Homework üíª\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nHomework 4\n\n\nApril 12, 2024\n\n\n\n\nHomework 3\n\n\nMarch 20, 2024\n\n\n\n\nHomework 2\n\n\nFebruary 29, 2024\n\n\n\n\nHomework 1\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl-class/danl-399-note-02-2024-0202.html",
    "href": "danl-class/danl-399-note-02-2024-0202.html",
    "title": "Lecture 2 - Note",
    "section": "",
    "text": "1 Make a plot!\nTo add a code chunk, - Alt + Ctrl + I - option + command + I\nTo run a code chunk - Ctrl + Shift + Enter - command + shift + return\nTo run a current line of code - Ctrl + Enter - command + return\n\nlibrary(gapminder)\ngapminder &lt;- gapminder::gapminder\nskim(gapminder)\n\n\nData summary\n\n\nName\ngapminder\n\n\nNumber of rows\n1704\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n2\n\n\nnumeric\n4\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ncountry\n0\n1\nFALSE\n142\nAfg: 12, Alb: 12, Alg: 12, Ang: 12\n\n\ncontinent\n0\n1\nFALSE\n5\nAfr: 624, Asi: 396, Eur: 360, Ame: 300\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1\n1979.50\n17.27\n1952.00\n1965.75\n1979.50\n1993.25\n2007.0\n‚ñá‚ñÖ‚ñÖ‚ñÖ‚ñá\n\n\nlifeExp\n0\n1\n59.47\n12.92\n23.60\n48.20\n60.71\n70.85\n82.6\n‚ñÅ‚ñÜ‚ñá‚ñá‚ñá\n\n\npop\n0\n1\n29601212.32\n106157896.74\n60011.00\n2793664.00\n7023595.50\n19585221.75\n1318683096.0\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\ngdpPercap\n0\n1\n7215.33\n9857.45\n241.17\n1202.06\n3531.85\n9325.46\n113523.1\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data = gapminder,\n            aes(x = gdpPercap, y = lifeExp))\n\nBelow is the scatter plot of gdpPercap vs.¬†lifeExp\n\np + geom_point()\n\n\n\n\nLet‚Äôs add a curve that fits into the data points.\n\np + geom_point() +\n  geom_smooth()\n\n\n\n\n\np + geom_point() +\n  geom_smooth() +\n  geom_smooth(method = lm)\n\n\n\n\n\np1 &lt;- ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\n\np1 + geom_point()\n\n\n\n\n\np + geom_point(color = \"red\")\n\n\n\n\n\np + geom_point(color = \"purple\") +\n  geom_smooth(method = lm)\n\n\n\n\n\np + geom_point(alpha = .2, size = 10)\n\n\n\n\n\np + geom_point(alpha = .2) +\n  geom_smooth(method = lm,\n              color = \"orange\",\n              se = F,\n              linewidth = 10\n              )\n\n\n\n\n\np + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np1 + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np1 + geom_point(alpha = .25) +\n  geom_smooth() +\n  geom_smooth(method = lm) +\n  guides(color = \"none\") +\n  facet_wrap( . ~ continent ) +\n  scale_x_log10(labels = scales::dollar) +\n  labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\n\n\n\n\np + geom_point(alpha = .25,\n               aes(color = continent)) +\n  geom_smooth(  )\n\n\n\n\n\np_out &lt;- p + geom_point(alpha = .25) +\n  geom_smooth() +\n  scale_x_continuous(trans = scales::log_trans())  # natural log\np_out\n\n\n\n# ggsave(\"my_figure.pdf\", plot = p_out)\n\n\n\n\n2 References\n\nR for Data Science by Hadley Wickham\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-04-2024-0216.html",
    "href": "danl-class/danl-399-note-04-2024-0216.html",
    "title": "Lecture 4 - Note",
    "section": "",
    "text": "DT::datatable(gapminder)\n\n\n\n\n\n\n\nlength(unique(gapminder$country))\n\n[1] 142\n\nlength(unique(gapminder$continent))\n\n[1] 5\n\n\n\ndatatable(gss_sm)\n\n\n\n\n\n\n\n?gss_sm\nskimr::skim(gss_sm)\n\n\nData summary\n\n\nName\ngss_sm\n\n\nNumber of rows\n2867\n\n\nNumber of columns\n32\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nfactor\n23\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nballot\n0\n1.0\n1\n1\n0\n3\n0\n\n\nsibs\n5\n1.0\n1\n2\n0\n26\n0\n\n\npres12\n1137\n0.6\n1\n1\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\ndegree\n8\n1.00\nFALSE\n5\nHig: 1461, Bac: 536, Lt : 328, Gra: 318\n\n\nrace\n0\n1.00\nFALSE\n3\nWhi: 2100, Bla: 490, Oth: 277\n\n\nsex\n0\n1.00\nFALSE\n2\nFem: 1591, Mal: 1276\n\n\nregion\n0\n1.00\nFALSE\n9\nSou: 550, E. : 502, Pac: 397, Mid: 313\n\n\nincome16\n271\n0.91\nFALSE\n26\n$60: 258, $40: 218, $75: 214, $50: 207\n\n\nrelig\n18\n0.99\nFALSE\n13\nPro: 1371, Cat: 649, Non: 619, Jew: 51\n\n\nmarital\n1\n1.00\nFALSE\n5\nMar: 1212, Nev: 806, Div: 495, Wid: 251\n\n\npadeg\n698\n0.76\nFALSE\n5\nHig: 1010, Lt : 663, Bac: 273, Gra: 159\n\n\nmadeg\n200\n0.93\nFALSE\n5\nHig: 1349, Lt : 736, Bac: 292, Gra: 146\n\n\npartyid\n32\n0.99\nFALSE\n8\nNot: 496, Ind: 473, Str: 463, Ind: 405\n\n\npolviews\n111\n0.96\nFALSE\n7\nMod: 1032, Con: 426, Sli: 382, Lib: 350\n\n\nhappy\n8\n1.00\nFALSE\n3\nPre: 1601, Ver: 806, Not: 452\n\n\npartners\n1106\n0.61\nFALSE\n9\n1 P: 1085, No : 409, 2 P: 124, 3 P: 50\n\n\ngrass\n1024\n0.64\nFALSE\n2\nLeg: 1126, Not: 717\n\n\nzodiac\n85\n0.97\nFALSE\n12\nVir: 274, Can: 257, Tau: 240, Aqu: 236\n\n\nincome_rc\n271\n0.91\nFALSE\n16\nGt : 258, Gt : 218, Gt : 214, Gt : 213\n\n\nagegrp\n17\n0.99\nFALSE\n5\nAge: 786, Age: 573, Age: 529, Age: 510\n\n\nageq\n10\n1.00\nFALSE\n4\nAge: 737, Age: 731, Age: 695, Age: 694\n\n\nsiblings\n5\n1.00\nFALSE\n7\n6+: 609, 2: 596, 1: 550, 3: 452\n\n\nkids\n8\n1.00\nFALSE\n5\n0: 797, 2: 733, 3: 467, 1: 459\n\n\nreligion\n18\n0.99\nFALSE\n5\nPro: 1371, Cat: 649, Non: 619, Oth: 159\n\n\nbigregion\n0\n1.00\nFALSE\n4\nSou: 1052, Mid: 695, Wes: 632, Nor: 488\n\n\npartners_rc\n1115\n0.61\nFALSE\n5\n1: 1085, 0: 409, 2: 124, 4+: 84\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyear\n0\n1.0\n2016.00\n0.00\n2016.00\n2016.00\n2016.00\n2016.00\n2016.00\n‚ñÅ‚ñÅ‚ñá‚ñÅ‚ñÅ\n\n\nid\n0\n1.0\n1434.00\n827.78\n1.00\n717.50\n1434.00\n2150.50\n2867.00\n‚ñá‚ñá‚ñá‚ñá‚ñá\n\n\nage\n10\n1.0\n49.16\n17.69\n18.00\n34.00\n49.00\n62.00\n89.00\n‚ñÜ‚ñá‚ñá‚ñÜ‚ñÉ\n\n\nchilds\n8\n1.0\n1.85\n1.67\n0.00\n0.00\n2.00\n3.00\n8.00\n‚ñá‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nwtssall\n0\n1.0\n1.00\n0.50\n0.39\n0.48\n0.96\n1.44\n4.31\n‚ñá‚ñÇ‚ñÅ‚ñÅ‚ñÅ\n\n\nobama\n1137\n0.6\n0.63\n0.48\n0.00\n0.00\n1.00\n1.00\n1.00\n‚ñÖ‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\n\n\ngss_sm &lt;- gss_sm\n\n\ngss_sm |&gt; \n  group_by(race) |&gt; \n  count()\n\n# A tibble: 3 √ó 2\n# Groups:   race [3]\n  race      n\n  &lt;fct&gt; &lt;int&gt;\n1 White  2100\n2 Black   490\n3 Other   277\n\n\n\np &lt;- ggplot(data = gss_sm |&gt; filter(!is.na(degree)),\n            mapping = \n              aes( x = age, \n                   y = childs))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth(aes(color = degree),\n                se = F) +\n    facet_grid(sex ~ race)\n\n\n\n\n\n1 Bar Charts\n\ngss_sm &lt;- gss_sm\ngss_sm |&gt; \n  count(bigregion)\n\n# A tibble: 4 √ó 2\n  bigregion     n\n  &lt;fct&gt;     &lt;int&gt;\n1 Northeast   488\n2 Midwest     695\n3 South      1052\n4 West        632\n\n\n\ngss_sm |&gt;   # short-cut Ctrl/command + Shift + M\n  group_by(religion) |&gt; \n  count()\n\n# A tibble: 6 √ó 2\n# Groups:   religion [6]\n  religion       n\n  &lt;fct&gt;      &lt;int&gt;\n1 Protestant  1371\n2 Catholic     649\n3 Jewish        51\n4 None         619\n5 Other        159\n6 &lt;NA&gt;          18\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar() \n\n\n\n\nShort-cut for code chunk is Alt/option + Ctrl/command + I\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar(show.legend = F) \n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar()\n\n\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\n\np + geom_bar(position = \"dodge\")\n\n\n\n\n\n?midwest\ndatatable(midwest)\n\n\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 10)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(bins = 100)\n\n\n\n\n\np &lt;- ggplot(midwest,\n            aes(x = area))\n\np + geom_histogram(binwidth = .001)\n\n\n\n\n\ndatatable(titanic)\n\n\n\n\n\n\n\n?oecd_sum\ndatatable(oecd_sum)\n\n\n\n\n\n\n\np &lt;- ggplot(data = socviz::oecd_sum,\n            mapping = \n              aes(x = year, \n                  y = diff, \n                  fill = hi_lo))\np + geom_col() + \n  guides(fill = \"none\") +\n  labs(x = NULL, \n       y = \"Difference in Years\",\n       title = \"The US Life Expectancy Gap\",\n       subtitle = \"Difference between US and OECD\n                   average life expectancies, 1960-2015\",\n       caption = \"Data: OECD. After a chart by Christopher Ingraham,\n                  Washington Post, December 27th 2017.\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html",
    "href": "danl-cw/danl-399-cw-04.html",
    "title": "Classwork 4",
    "section": "",
    "text": "Load the following data.frame, mpg.\n\nlibrary(tidyverse)\nmpg &lt;- ggplot2::mpg\n\n\ndatatable(mpg)\n\n\n\n\n\n\n\n\nlibrary(skimr)\nskim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ\n\n\n\n\n\n\n\nRun ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)\n\n\n\n\n\n\n\n\nWrite a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))\n\n\n\n\n\n\n\n\n\nWhat happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1a.",
    "href": "danl-cw/danl-399-cw-04.html#q1a.",
    "title": "Classwork 4",
    "section": "",
    "text": "Run ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1b.",
    "href": "danl-cw/danl-399-cw-04.html#q1b.",
    "title": "Classwork 4",
    "section": "",
    "text": "Write a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q1c.",
    "href": "danl-cw/danl-399-cw-04.html#q1c.",
    "title": "Classwork 4",
    "section": "",
    "text": "What happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2a.",
    "href": "danl-cw/danl-399-cw-04.html#q2a.",
    "title": "Classwork 4",
    "section": "Q2a.",
    "text": "Q2a.\n\nWhich variables in mpg are categorical?\nWhich variables are continuous?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2b.",
    "href": "danl-cw/danl-399-cw-04.html#q2b.",
    "title": "Classwork 4",
    "section": "Q2b.",
    "text": "Q2b.\n\nMap a continuous variable to color, size, and shape.\nHow do these aesthetics behave differently for categorical vs.¬†continuous variables?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q2d.",
    "href": "danl-cw/danl-399-cw-04.html#q2d.",
    "title": "Classwork 4",
    "section": "Q2d.",
    "text": "Q2d.\nWhat happens if you map an aesthetic to something other than a variable name, like aes(color = displ &lt; 5)?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3a.",
    "href": "danl-cw/danl-399-cw-04.html#q3a.",
    "title": "Classwork 4",
    "section": "Q3a.",
    "text": "Q3a.\nWhat happens if you facet on a continuous variable?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3b.",
    "href": "danl-cw/danl-399-cw-04.html#q3b.",
    "title": "Classwork 4",
    "section": "Q3b.",
    "text": "Q3b.\n\nWhat do the empty cells in the scatterplot of displ vs.¬†hwy with facet_grid(drv ~ cyl) mean?\n\nHow do they relate to this plot?\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = drv, y = cyl))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3c.",
    "href": "danl-cw/danl-399-cw-04.html#q3c.",
    "title": "Classwork 4",
    "section": "Q3c.",
    "text": "Q3c.\nWhat plots does the following code make? What does . do?\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(drv ~ .)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(drv ~ .)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(. ~ cyl)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3d.",
    "href": "danl-cw/danl-399-cw-04.html#q3d.",
    "title": "Classwork 4",
    "section": "Q3d.",
    "text": "Q3d.\nConsider the following faceted plot:\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) + \n  facet_wrap(~ class, nrow = 2)\n\n\nWhat are the advantages to using faceting instead of the color aesthetic?\nWhat are the disadvantages?\nHow might the balance change if you had a larger dataset?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3e.",
    "href": "danl-cw/danl-399-cw-04.html#q3e.",
    "title": "Classwork 4",
    "section": "Q3e.",
    "text": "Q3e.\n\nRead ?facet_wrap.\n\nWhat does nrow do?\nWhat does ncol do?\nWhat other options control the layout of the individual panels?\nWhy doesn‚Äôt facet_grid() have nrow and ncol arguments?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3f.",
    "href": "danl-cw/danl-399-cw-04.html#q3f.",
    "title": "Classwork 4",
    "section": "Q3f.",
    "text": "Q3f.\nWhen using facet_grid(), you should usually put the variable with more unique levels in the columns. Why?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04.html#q3g.",
    "href": "danl-cw/danl-399-cw-04.html#q3g.",
    "title": "Classwork 4",
    "section": "Q3g.",
    "text": "Q3g.\nUse the following data.frame.\n\ntvshows_web &lt;- read_csv(\n        'https://bcdanl.github.io/data/tvshows.csv')\n\n\ndatatable(tvshows_web)\n\n\n\n\n\n\n\n\nDescribe the relationship between audience size (GRP) and audience engagement (PE) using ggplot.\nExplain the relationship in words."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html",
    "href": "danl-cw/danl-399-cw-03.html",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd.\n\n\n\n\n\n\n\nRules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file.\n\n\n\n\n\n\n\nDecorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-399-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website.\n\n\n\n\n\n\nQuarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#website-files",
    "href": "danl-cw/danl-399-cw-03.html#website-files",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#blogging",
    "href": "danl-cw/danl-399-cw-03.html#blogging",
    "title": "Classwork 3",
    "section": "",
    "text": "Rules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#practice-problems",
    "href": "danl-cw/danl-399-cw-03.html#practice-problems",
    "title": "Classwork 3",
    "section": "",
    "text": "Decorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-399-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website."
  },
  {
    "objectID": "danl-cw/danl-399-cw-03.html#references",
    "href": "danl-cw/danl-399-cw-03.html#references",
    "title": "Classwork 3",
    "section": "",
    "text": "Quarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "listing-danl-399-qa.html",
    "href": "listing-danl-399-qa.html",
    "title": "DANL 399 - Lecture Discussion",
    "section": "",
    "text": "Title\n\n\nDate\n\n\n\n\n\n\nLecture 8 - Q & A\n\n\nApril 12, 2024\n\n\n\n\nLecture 7 - Q & A\n\n\nApril 5, 2024\n\n\n\n\nLecture 6 - Q & A\n\n\nMarch 1, 2024\n\n\n\n\nLecture 5 - Q & A\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4 - Q & A\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2 - Q & A\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 10 - Q & A\n\n\nMay 3, 2024\n\n\n\n\nLecture 1 - Q & A\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#learning-objectives",
    "title": "Lecture 2",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\n\nQuarto Basics\nQuarto Website Basics\n\n\n\nggplot Basics"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#rstudio-workflow",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#rstudio-workflow",
    "title": "Lecture 2",
    "section": "RStudio Workflow",
    "text": "RStudio Workflow\nShortcuts for RStudio and RScript\n\n\nMac\n\ncommand + shift + N opens a new RScript.\ncommand + return runs a current line or selected lines.\ncommand + shift + C is the shortcut for # (commenting).\noption + -  is the shortcut for &lt;-.\n\n\nWindows\n\nCtrl + Shift + N opens a new RScript.\nCtrl + return runs a current line or selected lines.\nCtrl + Shift + C is the shortcut for # (commenting).\nAlt + -  is the shortcut for &lt;-."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#workflow",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#workflow",
    "title": "Lecture 2",
    "section": "Workflow",
    "text": "Workflow\nShortcuts for Lecture Slides\n\no or Esc overviews lecture slides\n\nUse arrow keys to move around.\n\nYou can also click the menu button at the top-right corner, and go to a specific slide.\nCtrl + Shift + F to search."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-1",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nYAML\n\n\n\n\n\n\nAn YAML (yet another markup language) header surrounded by ---.\n\nIt is commonly used for document configuration (e.g., title, author, date, style, ‚Ä¶).\n\nChunks of Python/R code surrounded by three backticks, \\(\\text{```}\\)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-2",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nKnitting / Rendering\n\nWhen we knit the document, Quarto sends the .qmd file to jupyter/knitr, which executes all of the code chunks and creates a new markdown (.md) document which includes the code and its output.\nThe markdown file (*.md) generated by jupyter/knitr is then processed by pandoc, which is responsible for creating the output file."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-3",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nMarkdown, Quarto, and HTML\n\n\nThe very original version of Markdown was invented mainly to write HTML content more easily.\n\nFor example, - SOME_TEXT in ‚Äú.md‚Äù is equivalent to &lt;ul&gt;&lt;li&gt; SOME_TEXT &lt;/li&gt; in ‚Äù.html‚Äù\n\nPandoc makes it possible to convert a Markdown document to a large variety of output formats, such as HTML."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-and-html",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-and-html",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto and HTML",
    "text": "Getting Started with Quarto and HTML\nMarkdown, Quarto, and HTML\n\n\nTo create an HTML document from Quarto, we specify the html output format in the YAML metadata of our document.\n\nBy default, format: html is set.\n\nIn RStudio, we can create a new Quarto file from the menu, File -&gt; New File -&gt; Quarto Document.\nOpen an empty Quarto file.\n\nType the following YAML metadata to the empty Quarto file.\n\n\n\n---\ntitle: \"Habits\"\nauthor: YOUR_NAME\ndate: January 30, 2024\nformat: \n  html\n---"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-4",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nQuarto Basics\n\n\nIn RStudio, close the project USERNAME.github.io.Rporj if it is on.\n\nClick USERNAME.github.io.Rporj at the top-right corner.\nClick Close Project.\n\nDownload the Quarto file, danl-399-quarto-r.qmd from Brightspace, and open it from RStudio."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#getting-started-with-quarto-5",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nQuarto Basics\n\nThe following syntax is part of YAML metadata in danl-399-quarto-r.qmd.\n\nIn YAML, indentation really matters!\ntab (or four spaces) defines a level in YAML.\n\n\n---\ntitle: \nsubtitle: \nauthor: \ndate: last-modified\n\nformat: \n  html:\n  \nexecute: \n  echo: true\n  eval: true\n---"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\n\nIn RStudio, open the project USERNAME.github.io.Rporj.\n\nClick Project: (None) at the top-right corner.\nClick USERNAME.github.io.Rporj.\n\nYour website has a _quarto.yml configuration file.\n\nThis file provides options for HTML documents within the website.\n\n\n\n\n---\nproject:\n  type: website\n\nwebsite:\n  title: \"YOUR NAME\"\n  navbar:\n    left:\n      - text: Project\n        href: project.qmd\n      - text: Blog\n        href: blog-listing.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: false\n---\n\nThe _quarto.yml file configures the website settings.\nIndentation matters!"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-1",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nCustom CSS\n\n\nCascading Style Sheets (CSS) is used to format the layout of a webpage (color, font, text size, background, display, etc.).\n\nHTML will format the architecture of the house.\nCSS will be the carpet and walls to decorate the house.\nJavaScript adds interactive elements in the house, such as opening doors and lighting.\n\nWe are not front-end web developers.\n\nWe will not cover discuss the use of CSS and JavaScript."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-2",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nRendering\n\n\nThe Render button (command/Ctrl + shift + K) renders a single Quarto file.\nquarto render from Terminal renders all Quarto/Jupyter Notebook files in your local working directory:\n\nquarto render\n\nWe should use quarto render when we have changes in _quarto.yml.\nMake changes only from your local laptop.\n\nDo not make any change from the GitHub repo webpage."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-3",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAdding *.ipynb to Quarto websites\n\n\nBy default, quarto render doesn‚Äôt execute any code in .ipynb notebooks.\nquarto render renders .ipynb notebooks, so that corresponding html files are rendered.\n\nIf we need to update cell outputs in *.ipynb, run that *.ipynb on Google Colab, and save the notebook."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-4",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAppearance and Style\n\ntheme specifies the Bootstrap theme to use for the page (themes are drawn from the Bootswatch theme library).\n\nValid themes include default, bootstrap, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, and yeti.\n\nhighlight-style specifies the code highlighting style.\n\nSupported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, and textmate."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-5",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAbout\n\nYour index.qmd sets a page about you.\n\nDetails in about pages are available here:\nhttps://quarto.org/docs/websites/website-about.html.\n\nQuarto includes 5 built in templates:\n\njolla\ntrestles\nsolana\nmarquee\nbroadside"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-6",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nIcons and Emojis\n\nA ton of Bootstrap icons are available here:\n\nhttps://icons.getbootstrap.com.\n\nA ton of markdown emojis are available here üòÑ:\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\nhttps://gist.github.com/rxaviers/7360908"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-7",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\n\nWe can add a new page to the website through navbar in _quarto.yml\n\nleft:\n- text: Project\n  href: project.qmd\n- text: Blog\n  href: blog-listing.qmd\n- text: Homeowrk\n  href: hw.qmd"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-8",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\n\nWe can also create a navigation bar menu by including a menu\n\nleft:\n  - text: \"Projects\"\n    menu:\n      - project_1.qmd\n      - project_2.qmd \n\nMore details about navbar are available here:\n\nhttps://quarto.org/docs/websites/website-navigation.html"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-websites-9",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nColors\n\nA ton of hex codes for colors are available here:\n\nhttps://www.color-hex.com"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-website-basics",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#quarto-website-basics",
    "title": "Lecture 2",
    "section": "Quarto Website Basics",
    "text": "Quarto Website Basics\n\nLet‚Äôs do Classwork 3."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nUse theme() if you want to tweak the display of an existing theme.\nThe following lists basic ggplot themes:\n\n\n\n\ntheme\ntheme\n\n\n\n\ntheme_grey()\ntheme_gray()\n\n\ntheme_bw()\ntheme_linedraw()\n\n\ntheme_light()\ntheme_dark()\n\n\ntheme_minimal()\ntheme_classic()\n\n\ntheme_void()\ntheme_test()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-1",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nggthemes package provides the following themes:\n\ntheme_economist(), theme_wsj(), theme_fivethirtyeight(), theme_gdocs(), theme_map()\n\nhrbrthemes package provides the following themes:\n\ntheme_ipsum(), theme_ipsum_rc(), theme_ft_rc(), and more."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-2",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\ngapminder data\n\nThe gapminder package include the gapminder data frame.\n\nlibrary(gapminder)\ngapminder\nskim(gapminder)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-3",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMappings link data to things we see\n\nFirst, we tell the core ggplot function what our data is and what our aesthetic mapping is:\n\np &lt;- ggplot(data = gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\nWe can then add the geometric object (geom_*()) to the ggplot().\n\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-4",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\n1. Tell the ggplot() function what our tidy data is. - ggplot(data = ...)\n2. Tell ggplot() what relationships we want to see. - The ggplot(mapping = aes(...)) - p &lt;- ggplot(data = ... , aes(...))\n3. Tell ggplot() how we want to see the relationships in our data. - Choose a geom_*().\n4. Layer on geoms as needed, by adding them to the p object one at a time.\n5. Use some additional functions to adjust scales, labels, tick marks, titles, etc."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-5",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nBuild your plots layer by layer\np + geom_point() + geom_smooth() \np + geom_point() + geom_smooth(method = \"lm\") \np + geom_point() +\n    geom_smooth(method = \"lm\")\np + geom_point() +\n    geom_smooth(method = \"gam\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-6",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nIn the following, we map color to continent in the aes() function:\n\np1 &lt;-  ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\nWe then add geoms.\n\np1 + geom_point() +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-7",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nIn the following, we map color to \"purple\" outside of the aes() function:\n\np2 &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap, y = lifeExp))\n\nWe then add geoms, manually set aethetics, and then adjust scales.\n\np2 + geom_point(color = \"purple\") +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-8",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nHere are another exmaples that set aesthetic mapping manually outside aes() function and inside geom_*() function.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\np + geom_point(color = \"purple\") +\n    geom_smooth(method = \"loess\") \n\np + geom_point(alpha = 0.3) +\n    geom_smooth(color = \"orange\", se = F, size = 8, method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-9",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\nLet‚Äôs add scale_*() and labs() functions to ggplot()\n\np + geom_point(alpha = 0.3) +\n    geom_smooth(method = \"gam\") +\n    scale_x_log10(labels = scales::dollar) +\n    labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\nQ. Is it really the best way to display this country-year data?\n\nWhat are we gaining and losing by ignoring the temporal and country-level structure of the data? How could we do better?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-10",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-10",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nAesthetics can be mapped per geom\n\nWe can have different aesthetic mappings across different geoms:\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, y = lifeExp))\n\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")  +\n    scale_x_continuous(trans = scales::log_trans())  # natural log"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-11",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-11",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can use ggsave() to save ggplot output as a .png or .pdf file.\n\nggsave(filename = \"my_figure.png\")\n\nWe can put our recent plot into an object called p_out and then tell ggave() that we want to save that object.\n\np_out &lt;- p + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()\nggsave(\"my_figure.pdf\", plot = p_out)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-12",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-12",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can set the size of ggplot figue:\n\nggsave(\"lifexp_vs_gdp_gradient.pdf\",\n       plot = p_out, height = 8, width = 10, units = \"in\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-13",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-13",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens when you put the geom_smooth() function before geom_point() instead of after it?\n\nWhat does this tell you about how the plot is drawn? Think about how this might be useful when drawing plots."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-14",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-14",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nChange the mappings in the aes() function so that you plot Life Expectancy against population (pop) rather than per capita GDP.\n\nWhat does that look like?\nWhat does it tell you about the unit of observation in the dataset?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-15",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#make-a-plot-15",
    "title": "Lecture 2",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens if you map color to year instead of continent?\n\nIs the result what you expected?\nThink about what class of object year is.\nRemember you can get a quick look at the top of the data, which includes some shorthand information on the class of each variable, by typing gapminder.\nInstead of mapping color = year, what happens if you try color = factor(year)?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-1",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-1",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line() \n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-2",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-2",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-3",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-3",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped.\n\nHow about color aesthetic, instead of group?\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-4",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-4",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-5",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-5",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\np + geom_line(color=\"gray70\", aes(group = country)) +\n    geom_smooth(size = 1.1, method = \"loess\", se = FALSE) +\n    facet_[?] +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = element_text(angle = 45),\n          axis.title.x = element_text(margin = margin(t = 25))) +\n    labs(x = \"Year\", y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-6",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-6",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\ninstall.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nglimpse(gss_sm)\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-7",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-7",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + [?](alpha = 0.2) +\n    [?]()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-8",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-8",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    [?]"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-9",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-9",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\ne.g., the relationship between the age and the number of children by sex and race\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-10",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-10",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-11",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-11",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-12",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-12",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this: &lt;mapping&gt; = &lt;..statistic..&gt;.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-13",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-13",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead.\n\nTo do so we specify group = 1 inside the aes() call.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop.., group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-14",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-14",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ntable(gss_sm$religion)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-15",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-15",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, color = religion))\np + geom_bar()\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-16",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-16",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, fill = religion))\np + geom_bar() + guides( fill = \"none\" )\n\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-17",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-17",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"fill\")\n\nAn alternative choice is to set the position argument to \"fill\".\n\nIt is to compare proportions across groups."
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-18",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-18",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-19",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-19",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = religion))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-20",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-20",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = bigregion)) +\n    facet_wrap(~ bigregion, ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-21",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-21",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-22",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-22",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-23",
    "href": "danl-lec/danl-399-lec-02-2024-0202.html#show-the-right-number-23",
    "title": "Lecture 2",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\n\n\nlibrary(gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\np + geom_line()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-1",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-1",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-2",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-2",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-3",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-3",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-4",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-4",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nHow about color aesthetic, instead of group?\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-5",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-5",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = \n              aes( x = year,\n                   y = gdpPercap ) )\n\np + geom_line( aes( color = country ),\n               show.legend = F)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-6",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-6",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-7",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-7",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-8",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-8",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\n\n\np + geom_line(color=\"gray70\", \n              aes(group = country)) +\n    geom_smooth(size = 1.1, \n                method = \"loess\", \n                se = FALSE) +\n    facet_wrap(.~ continent, nrow = 1) +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = \n            element_text(\n              angle = 45),\n          axis.title.x = \n            element_text(\n              margin = margin(t = 25))) +\n    labs(x = \"Year\", \n         y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-9",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-9",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\n# install.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-10",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-10",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-11",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-11",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-12",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-12",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes( x = age, \n                   y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-13",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-13",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-14",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-14",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-15",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-15",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this:\n\n&lt;mapping&gt; = &lt;..statistic..&gt;;\n&lt;mapping&gt; = stat(statistic); or\n&lt;mapping&gt; = after_stat(statistic)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-16",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-16",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar(mapping = \n               aes(y = ..prop..))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-17",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-17",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-18",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-18",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nTo do so we specify group = 1 inside the aes() call.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion))\np + geom_bar(mapping = \n               aes(y = ..prop.., \n                   group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-19",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-19",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ngss_sm |&gt; \n  group_by(religion) |&gt; \n  count()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-20",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-20",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  color = religion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-21",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-21",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-22",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-22",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion, \n                  fill = religion))\np + geom_bar() + \n  guides( fill = \"none\" )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-23",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-23",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-24",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-24",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nAn alternative choice is to set the position argument to \"fill\". \n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"fill\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-25",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-25",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop..))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-26",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-26",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = bigregion, \n                  fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop.., \n                   group = religion))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-27",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-27",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-28",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-28",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = \n              aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = \n               aes(y = ..prop.., \n                   group = bigregion)) +\n    facet_wrap(~ bigregion, \n               ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-29",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-29",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-30",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-30",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-31",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-31",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-32",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-32",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhile histograms summarize single variables, it‚Äôs also possible to use several at once to compare distributions.\n\nWe can facet histograms by some variable of interest.\nWe can also compare them in the same plot using the fill mapping."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-33",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-33",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = \n              filter(midwest, \n                     state %in% \n                       c(\"OH\", \"WI\")),\n            mapping = \n              aes(x = percollege, \n                  fill = state) )\np + geom_histogram(alpha = 0.4, \n                   bins = 20)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-34",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-34",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen working with a continuous variable, an alternative to binning the data and making a histogram is to calculate a kernel density estimate of the underlying distribution with geom_density()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-35",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-35",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area))\np + geom_density()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-36",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-36",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nHere we can use color (for the lines) and fill (for the body of the density curve) for aesthetic mappings.\n\n\n\np &lt;- ggplot(data = midwest,\n            mapping = \n              aes(x = area, \n                  fill = state, \n                  color = state))\np + geom_density(alpha = 0.3)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-37",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-37",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nFor geom_density(), the stat_density() function can return its default after_stat(density) statistic, or after_stat(scaled), which will give a proportional density estimate."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-38",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-38",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\n\np &lt;- ggplot(data = \n              filter(midwest, \n                     state %in% \n                       c(\"OH\", \"WI\")),\n            mapping = \n              aes(x = area, \n                  fill = state, \n                  color = state))\np + geom_density( alpha = 0.3, \n                  mapping =  \n                    aes(y = after_stat(scaled) ))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-39",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-39",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nWhen we call geom_bar(), it does its calculations on the fly using stat_count() behind the scenes to produce the counts or proportions it displays."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-40",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-40",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nBut often, our data is in effect already a summary table.\nLet‚Äôs consider the socviz::titanic data.frame.\n\nsocviz::titanic"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-41",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-41",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\nShould we avoid transforming data if we want to describe the relationship between fate and percent?\n\n\n\np &lt;- ggplot(data = titanic,\n            mapping = \n              aes(x = fate, \n                  y = percent, \n                  fill = sex))\np + geom_bar(position = \"dodge\", \n             stat = \"identity\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-42",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-42",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\ngeom_col() has exactly the same as geom_bar() except that it assumes that stat = \"identity\".\nLet‚Äôs consider socviz::oecd_sum data.frame.\n\nIt contains information on average life expectancy at birth within the United States, and across other OECD countries.\n\n\noecd_sum\n\nLet‚Äôs draw the bar chart that describe the difference over time using color = hi_lo."
  },
  {
    "objectID": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-43",
    "href": "danl-lec/danl-399-lec-04-2024-0216.html#show-the-right-number-43",
    "title": "Lecture 4",
    "section": "Show the right number",
    "text": "Show the right number\nAvoid transformations when necessary\n\n\np &lt;- ggplot(data = socviz::oecd_sum,\n            mapping = \n              aes(x = year, \n                  y = diff, \n                  fill = hi_lo))\np + geom_col() + \n  guides(fill = \"none\") +\n  labs(x = NULL, \n       y = \"Difference in Years\",\n       title = \"The US Life Expectancy Gap\",\n       subtitle = \"Difference between US and OECD\n                   average life expectancies, 1960-2015\",\n       caption = \"Data: OECD. After a chart by Christopher Ingraham,\n                  Washington Post, December 27th 2017.\") +\n  theme_minimal()"
  },
  {
    "objectID": "listing-danl-399-hw.html",
    "href": "listing-danl-399-hw.html",
    "title": "DANL 399 - Homework",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nHomework 4\n\n\nMap Visualization\n\n\nApril 12, 2024\n\n\n\n\nHomework 3\n\n\nAdvanced Data Visualization\n\n\nMarch 20, 2024\n\n\n\n\nHomework 2\n\n\nProject Proposal and Data Visualization\n\n\nFebruary 29, 2024\n\n\n\n\nHomework 1\n\n\nPersonal Website and ggplot Visualization\n\n\nFebruary 9, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-1",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nCurrent Appointment & Education\n\nName: Byeong-Hak Choe.\nAssistant Professor of Data Analytics and Economics, School of Business at SUNY Geneseo.\nPh.D.¬†in Economics from University of Wyoming.\nM.S. in Economics from Arizona State University.\nM.A.¬†in Economics from SUNY Stony Brook.\nB.A. in Economics & B.S. in Applied Mathematics from Hanyang University at Ansan, South Korea.\n\nMinor in Business Administration.\nConcentration in Finance."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-2",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H., 2021. ‚ÄúSocial Media Campaigns, Lobbying and Legislation: Evidence from #climatechange and Energy Lobbies.‚Äù\nQuestion: To what extent do social media campaigns compete with fossil fuel lobbying on climate change legislation?\nData include:\n\n5.0 million tweets with #climatechange/#globalwarming around the globe;\n12.0 million retweets/likes to those tweets;\n0.8 million Twitter users who wrote those tweets;\n1.4 million Twitter users who retweeted or liked those tweets;\n0.3 million US Twitter users with their location at a city level;\nFirm-level lobbying data (expenses, targeted bills, etc.)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-3",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H. and Ore-Monago, T., 2024. ‚ÄúGovernance and Climate Finance in the Developing World‚Äù\nClimate finance refers to the financial resources allocated for mitigating and adapting to climate change, including support for initiatives that reduce greenhouse gas emissions and enhance resilience to climate impacts.\n\nWe focus on transnational financing that rich countries provide poor countries with financial resources, in order to help them adapt to climate change and mitigate greenhouse gas (GHG) emissions.\nSince the GHG emissions in developing countries are rapidly growing, it is crucial to assess the effectiveness of climate finance.\nPoor governance can be significant barriers to emissions reductions within these countries."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#instructor-4",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics, Data Science, and Climate Change\n\nChoe, B.H. and Ore-Monago, T., 2024. ‚ÄúGovernance and Climate Finance in the Developing World‚Äù\nData include:\n\nGlobal climate finance data (e.g., donors, recipients, characteristics of climate change projects)\nWorld Bank Governance Indicators over the years (e.g., government effectiveness, voice and accountability, political stability and absence of violence/terrorism, regulatory quality, rule of law, control of corruption)\nVarious economic indicators (e.g., trade pattern of low carbon technology products, macroeconomic risks, energy)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-1",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nEmail, Class & Office Hours\n\nEmail: bchoe@geneseo.edu\nClass Homepage:\n\nhttps://brightspace.geneseo.edu/\nhttp://bcdanl.github.io/399/\n\nClass Schedule\n\nOnline Component: Asynchronous\nIn-Person Sessions:\n\nWednesdays, 11:30 A.M.-12:30 P.M.\nWednesdays, 3:30 P.M.-4:30 P.M.\n\n\nOffice: South Hall 301\nOffice Hours:\n\nTuesdays 12:30 P.M.-1:30 P.M.\nWednesdays 12:30 P.M.-2:30 P.M."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-2",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Description\n\nThis course delves into the tools and methodologies essential for creating visually engaging and informative data representations. Its focus is on enhancing data comprehension and facilitating effective data analytics through aesthetically pleasing graphics. The curriculum includes:\nKey topics include:\n\nExploring a variety of graph types, including line graphs, scatter plots, and bar charts.\nPreparing and organizing data from diverse sources for visualization.\nTailoring graphics with a range of formats and styles, such as color schemes, fonts, and line types.\nMapping geographical data effectively.\nCreating dynamic and interactive visualizations.\nBuilding and deploying web applications using Shiny for data visualization.\nUtilizing Shiny dashboard to synthesize information and narrate data stories.\n\nThese areas will be explored through detailed, real-world examples to address common data analysis challenges.\nThroughout the course, practical experience is emphasized, with hands-on projects using tools like R, Python, RStudio, Quarto, Jupyter Notebook, Shiny, Git, and GitHub."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-3",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nRequired Materials\n\nData Visualization: A Practical Introduction by Kieran Healy\n\nA free online version of this book is available."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-4",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - R\n\nR for Data Science (1ed)\nR for Data Science (2ed)\nFundamentals of Data Visualization\nR Graphics Cookbook: Practical Recipes for Visualizing Data\nggplot2: elegant graphics for data analysis"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-5",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-5",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Python\n\nPython for Data Analysis (3rd Edition) by Wes McKinney\nIPython Interactive Computing and Visualization Cookbook\nPython Programming for Data Science by Tomas Beuzen\nCoding for Economists by Arthur Turrell\nPython for Econometrics in Economics by Fabian H. C. Raters\nQuantEcon DataScience - Python Fundamentals by Chase Coleman, Spencer Lyon, and Jesse Perla\nQuantEcon DataScience - pandas by Chase Coleman, Spencer Lyon, and Jesse Perla"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-6",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-6",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Website\n\nGuide for Quarto"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-7",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-7",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Requirements\n\nLaptop: You should bring your own laptop (Mac or Windows) to the classroom.\n\nIt is recommended to have 2+ core CPU, 4+ GB RAM, and 500+ GB disk storage in your laptop for this course.\n\n\n\n\nHomework: There will be six homework assignments.\nTeam Project: There will be one team project on a personal website.\nExams: There will be one Midterm Exam and one final exam.\n\nThe final exam is comprehensive.\n\nDiscussions: You are encouraged to participate in GitHub-based online discussions for each lecture, classwork, and homework.\n\nCheckout the netiquette policy in the syllabus."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-8",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-8",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nPersonal Website\n\nYou will create your own website using Quarto, R Studio, and Git.\nYou will publish your homework assignments and team project on your website.\nYour website will be hosted in GitHub.\nThe basics in Markdown will be discussed.\nReferences:\n\nQuarto Guide"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-9",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-9",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nTeam Project\n\nTeam formation is scheduled for late March.\n\n\n\nEach team must have one to two students.\nFor the team project, a team must choose data related to business or socioeconomic issues.\nThe project report should include exploratory data analysis using summary statistics, visual representations, and data wrangling.\nThe document for the team project must be published in each member‚Äôs website.\nThe project for the team project must include a Shiny dashboard.\nAny changes to team composition require approval from Byeong-Hak Choe."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-10",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-10",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nClass Schedule and Exams\n\nThere will be tentatively 14 lecture sessions.\nThe Midterm Exam is scheduled on March 7, 2024, Thursday, during the class time.\nThe due for the team project is scheduled on May 16, 2024, Thursday."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-11",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-11",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe first half of the course covers fundamentals of data visualization:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-12",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-12",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe second half of the course covers advanced data visualization and Shiny apps:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-13",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-13",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\\[\n\\begin{align}\n(\\text{Total Percentage Grade}) =&\\quad\\;\\, 0.05\\times(\\text{Total Attendance Score})\\notag\\\\\n&\\,+\\, 0.05\\times(\\text{Discussion Score})\\notag\\\\\n&\\,+\\, 0.05\\times(\\text{Website Score})\\notag\\\\\n&\\,+\\, 0.15\\times(\\text{Team Project and Website Score})\\notag\\\\\n&\\,+\\, 0.20\\times(\\text{Total Homework Score})\\notag\\\\\n&\\,+\\, 0.50\\times(\\text{Total Exam Score}).\\notag\n\\end{align}\n\\]"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-14",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-14",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\nYou are allowed up to 2 absences without penalty.\n\nSend me an email if you have standard excused reasons (illness, family emergency, transportation problems, etc.).\n\n\n\n\nFor each absence beyond the initial two, there will be a deduction of 1% from the Total Percentage Grade.\nParticipation in discussions will be evaluated by quantity and quality of discussions in the GitHub-based discussion boards.\nThe single lowest homework score will be dropped when calculating the total homework score.\n\nEach homework except for the homework with the lowest score accounts for 20% of the total homework score."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-15",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#syllabus-15",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nMake-up Policy\n\nMake-up exams will not be given unless you have either a medically verified excuse or an absence excused by the University.\n\n\n\nIf you cannot take exams because of religious obligations, notify me by email at least two weeks in advance so that an alternative exam time may be set.\nA missed exam without an excused absence earns a grade of zero.\nLate submissions for homework assignment will be accepted with a penalty.\nA zero will be recorded for a missed assignment."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-personal-website",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-personal-website",
    "title": "Lecture 1",
    "section": "Why Personal Website?",
    "text": "Why Personal Website?\nBenefits of a Personal Website in Data Analytics\n\n\nHere are the example websites:\n\nByeong-Hak‚Äôs Website\nDANL Website Template\n\n\n\n\n\nProfessional Showcase: Display skills and projects\nVisibility and Networking: Increase online presence\nControlled Narrative: Manage your professional brand\nContent Sharing and Engagement: Publish articles, insights\nJob Opportunities: Attract potential employers and clients\nLong-term Asset: A growing repository of your career journey\nReproducible Research: Showcase data-driven reports"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases",
    "title": "Lecture 1",
    "section": "Why Python, R, and Databases?",
    "text": "Why Python, R, and Databases?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#why-python-r-and-databases-1",
    "title": "Lecture 1",
    "section": "Why Python, R, and Databases?",
    "text": "Why Python, R, and Databases?\n\nStack Overflow is the most popular Q & A website specifically for programmers and software developers in the world.\nSee how programming languages have trended over time based on use of their tags in Stack Overflow from 2008 to 2022.\n\n\n\nMost Popular Languagues\n\n\nData Science and Big Data"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\n\nData Science and Big Data Trend\nFrom 2008 to 2023\n\n\nProgrammers in 2024"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-1",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\nGenerative AI refers to a category of artificial intelligence (AI) that is capable of generating new content, ranging from text, images, and videos to music and code.\n\n\n\nIn the early 2020s, advances in transformer-based deep neural networks enabled a number of generative AI systems notable for accepting natural language prompts as input.\n\nThese include large language model (LLM) chatbots such as ChatGPT, Copilot, Bard, and LLaMA.\n\nChatGPT (Chat Generative Pre-trained Transformer) is a chatbot developed by OpenAI and launched on November 30, 2022.\n\nBy January 2023, it had become what was then the fastest-growing consumer software application in history."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#the-state-of-the-art-2",
    "title": "Lecture 1",
    "section": "The State of the Art",
    "text": "The State of the Art\nGenerative AI and ChatGPT\n\nUsers around the world have explored how to best utilize GPT for writing essays and programming codes.\n\n\n\n\nIs AI a threat to data analytics?\n\nFundamental understanding of the subject matter is still crucial for effectively utilizing AI‚Äôs capabilities.\n\n\n\n\n\nIf you use Generative AI such as ChatGPT, please try to understand what ChatGPT gives you.\n\nCopying and pasting it without any understanding harms your learning opportunity."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#learning-objectives",
    "title": "Lecture 1",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\nUnderstand the concept of the tools we will use throughout the course:\n\nGit\nGitHub\n\n\n\n\n\nSet up the tools in your laptop.\n\nAnaconda\nR, RStudio, and R Packages\nGit\nPersonal website"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git",
    "title": "Lecture 1",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\n\n\\(\\quad\\)\n\nGit is the most popular version control tool for any software development.\n\nIt tracks changes in a series of snapshots of the project, allowing developers to revert to previous versions, compare changes, and merge different versions.\nIt is the industry standard and ubiquitous for coding collaboration."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-git-1",
    "title": "Lecture 1",
    "section": "What is Git?",
    "text": "What is Git?\n\n\n\n\ngit add .\ngit commit -m \"any message is here\"\ngit push -u origin main\n\\(\\quad\\)\n\n\nGit operates primarily through command-line tools (e.g., Terminal) and is local to a user‚Äôs computer.\n\nIt has a steep learning curve.\n\nWe will not do git collaboration but use only the 3-step git commands on Terminal to update a website."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-github",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-github",
    "title": "Lecture 1",
    "section": "What is GitHub?",
    "text": "What is GitHub?\n\nGitHub is a web-based hosting platform for Git repositories to store, manage, and share code.\n\n\n\nYour personal website will be hosted on a GitHub repository.\nCourse contents will be posted not only in Brightspace but also in our GitHub repositories (‚Äúrepos‚Äù) and websites.\nGithub is useful for many reasons, but the main reason is how user friendly it makes uploading and sharing code."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-anaconda",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-anaconda",
    "title": "Lecture 1",
    "section": "What is Anaconda?",
    "text": "What is Anaconda?\n\n\nAnaconda is an all-in-one Python distribution.\n\nAnaconda includes Python 3.x and its standard libraries such as pip, pandas, matplotlib, etc.\nAnaconda also includes several software applications of integrated development environment (IDE).\nAn IDE is a software application that provides comprehensive facilities (e.g., text code editor, graphical user interface (GUI)) to computer programmers for software development.\n\nFor our course, we will mainly use Google Colab.\n\nIf we need to use Python locally from your laptop, we can use Jupyter or Spyder IDE from Anaconda Distribution.\n\nIf you know how to set up Visual Studio Code (VS Code), go for it!\n\nVS Code is a free, open-source code editor developed by Microsoft, and is widely used by developers for programming and software development."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-r",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-r",
    "title": "Lecture 1",
    "section": "What is R?",
    "text": "What is R?\n\nR is a programming language and software environment designed for statistical computing and graphics.\nR has become a major tool in data analysis, statistical modeling, and visualization.\n\nIt is widely used among statisticians and data scientists for developing statistical software and performing data analysis.\nR is open source and freely available."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-rstudio",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#what-is-rstudio",
    "title": "Lecture 1",
    "section": "What is RStudio?",
    "text": "What is RStudio?\n\n\nRStudio is an integrated development environment (IDE) mainly for R.\nRStudio is a user-friendly interface that makes using R easier and more interactive.\n\nIt provides a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging, and workspace management.\nIt integrates well with Git."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#python-vs.-r",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#python-vs.-r",
    "title": "Lecture 1",
    "section": "Python vs.¬†R",
    "text": "Python vs.¬†R\n\n\n\nPython\n\nPython can be used for a wide range of applications, from web and game development to machine learning, making it a highly versatile language.\nPython has the largest community in the programming world, providing a wealth of resources, libraries, and frameworks.\n\n\nR\n\nR is particularly strong in statistical analysis and visualization, with a vast number of packages for statistical methods, including machine learning.\nThe community around R, particularly in academia and research, is very active.\n\n\n\n\nBoth Python and R hold significant value in industry and government sectors.\n\nHowever, Python is often more favored for roles in the industry, whereas R tends to be preferred for positions in the public sector."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-1",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-1",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nGetting a GitHub account\n\n\n\nCreate the GitHub account with your Geneseo email.\n\nGo to GitHub.\nClick ‚ÄúSign up for GitHub‚Äù.\n\n\n\n\n\nChoose your GitHub username carefully:\n\nhttps://USERNAME.github.io will be the address for your website.\nByeong-Hak‚Äôs GitHub username is bcdanl, so that Byeong-Hak owns the web address https://bcdanl.github.io.\n\n\n\n\n\nIt is better to have a username with all lower cases."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-2",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-2",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nParticipate in the Discussions!\n\nGo to Lecture 1 - Q & A.\nSign in with GitHub account, and then add comments to the board."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-3",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-3",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nAnaconda\n\nTo install Anaconda, go to the following download page:\n\nAnaconda Distribution.\nClick the ‚ÄúDownload‚Äù button."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-4",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-4",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR programming\n\nThe R language is available as a free download from the R Project website at:\n\nWindows: R for Windows\nMac: R for Mac\nDownload the file of R that corresponds to your Mac OS (Big Sur, Apple silicon arm64, High Sierra, El Capitan, Mavericks, etc.)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-5",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-5",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Studio\n\n\nThe RStudio Desktop is available as a free download from the following webpage:\n\nRStudio Download\n\nA recent version of RStudio includes Quarto, so that we do not need to install Quarto separately.\n\n\n\n\n\nFor Mac users, try below steps:\n\nRun RStudio-*.dmg file.\nFrom the Pop-up menu, click the RStudio icon.\nWhile clicking the RStudio icon, drag it to the Applications directory."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-6",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-6",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nScript Pane is where you write R commands in a script file that you can save.\n\n\n\nAn R script is simply a text file containing R commands.\nRStudio will color-code different elements of your code to make it easier to read.\n\n\n\n\n\n\n\n\nTo open an R script,\n\nFile \\(&gt;\\) New File \\(&gt;\\) R Script\n\n\n\n\n\n\nTo save the R script,\n\nFile \\(&gt;\\) Save"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-7",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-7",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nConsole Pane allows you to interact directly with the R interpreter and type commands where R will immediately execute them."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-8",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-8",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nEnvironment Pane is where you can see the values of variables, data frames, and other objects that are currently stored in memory.\nType below in the Console Pane, and then hit Enter:\n\na &lt;- 1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-9",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-9",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nPlots Pane contains any graphics that you generate from your R code."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-10",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-10",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Packages and tidyverse\n\nR packages are collections of R functions, compiled code, and data that are combined in a structured format."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-11",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-11",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\ntidyverse\n\n\n\nThe tidyverse is a collection of R packages designed for data science that share an underlying design philosophy, grammar, and data structures.\n\n\n\ntidyverse includes a lot of R packages, including ggplot2, dplyr, and tidyr.\nThe tidyverse packages work harmoniously together to make data manipulation, exploration, and visualization more."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-12",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-12",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nInstalling R packages with install.packages(\"packageName\")\n\nR packages can be easily installed from within R using functions install.packages(\"packageName\").\n\nTo install the R package tidyverse, type and run the following from R console:\n\n\n\ninstall.packages(\"tidyverse\")\n\nWhile running the above codes, you may encounter the question below from the R Console:\n\n\n\n\nMac: ‚ÄúDo you want to install from sources the packages which need compilation?‚Äù from Console Pane.\n\n\n\nWindows: ‚ÄúWould you like to use a personal library instead?‚Äù from Pop-up message.\n\n\n\n\nType no in the R Console, and then hit Enter."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-13",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-13",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nLoading R packages with library(packageName)\n\nOnce installed, a package is loaded into an R session using library(packageName) so that its functions and data can be used.\n\nTo load the R package tidyverse, type and run the following command from a R script:\n\n\nlibrary(tidyverse)\ndf_mpg &lt;- mpg\n\n\nmpg is the data.frame provided by the R package ggplot2, one of the R pakcages in tidyverse.\n\nSince tidyverse is installed, ggplot2 package is already installed."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-14",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-14",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Options Setting\n\n\n\n\n\nThis option menu is found by menus as follows:\n\nTools \\(&gt;\\) Global Options\n\nCheck the boxes as in the left.\nChoose the option Never for  Save workspace to .RData on exit:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-15",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-15",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nPython in RStudio\n\nPython OptionR package, reticulate\n\n\n\nWe can run Python codes within RStudio.\nSelect Python interpreter in RStudio from Tools \\(&gt;\\) Global Options \\(&gt;\\) Python:\n\n\n\n\n\nInstall the R package, reticulate\n\ninstall.packages(\"reticulate\")\n\nThis package allows Quarto to use Python and R objects interactively within one Quarto document."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-16",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-16",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nBuilding a Website\n\nLet‚Äôs do Classwork 1."
  },
  {
    "objectID": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-17",
    "href": "danl-lec/danl-399-lec-01-2024-0126.html#installing-the-tools-17",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nMarkdown\n\nJupyter Notebook, Quarto, and GitHub-based Discussion Boards use markdown as its underlying document syntax.\nLet‚Äôs do Classwork 2."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-1",
    "title": "Lecture 5",
    "section": "Data Visualization with ggplot()",
    "text": "Data Visualization with ggplot()\n\nStep 1. Figure out whether variables of interests are categorical or continuous.\nStep 2. Think which geometric objects, aesthetic mappings, and faceting are appropriate to visualize distributions and relationships.\nStep 3. If needed, transform a given data.frame (e.g., filtered observations, new variables, summarized data) and try new visualizations."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-visualization-with-ggplot-2",
    "title": "Lecture 5",
    "section": "Data Visualization with ggplot()",
    "text": "Data Visualization with ggplot()\nGeometric objects\n\nA distribution of a categorical variable (e.g., geom_bar() and more)\nA distribution of a continuous variable (e.g., geom_histogram() and more)\nA relationship between two categorical variables (e.g., geom_bar() and more)\nA relationship between two continuous variables (e.g., geom_point() with geom_smooth() and more)\nA relationship between a categorical variable and a continuous variable (e.g., geom_boxplot() and more)\nA time trend of a categorical variable (e.g., geom_bar() and more)\nA time trend of a continuous variable (e.g., geom_line() and more)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-1",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\n\nWe will learn about how to transform data.frame before we send it to ggplot to be turned into a figure.\n\nWe will learn how to use some of dplyr‚Äôs ‚Äúaction verbs‚Äù to filter, select, group, mutate, summarize and transform our data.\n\nWe will expand the number of geoms we know about, and learn more about how to choose between them.\n\nDifferent geoms potentially requires different aesthetic mappings.\n\nWe discuss the five key dplyr functions to solve various data manipulation challenges"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\n\nFilter observations by logical conditions about values of variables (filter()).\nArrange/sort rows (arrange()).\nSelect variables by their names (select()).\nRename variables by their names (rename()).\nCreate new variables with functions of existing variables (mutate()).\nRelocate existing variables by their names (relocate()).\nCollapse a data.frame down to a summarized version of it (summarize()).\nGroup a data.frame by a categorical variable (group_by())."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-1",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\nTools -&gt; Global Options -&gt; Code -&gt; Check ‚ÄúUser native pipe operator‚Äù"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-2",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\n\nBecause the first argument is a data.frame and the output is a data.frame, dplyr verbs work well with the pipe, |&gt;\n\nCtrl + Shift + M for Windows; command + Shift + M for Mac.\n\nThe pipe (|&gt;) takes the thing on its left and passes it along to the function on its right so that\n\nf(x, y) is equivalent to x |&gt; f(y).\ne.g., filter(DATA_FRAME, LOGICAL_STATEMENT) is equivalent to DATA_FRAME |&gt;  filter(LOGICAL_STATEMENT).\n\nThe easiest way to pronounce the pipe (|&gt;) is ‚Äúthen‚Äù.\n\nThe pipe (|&gt;) is super useful when we have a chain of data transforming operations to do."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#data-transformation-3",
    "title": "Lecture 5",
    "section": "Data Transformation",
    "text": "Data Transformation\ndplyr basics\n\nDATA_FRAME |&gt; filter(LOGICAL_CONDITIONS)\nDATA_FRAME |&gt; arrange(VARIABLES)\nDATA_FRAME |&gt; select(VARIABLES)\nDATA_FRAME |&gt; rename(NEW_VAR = EXISTING_VAR)\nDATA_FRAME |&gt; mutate(NEW_VARIABLE = ... )\nDATA_FRAME |&gt; relocate(VARIABLES)\nDATA_FRAME |&gt; group_by(VARIABLES)\nDATA_FRAME |&gt; summarize(NEW_VARIABLE = ...)\nThe subsequent arguments describe what to do with the data.frame, mostly using variable names."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-2",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\n\n\nLet‚Äôs describe how the distribution of religious preferences varies by regions in the US using the socviz::gss_sm data.frame."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-3",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\nGroup the data into the nested structure we want for our summary, such as ‚ÄúReligion by Region‚Äù or ‚ÄúAuthors by Publications by Year‚Äù.\nFilter or select pieces of the data by row, column, or both.\nMutate the data by creating new variables at the current level of grouping.\n\nThis adds new columns to the table without aggregating it.\n\nSummarize or aggregate the grouped data.\n\nThis creates new variables (e.g., means with mean(), sums with sum(), and counts with n()) at a higher level of grouping."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-4",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\nrel_by_region &lt;- gss_sm |&gt;\n    group_by( bigregion, religion ) |&gt;\n    summarize( N = n() ) |&gt;\n    mutate( freq = N / sum(N),\n            pct = round( (freq*100), 0) )\n\n\nWe use the dplyr functions, group_by(), filter(), select(), mutate(), and summarize(), to carry out these data transformation tasks within our pipeline (|&gt;, Ctrl/Cmd + Shift + M).\nHere we create a new data.frame called rel_by_region."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-5",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\np &lt;- ggplot( rel_by_region, \n             aes( x = bigregion, \n                  y = pct, \n                  fill = religion))\n\np + geom_col( position = \"dodge2\" ) +\n    labs(x = \"Region\", \n         y = \"Percent\", \n         fill = \"Religion\") +\n    theme(legend.position \n            = \"top\") \n\n\n\n\n\n\n\nNow that we are working directly with percentage values in a summary table, we can use geom_col() instead of geom_bar()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-6",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nUse pipes to summarize data\n\n\nLet‚Äôs replicate the above bar chart."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-7",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\norgandata\nskimr::skim(organdata)\n\n\nLet‚Äôs move to a new dataset, the socviz::organdata data.frame."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-8",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = year, \n                  y = donors))\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-9",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = year, y = donors))\np + \n  geom_line(aes(group = country)) + \n  facet_wrap(~ country) +\n  theme(axis.text.x = \n          element_text(angle = 45))\n\n\n\n\n\n\n\nThe above describes a yearly trend of donors for each country."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-10",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs focus on the country-level variation of donors using geom_boxplot(), but without paying attention to the time trend."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-11",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-11",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nlevels(organdata$country)\n\n\norgandata &lt;- organdata |&gt;\n  mutate(country = \n           fct_reorder(country, \n                       donors, na.rm = T) ) \n\n\nWe can reorder the levels using fct_reorder(f, x, fun), which can take three arguments.\n\nf: the factor whose levels we want to modify.\nx: a numeric vector that we want to use to reorder the levels.\nOptionally, fun: a function that‚Äôs used if there are multiple values of x for each value of f. The default value is median."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-12",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-12",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = country, \n                  y = donors))\np + geom_boxplot() + \n  labs(x = NULL) + \n  coord_flip()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-13",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-13",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = \n                    reorder(\n                      country, \n                      donors, \n                      na.rm=TRUE),\n                  y = donors, \n                  fill = world))\np + geom_boxplot() + \n  labs(x=NULL) +\n  coord_flip() + \n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-14",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-14",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nSometimes it is better to sort the data with a categorical variable when plotting a bar chart or a Cleveland dotplot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-15",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-15",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n    summarize(donors_mean= mean(donors, na.rm = TRUE),\n              donors_sd = sd(donors, na.rm = TRUE),\n              gdp_mean = mean(gdp, na.rm = TRUE),\n              health_mean = mean(health, na.rm = TRUE),\n              roads_mean = mean(roads, na.rm = TRUE),\n              cerebvas_mean = mean(cerebvas, na.rm = TRUE))\n\n\nSummarize the data.frame organdata to calculate the mean and the standard deviation of each numeric variable for each consent_law-country pair.\nWould there be a simpler way to do the task above?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-16",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-16",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n  summarize_if(is.numeric, lst(mean, sd), na.rm = TRUE) |&gt;\n  ungroup()\n\n\nWhat we would like to do is apply the mean() and sd() functions to every numerical variable in organdata, but only the numerical ones.\n\nsummarize_if( is.numeric, lst(mean, sd), na.rm = T) works really well."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-17",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-17",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above dot plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-18",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-18",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above faceted dot plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-19",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-19",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nCleveland dotplots are generally preferred to bar or column charts.\n\nWhen making them, put the categories on the y-axis and order them in the way that is most relevant to the numerical summary you are providing.\nThis sort of plot is also an excellent way to summarize model results or any data with error ranges."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-20",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-20",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\nUsing geom_pointrange(), we can tell ggplot to show us a point estimate and a range around it.\n\nWith geom_pointrange(), we map our x and y variables as usual, but the function needs a little more information than geom_point(), for example (ymin, ymax) or (xmin, xmax)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-21",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#graph-tables-add-labels-make-notes-21",
    "title": "Lecture 5",
    "section": "Graph tables, add labels, make notes",
    "text": "Graph tables, add labels, make notes\nContinuous variables by group or category\n\n\nLet‚Äôs draw the above dot-and-whisker plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-1",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nWe have used scale_x_log10(), scale_x_continuous() and otherscale_*_*() functions to adjust axis labels.\nWe used the guides() function to remove the legends for a color mapping and a label mapping.\nWe also used the theme() function to move the position of a legend from the side to the top of a figure.\nWhat are the differences between the scale_*_*() functions, the guides() function, and the theme() function?\nWhen do we know to use one rather than the other? Why are there so many scale_*_*() functions? How can we tell which one we need?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-2",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nHere is a rough and ready starting point:\nEvery aesthetic mapping has a scale.\n\nIf we want to adjust how that scale is marked or graduated, then we use a scale_*_*() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-3",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nMany scales come with a legend or key to help the reader interpret the graph. These are called guides.\n\nWe can make adjustments to them with the guides() function.\nPerhaps the most common use case is to make the legend disappear.\nAnother is to adjust the arrangement of the key in legends and colorbars.\nguides is also one of the parameters in scales_*_*()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-4",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nGraphs have other features not strictly connected to the logical structure of the data being displayed.\n\nThese include things like their background color, the typeface used for labels, or the placement of the legend on the graph.\nTo adjust these, use the theme() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-5",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = world))\np + geom_point()\n\n\nscale_*_*() and guides() are closely connected.\n\nThe guides() provides information about the scale, such as in a legend or colorbar.\nSo, it is possible to make adjustments to guides from inside the various scale_*_*() functions.\n\nThe x and y scales are both continuous.\nThe color scale is discrete.\n\nA color or fill mapping can also be a continuous quantity (colorbar)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-6",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\nscale_&lt;MAPPING&gt;_&lt;KIND&gt;\n\n\n\n\nBecause we have several potential mappings, and each mapping might be to one of several different scales, we end up with a lot of individual scale_*_* functions.\n\nEach deals with one combination of mapping and scale. Too many to memorize.\nThey are named according to a consistent logic:\n\nhttps://ggplot2tor.com/scales provides a complete guide to scales.\n\nThis app makes it easy for you to find the right scales and arguments for your variable types and aesthetics."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-7",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n\nLet‚Äôs replicate the following:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-8",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-9",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#understanding-scales-guides-and-themes-10",
    "title": "Lecture 5",
    "section": "Understanding Scales, Guides, and Themes",
    "text": "Understanding Scales, Guides, and Themes\n \n\n\nLet‚Äôs replicate the above using theme()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-1",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-1",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = roads_mean, \n                  y = donors_mean))\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country))\n\n\n\n\n\n\n\nIt can sometimes be useful to plot the labels along with the points in a scatterplot, or just plot informative labels directly using geom_text()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-2",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-2",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country), \n            hjust = 0)\n\n\n\n\n\n\n\nBy default, the text is plotted right on top of the points.\nhjust = 0 will left justify the label; hjust = 1 will right justify it."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-3",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-3",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-4",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-4",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\ninstall.packages(\"ggrepel\")\nlibrary(ggrepel)\n\n\nInstead of wrestling any further with geom_text(), we can use ggrepel::geom_text_repel() instead."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-5",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-5",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\nsocviz::elections_historic |&gt; select(2:7) \n\n\nLet‚Äôs use some historical U.S. presidential election data provided in the socviz library."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-6",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-6",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\np &lt;- ggplot(elections_historic, aes(x = popular_pct, y = ec_pct,\n                                    label = winner_label))\n\n\nStep 1. Let‚Äôs map aethetics to variables"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-7",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-7",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- p + \n    geom_hline(yintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_vline(xintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_point() +\n    geom_text_repel()\np\n\n\n\n\n\n\n\nStep 2. Then, add geometric objects to ggplot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-8",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-8",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np &lt;- p + \n     scale_x_continuous(\n       labels = scales::percent) +\n     scale_y_continuous(\n       labels = scales::percent) \np\n\n\n\n\n\n\n\nStep 3. Let‚Äôs set the scales for x and y."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-9",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-9",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nPlot text directly\n\n\np_title &lt;- \"Presidential Elections: Popular & Electoral College Margins\"\np_subtitle &lt;- \"1824-2016\"\np_caption &lt;- \"Data for 2016 are provisional.\"\nx_label &lt;- \"Winner's share of Popular Vote\"\ny_label &lt;- \"Winner's share of Electoral College Votes\"\n\np + labs(x = x_label, \n         y = y_label, \n         title = p_title, \n         subtitle = p_subtitle,\n         caption = p_caption)\n\n\n\n\n\n\n\nStep 4. Let‚Äôs set the labels."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-10",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-10",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean, \n                  y = health_mean))\n\np + geom_point() +\n    geom_text_repel(\n      data = filter(by_country, \n                    gdp_mean &gt; 25000),\n      mapping = \n        aes(label = country))\n\n\n\n\n\n\n\nSometimes we want to pick out some points of interest in the data without labeling every single item.\n\nWe do this using the filter() function."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-11",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-11",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean, \n                  y = health_mean))\np + geom_point() +\n    geom_text_repel(\n      data = \n        filter(by_country,\n               gdp_mean &gt; 25000 | \n                 health_mean &lt; 1500 |\n                 country %in% \"Belgium\"),\n      mapping = \n        aes(label = country))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-12",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-12",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\n# creating a dummy variable for labels\norgandata$ind &lt;- \n  organdata$ccode %in% c(\"Ita\", \"Spa\") & \n  organdata$year &gt; 1998   \np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = ind))\np + geom_point() +\n    geom_text_repel(\n      data = filter(organdata, ind),\n      mapping = aes(label = ccode)) +\n    guides(label = \"none\", \n           color = \"none\")\n\n\n\n\n\n\n\nWe can also add a logical variable (either TRUE or FALSE) to label specific points using filter()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-13",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-13",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nLabel Outliers\n\n\nLet‚Äôs replicate the above using ggplot::mtcars:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-14",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-14",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"text\")\n\n\n\np &lt;- ggplot(data = organdata, \n            mapping = \n              aes(x = roads, \n                  y = donors))\np + geom_point() + \n  annotate(geom = \"text\", \n           x = 91, y = 33,\n           label = \"A surprisingly high \\n recovery rate.\",\n           hjust = 0)\n\n\n\n\n\n\n\nWe can use annotate() to annotate the figure directly."
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-15",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-15",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"rect\")\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors))\np + geom_point() +\n    annotate(geom = \"rect\", \n             xmin = 125, xmax = 155,\n             ymin = 30, ymax = 35, \n             fill = \"red\", \n             alpha = 0.2) + \n    annotate(geom = \"text\", \n             x = 157, y = 33,\n             label = \"A surprisingly high \\n recovery rate.\", \n             hjust = 0)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-16",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-16",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"point\")\n\n\np &lt;- ggplot(mpg, aes(displ, hwy)) +\n  geom_point(\n    data = \n      filter(mpg, \n             manufacturer == \"subaru\"), \n    color = \"orange\", \n    size = 3) +\n  geom_point() \np + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40, \n           colour = \"orange\", \n           size = 3) + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40) + \n  annotate(geom = \"text\", \n           x = 5.6, y = 40, \n           label = \"subaru\", \n           hjust = \"left\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-17",
    "href": "danl-lec/danl-399-lec-05-2024-0223.html#add-labels-and-make-notes-17",
    "title": "Lecture 5",
    "section": "Add Labels and Make Notes",
    "text": "Add Labels and Make Notes\nWrite and draw in the plot area with annotate(geom = \"curve\")\n\n\np + \n  annotate(\n    geom = \"curve\", \n    x = 4, y = 35, \n    xend = 2.65, yend = 27, \n    curvature = .3, \n    arrow = \n      arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", \n           x = 4.1, y = 35, \n           label = \"subaru\", \n           hjust = \"left\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#learning-objectives",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#learning-objectives",
    "title": "Lecture 3",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\n\nggplot grammar"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#exploratory-data-analysis",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#exploratory-data-analysis",
    "title": "Lecture 3",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\n\n\n\nIn data visualization, you‚Äôll turn data into plots.\nIn data transformation, you‚Äôll learn the key verbs that allow you to select important variables, filter out key observations, create new variables, and compute summaries.\nIn exploratory data analysis, you‚Äôll combine summary statistics (skim()), visualization, and transformation with your curiosity and skepticism to ask and answer interesting questions about data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#data-visualization",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#data-visualization",
    "title": "Lecture 3",
    "section": "Data visualization",
    "text": "Data visualization\n\n‚ÄúThe simple graph has brought more information to the data analyst‚Äôs mind than any other device.‚Äù John Tukey\n\n\nData visualization is the creation and study of the visual representation of data\nMany tools for visualizing data ‚Äì R is one of them\nMany approaches/systems within R for making data visualizations ‚Äì ggplot2 is one of them, and that‚Äôs what we‚Äôre going to use"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#grammar-of-graphics",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#grammar-of-graphics",
    "title": "Lecture 3",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-1",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nIn the plot above, one group of points (highlighted in red) seems to fall outside of the linear trend.\n\nHow can you explain these cars? Are those hybrids?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-2",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nAn aesthetic is a visual property (e.g., size, shape, color) of the objects (e.g., class) in your plot.\nYou can display a point in different ways by changing the values of its aesthetic properties."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-3",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-4",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a shape to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   shape = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-5",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a size to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   size = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-6",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding an alpha (transparency) to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   alpha = class) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-7",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting problem\n\nMany points overlap each other.\n\nThis problem is known as overplotting.\n\nWhen points overlap, it‚Äôs hard to know how many data points are at a particular location.\nOverplotting can obscure patterns and outliers, leading to potentially misleading conclusions.\nWe can set a transparency level (alpha) between 0 (full transparency) and 1 (no transparency)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-8",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and alpha\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .2)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-9",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and size\n\nWe can also consider setting size smaller than 1.\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             size = .5)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-10",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             color = \"blue\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-11",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nTo set an aesthetic manually, set the aesthetic by name as an argument of your geom_ function; i.e.¬†it goes outside of aes().\n\nYou‚Äôll need to pick a level that makes sense for that aesthetic:\n\nThe name of a color as a character string.\nThe size of a point in mm.\nThe shape of a point as a number, as shown below."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-12",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#aesthetic-mappings-12",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot?\n\n\nggplot(data = mpg) + \n  geom_point( mapping = \n                aes(x = displ, \n                    y = hwy, \n                    color = \"blue\") )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#common-problems-in-ggplot",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#common-problems-in-ggplot",
    "title": "Lecture 3",
    "section": "Common problems in ggplot()",
    "text": "Common problems in ggplot()\n\nOne common problem when creating ggplot2 graphics is to put the + in the wrong place.\n\n\nggplot(data = mpg) \n + geom_point( mapping = \n                 aes(x = displ, \n                     y = hwy) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-1",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOne way to add a variable, particularly useful for categorical variables, is to use facets to split our plot into facets, subplots that each display one subset of the data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-2",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot by a single variable, use facet_wrap().\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( . ~ class, nrow = 2)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-3",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot on the combination of two variables, add facet_grid( VAR_ROW ~ VAR_COL ) to our plot call."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-4",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nThe first argument of facet_grid() is also a formula.\n\nThis time the formula should contain two variable names separated by a ~."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-5",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-6",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOption scales in facet_*() is whether scales is\n\nfixed (\"fixed\", the default),\nfree in one dimension (\"free_x\", \"free_y\"), or\nfree in two dimensions (\"free\")."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#facets-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#facets-7",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl, \n             scales = \"free_x\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-1",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nHow are these two plots similar?"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-2",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nA geom_*() is the geometrical object that a plot uses to represent data.\n\nBar charts use geom_bar();\nLine charts use geom_line();\nBoxplots use the geom_boxplot();\nScatterplots use the geom_point();\nFitted lines use the geom_smooth();\nand many more!\n\nWe can use different geom_*() to plot the same data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-3",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nScatterplot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-4",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nFitted lines\n\n\nggplot(data = mpg) + \n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-5",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nEvery geom function in ggplot2 takes a mapping argument.\nHowever, not every aesthetic works with every geom.\n\nWe could set the shape of a point, but you couldn‚Äôt set the shape of a line;\nWe could set the linetype of a line."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-6",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy, \n                      linetype = drv) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-7",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nSetting method = lm manually in geom_smooth() gives a straight line that fits into data points.\n\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy),\n               method = lm)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-8",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can set the group aesthetic to a categorical variable to draw multiple objects.\n\nggplot2 will draw a separate object for each unique value of the grouping variable."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-9",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-10",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy, \n                    group = drv))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-11",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIn practice, ggplot2 will automatically group the data for these geoms whenever we map an aesthetic to a discrete variable (as in the linetype example).\n\n\n\nggplot(data = mpg) +\n  geom_smooth(\n    mapping = aes(x = displ, \n                  y = hwy, \n                  color = drv),\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-12",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-12",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nTo display multiple geometric objects in the same plot, add multiple geom_*() functions to ggplot():\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy)) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy), \n              method = lm, \n              color = 'red')\n\n\n\n\n\n\n\nUsing geom_point(), geom_smooth(), and geom_smooth(method = lm) together is an excellent option to visualize the relationship between the two variables."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-13",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-13",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIf we place mappings in a geom function, ggplot2 will treat them as local mappings for the layer.\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class),\n             alpha = .3) + \n  geom_smooth()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-14",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-14",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class), \n             alpha = .3) + \n  geom_smooth(data = \n                filter(mpg, \n                       class == \"subcompact\"), \n              se = FALSE)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-15",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#geometric-objects-15",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can use the same idea to specify different data for each layer.\nHere, our smooth line displays just a subset of the mpg data.frame, the subcompact cars.\n\nfilter() is the tidyverse-way to filter observations in a data.frame.\n\nThe local data argument in geom_smooth() overrides the global data argument in ggplot() for that layer only.\nThe standard error (se) tells us how much the predicted values from a model might differ from the actual values we‚Äôre trying to predict.\n\nIt‚Äôs a way to measure how good a quality of prediction is."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-1",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nMany graphs, including bar charts, calculate new values to plot:\n\ngeom_bar(), geom_histogram(), and geom_freqpoly() bin our data and then plot bin counts, the number of observations that fall in each bin.\ngeom_boxplot() computes a summary of the distribution and then display a specially formatted box.\ngeom_smooth() fits a model to our data and then plot predictions from the model."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-2",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA histogram geom_histogram() is a continuous version of a bar chart.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-3",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nWhen using geom_histogram(), we should experiment on either bins or binwidth.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-4",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA frequency polygon geom_freqpoly() is a line version of a histogram.\n\n\n\nggplot(diamonds) +\n  geom_freqpoly(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#a-little-bit-of-math-for-log",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#a-little-bit-of-math-for-log",
    "title": "Lecture 3",
    "section": "A Little Bit of Math for log()",
    "text": "A Little Bit of Math for log()\n\nlog functionslog examples\n\n\n\nThe logarithm function, \\(y = \\log_{b}\\,(\\,x\\,)\\), looks like ‚Ä¶.\n\n\n\n\n\n\n\n\\(\\log_{10}\\,(\\,100\\,)\\): the base \\(10\\) logarithm of \\(100\\) is \\(2\\), because \\(10^{2} = 100\\)\n\\(\\log_{e}\\,(\\,x\\,)\\): the base \\(e\\) logarithm is called the natural log, where \\(e = 2.718\\cdots\\) is the mathematical constant, the Euler‚Äôs number.\n\\(\\log\\,(\\,x\\,)\\) or \\(\\ln\\,(\\,x\\,)\\): the natural log of \\(x\\) .\n\\(\\log_{e}\\,(\\,7.389\\cdots\\,)\\): the natural log of \\(7.389\\cdots\\) is \\(2\\), because \\(e^{2} = 7.389\\cdots\\)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nNYC Housing Sales\n\nlibrary(tidyverse)\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\nsale_df contains data for residential property sales from September 2017 and August 2018 in NYC.\n\nLet‚Äôs focus on sale.price, a property‚Äôs sales price."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-1",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nPercentage Change\n1. We should consider using a logarithmic scale when percent change, or change in orders of magnitude, is more important than changes in absolute units.\n\nFor small changes in variable \\(x\\) from \\(x_{0}\\) to \\(x_{1}\\), the following can be shown:\n\n\\[\\Delta \\log(x) \\,= \\, \\log(x_{1}) \\,-\\, \\log(x_{0})\n\\approx\\, \\frac{x_{1} \\,-\\, x_{0}}{x_{0}}\n\\,=\\, \\frac{\\Delta\\, x}{x_{0}}.\\]\n\nFor example, a difference in sale.price of $10,000 means something very different across people with different income/wealth levels."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#the-use-of-log-2",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nWide Range of Skewed Data\n2. We should consider using a log scale when a variable is heavily skewed. - It can help visualize both small and large values effectively.\n\n\nggplot(sale_df, \n       aes(x = sale.price), \n       bins = 500) +\n  geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-5",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nBar charts seem simple, but they are interesting because they reveal something subtle about plots.\nConsider a basic bar chart, as drawn with geom_bar().\nThe following bar chart displays the total number of diamonds in the ggplot2::diamonds data.frame, grouped by cut.\nThe diamonds data.frame comes in ggplot2 and contains information about ~54,000 diamonds, including the price, carat, color, clarity, and cut of each diamond."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-6",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\ngeom_bar() bins our data and then plot bin counts, the number of observations that fall in each bin.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = aes(x = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-7",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nThe algorithm used to calculate new values for a graph is called a stat, short for statistical transformation.\nThe figure below describes how this process works with geom_bar()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-8",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-8",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\nThere are three reasons we might need to use a stat explicitly:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-9",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-9",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\n1. We might want to override the default stat.\n\n\n\n# to make a simple data.frame\ndemo &lt;- tribble(         \n  ~cut,         ~freq,\n  \"Fair\",       1610,\n  \"Good\",       4906,\n  \"Very Good\",  12082,\n  \"Premium\",    13791,\n  \"Ideal\",      21551 )\n\nggplot(data = demo) +\n  geom_bar(mapping = \n             aes(x = cut, \n                 y = freq), \n           stat = \"identity\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-10",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-10",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nCount vs.¬†Proportion\n\n2. We might want to override the default mapping from transformed variables to aesthetics.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 y = stat(prop), \n                 group = 1))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-11",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#statistical-transformation-11",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nStat summary\n\n3. We might want to draw greater attention to the statistical transformation in our code.\n\n\n\nggplot(data = diamonds) + \n  stat_summary(\n    mapping = aes(x = cut, y = depth),\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-1",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\ncolor and fill aesthetic\n\nWe can color a bar chart using either the color aesthetic, or, more usefully, fill.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 color = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-2",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nfill\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = cut))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-3",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-3",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nNote that the bars are automatically stacked if we map the fill aesthetic to another variable.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity) )"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-4",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-4",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nThe stacking is performed automatically by the position adjustment specified by the position argument.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity),\n           position = \"stack\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-5",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-5",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\n\nIf we don‚Äôt want a stacked bar chart with counts, we can use one of two other position options: fill or dodge.\nposition = \"fill\" works like stacking, but makes each set of stacked bars the same height.\n\nThis makes it easier to compare proportions across groups.\n\nposition = \"dodge\" places overlapping objects directly beside one another."
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-6",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-6",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"fill\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"fill\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-7",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#position-adjustment-7",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"dodge\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"dodge\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-1",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-1",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ngeom_abline()\n\nWhat does geom_abline() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() # math: y = ax + b"
  },
  {
    "objectID": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-2",
    "href": "danl-lec/danl-399-lec-03-2024-0209.html#coordinate-systems-2",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ncoord_fixed()\n\nWhat does coord_fixed() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() +\n  coord_fixed()"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html",
    "href": "danl-cw/danl-399-cw-02.html",
    "title": "Classwork 2",
    "section": "",
    "text": "Markdown is a lightweight markup language with plain-text formatting syntax. Its main goal is to be readable and easy to write, even when viewed as plain text. Markdown is widely used for creating formatted text on the web and in various applications such as Quarto.\n\n\n\n\nHeadings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL), and images with ![Alt Text](Image URL).\n[DANL 210](https://bcdanl.github.io/210)\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)\n\n\n\n\n\n\n&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```\n\n\n\n\n\nDo the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji.\n\n\n\n\n\n\nQuarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#basic-syntax",
    "href": "danl-cw/danl-399-cw-02.html#basic-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "Headings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL), and images with ![Alt Text](Image URL).\n[DANL 210](https://bcdanl.github.io/210)\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#advanced-syntax",
    "href": "danl-cw/danl-399-cw-02.html#advanced-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```"
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#practice-problems",
    "href": "danl-cw/danl-399-cw-02.html#practice-problems",
    "title": "Classwork 2",
    "section": "",
    "text": "Do the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji."
  },
  {
    "objectID": "danl-cw/danl-399-cw-02.html#references",
    "href": "danl-cw/danl-399-cw-02.html#references",
    "title": "Classwork 2",
    "section": "",
    "text": "Quarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-cw/danl-399-cw-01.html",
    "href": "danl-cw/danl-399-cw-01.html",
    "title": "Classwork 1",
    "section": "",
    "text": "Getting a GitHub account\nStep 1. Create the GitHub account with your Geneseo email.\n\nGo to GitHub.\nClick ‚ÄúSign up for GitHub‚Äù.\n\n\nChoose your GitHub username carefully:\n\nhttps://USERNAME.github.io will be the address for your website.\nByeong-Hak‚Äôs GitHub username is bcdanl, so that Byeong-Hak owns the web address https://bcdanl.github.io.\n\nIt is recommended to have a username with all lower cases.\n\n\n\n\n\nInstalling git if you do not have one.\nStep 2.\n\nCheck whether git is installed in your laptop.\n\n\nFrom the Console Pane in RStudio, click Terminal tab.\n\n\n\n\n\nFrom the Terminal, run the following command to check if your laptop has git installed.\n\ngit --version\n\nIf your computer has git installed, you will see the message below and you do not need to install git:\n\ngit version 2.xx\n\nIf your computer does not have git installed, you will see the message below and you need to install git:\n\n'git' is not recognized as an internal or external command\n\n\nInstall git if you do not have one. Move to the next step if you have git installed in your laptop.\n\n\n\n\nMac\n\nGo to http://git-scm.com/downloads, and download the file.\nClick ‚ÄúmacOS‚Äù, scroll down the webpage, and then click ‚Äúinstaller‚Äù from the Binary installer section.\nRun the downloaded file.\n\n\n\n\nWindows\n\nGo to https://gitforwindows.org, and download the file.\nRun the downloaded file.\n\n\n\n\n\nKeep clicking ‚ÄúNext‚Äù to complete the installation of git.\nAfter the git installation is done, close RStudio and re-open it.\n\n\n\n\nSetting up GitHub Credential on your local Git.\nStep 3. In Terminal, run the following commands one by one:\ngit config --global user.email \"YOUR_EMAIL_ADDRESS\"\ngit config --global user.name \"YOUR_USERNAME\"\nFor example, the email address for my GitHub account is bchoe@geneseo.edu, and my GitHub username is bcdanl, so that I ran below:\ngit config --global user.email \"bchoe@geneseo.edu\"\ngit config --global user.name \"bcdanl\"\n\nStep 4. Obtain a personal access token (PAT) from GitHub.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"usethis\")\nusethis::create_github_token()\n\nThen, click ‚ÄúGenerate token‚Äù in the pop-upped web browser.\nWe can think of GitHub‚Äôs personal access token as a password that expires. You can decide how long it remains valid. My recommendation is to set its expiration for May 31, 2024, or later.\n\n\n\n\n\nThen, copy the generated PAT, and paste it to your clipboard or R script.\n\n\nStep 5. Set the GitHub credential using the PAT.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"gitcreds\")\ngitcreds::gitcreds_set()\n\nYou will be asked to provide your PAT.\nPaste your PAT to the RStudio Console, and then hit Enter.\n\n\n\n\n\n\n\nNote\n\n\n\n\nIt does not harm to create multiple PAT for one GitHub account.\nAfter the PAT expires, you should repeat the following if you want to update your GitHub website:\n\n\nCreate a new PAT:\n\nusethis::create_github_token()\n\nReplace the current PAT with the new PAT:\n\ngitcreds::gitcreds_set()\n\nSelect the option 2: Replace these credentials by typing 2 and hitting Enter on R Console.\n\n\n\n\n\n\nEstablishing the Connection between GitHub repo and your local Git\nStep 6. Login to your GitHib and make the repository.\n\nFrom https://github.com, click the plus [+] icon in the upper right corner and select ‚ÄúNew repository‚Äù.\nName this repo USERNAME.github.io, which will be the domain for your website.\n\n\ne.g., If your GitHub username is abc9, the name of your repo should be abc9.github.io, not abc_9.github.io.\n\n\nThen, copy the web address of your GitHub repo, https://github.com/USERNAME/USERNAME.github.io\n\n\nFor example, the web address for Byeong-Hak‚Äôs GitHub repo is https://github.com/bcdanl/bcdanl.github.io.\n\n\nStep 7. Create a RStudio project with Version Control\n\n\n\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúVersion Control‚Äù &gt; ‚ÄúGit‚Äù\nPaste the web address of your GitHub repo to the Repository URL menu.\nClick ‚ÄúBrowse‚Äù to select the parent directory for your local project directory (I recommend ‚ÄúDocuments‚Äù folder.)\nClick ‚ÄúCreate‚Äù\n\n\n\n\n\n\n\nNote\n\n\n\nIf Step 7 does not work on your laptop, try below Steps 7-1 and 7-2 instead. If Step 7 DOES work well, skip Steps 7-1 and 7-2.\n\n\nStep 7-1. Use git clone to establish the connection between GitHub repo and your local laptop:\n\nChange directory to ‚ÄúDocuments‚Äù in Terminal using cd command.\n\ncd &lt;pathname of \"Documents\" directory&gt;\n\nHere, you need to know the pathname of ‚ÄúDocuments‚Äù directory.\nFor example, LAPTOP_USERNAME below is not your GitHub username but one for your local laptop.\n\nMac\ncd /Users/LAPTOP_USERNAME/Documents\nWindows\ncd C:/Users/LAPTOP_USERNAME/Documents\n\nUse git clone to creates a local copy of the GitHub Repository.\n\ngit clone &lt;repository-url&gt;\n\nFor example,\n\ngit clone https://github.com/USERNAME/USERNAME.github.io\n\nStep 7-2. Create a RStudio project from Existing Directory\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúExisting Directory‚Äù\nClick ‚ÄúBrowse‚Äù to select the local copy of the GitHub Repository\nClick ‚ÄúCreate Project‚Äù\n\n\n\n\nDownloading Website Template Files\nStep 8. Download the files of website template:\n\nGo to the following webpage: https://github.com/bcdanl/danl-website-template\nFrom the webpage above, click the green icon &lt; &gt; Code, and then click ‚ÄúDownload Zip‚Äù\nExtract the Zip file you have downloaded\nIf there are the files, .gitignore, .DS_Store, or *.Rproj, in the folder, delete all of them.\nMove all the files that were compressed in the Zip file to your local project directory, USERNAME.github.io.\n\n\nSelect all the files in the danl-website-template folder (Tip: Ctrl + A (Windows) / command + A (Mac) selects all files in a directory).\nThen, Ctrl + C (Windows) / command + C (Mac) to copy them.\nThen, go to your local project directory USERNAME.github.io.\nThen, Ctrl + V (Windows) / command + V (Mac) to paste them to your local project directory USERNAME.github.io.\n\n\nRemove the danl-website-template directory from your local project directory, if you have one.\n\n\nAll the website files should be located at the same level with the R Project file (USERNAME.github.io.Rproj), shown below.\n\n\n\n\n\n\n\nPushing the Website Files to the GitHub repository\n\n\n\nStep 8. Push the files to your GitHub repository\n\nOn Terminal within RStudio, execute the following 3-step git commands, which will stage, commit, and push all the files in the local working directory to your GitHub repository:\n\n\ngit add . adds changes in your local working directory (e.g., edited files, new files, deleted files) to the staging area, which is a temporary area where you can prepare your next commit\n\ngit add .\n\ngit commit -m \"...\" records the changes in the staging area as a new snapshot in the local working directory, along with a message describing the changes.\n\ngit commit -m \"any message to describe the changes\"\n\ngit push -u origin main uploads the local changes to the online repository in GitHub.\n\ngit push -u origin main\n\n\n\n\n\n\nNote\n\n\n\nIf git push -u origin main gives error, try the following:\ngit push -u origin master\n\nThe name of the default branch in a GitHub repo is usually main, but sometimes GitHub gives master default branch instead.\n\n\n\n\nStep 9. Check whether the files are well uploaded.\n\nGo to the webpages of your GitHub repository and your website:\n\nhttps://github.com/USERNAME/USERNAME.github.io.git\nhttps://USERNAME.github.io\nRefresh the webpages (Ctrl + R for Windows users; cmd + R for Mac users)\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html",
    "href": "danl-cw/danl-399-cw-05.html",
    "title": "Classwork 5",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\nWhat does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)\n\n\n\n\n\n\n\nRecreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1a.",
    "href": "danl-cw/danl-399-cw-05.html#q1a.",
    "title": "Classwork 5",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1b.",
    "href": "danl-cw/danl-399-cw-05.html#q1b.",
    "title": "Classwork 5",
    "section": "",
    "text": "What does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1c.",
    "href": "danl-cw/danl-399-cw-05.html#q1c.",
    "title": "Classwork 5",
    "section": "",
    "text": "Recreate the R code necessary to generate the following graphs."
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q1d.",
    "href": "danl-cw/danl-399-cw-05.html#q1d.",
    "title": "Classwork 5",
    "section": "",
    "text": "Use the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q2a.",
    "href": "danl-cw/danl-399-cw-05.html#q2a.",
    "title": "Classwork 5",
    "section": "Q2a.",
    "text": "Q2a.\nWhat does geom_col() do? How is it different to geom_bar()?\nAnswer:"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05.html#q2b.",
    "href": "danl-cw/danl-399-cw-05.html#q2b.",
    "title": "Classwork 5",
    "section": "Q2b.",
    "text": "Q2b.\n\nInstall the R package, nycflights13, which provides the flights data.frame.\nVisualize the distribution of carrier.\nVisualize how the distribution of carrier varies by origin.\n\nAnswer:"
  },
  {
    "objectID": "danl-class/danl-399-note-05-2024-0223.html",
    "href": "danl-class/danl-399-note-05-2024-0223.html",
    "title": "Lecture 5 - Note",
    "section": "",
    "text": "datatable(gss_sm)\n\n\n\n\n\ngss_sm &lt;- gss_sm\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  group_by(bigregion, religion)\nrel_by_region # Groups:bigregion, religion  [24]\n\n# A tibble: 2,867 √ó 32\n# Groups:   bigregion, religion [24]\n    year    id ballot       age childs sibs   degree race  sex   region income16\n   &lt;dbl&gt; &lt;dbl&gt; &lt;labelled&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;labe&gt; &lt;fct&gt;  &lt;fct&gt; &lt;fct&gt; &lt;fct&gt;  &lt;fct&gt;   \n 1  2016     1 1             47      3 2      Bache‚Ä¶ White Male  New E‚Ä¶ $170000‚Ä¶\n 2  2016     2 2             61      0 3      High ‚Ä¶ White Male  New E‚Ä¶ $50000 ‚Ä¶\n 3  2016     3 3             72      2 3      Bache‚Ä¶ White Male  New E‚Ä¶ $75000 ‚Ä¶\n 4  2016     4 1             43      4 3      High ‚Ä¶ White Fema‚Ä¶ New E‚Ä¶ $170000‚Ä¶\n 5  2016     5 3             55      2 2      Gradu‚Ä¶ White Fema‚Ä¶ New E‚Ä¶ $170000‚Ä¶\n 6  2016     6 2             53      2 2      Junio‚Ä¶ White Fema‚Ä¶ New E‚Ä¶ $60000 ‚Ä¶\n 7  2016     7 1             50      2 2      High ‚Ä¶ White Male  New E‚Ä¶ $170000‚Ä¶\n 8  2016     8 3             23      3 6      High ‚Ä¶ Other Fema‚Ä¶ Middl‚Ä¶ $30000 ‚Ä¶\n 9  2016     9 1             45      3 5      High ‚Ä¶ Black Male  Middl‚Ä¶ $60000 ‚Ä¶\n10  2016    10 3             71      4 1      Junio‚Ä¶ White Male  Middl‚Ä¶ $60000 ‚Ä¶\n# ‚Ñπ 2,857 more rows\n# ‚Ñπ 21 more variables: relig &lt;fct&gt;, marital &lt;fct&gt;, padeg &lt;fct&gt;, madeg &lt;fct&gt;,\n#   partyid &lt;fct&gt;, polviews &lt;fct&gt;, happy &lt;fct&gt;, partners &lt;fct&gt;, grass &lt;fct&gt;,\n#   zodiac &lt;fct&gt;, pres12 &lt;labelled&gt;, wtssall &lt;dbl&gt;, income_rc &lt;fct&gt;,\n#   agegrp &lt;fct&gt;, ageq &lt;fct&gt;, siblings &lt;fct&gt;, kids &lt;fct&gt;, religion &lt;fct&gt;,\n#   bigregion &lt;fct&gt;, partners_rc &lt;fct&gt;, obama &lt;dbl&gt;\n\nrel_by_region &lt;- gss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarise(N = n())\nrel_by_region # Groups:bigregion [4]\n\n# A tibble: 24 √ó 3\n# Groups:   bigregion [4]\n   bigregion religion       N\n   &lt;fct&gt;     &lt;fct&gt;      &lt;int&gt;\n 1 Northeast Protestant   158\n 2 Northeast Catholic     162\n 3 Northeast Jewish        27\n 4 Northeast None         112\n 5 Northeast Other         28\n 6 Northeast &lt;NA&gt;           1\n 7 Midwest   Protestant   325\n 8 Midwest   Catholic     172\n 9 Midwest   Jewish         3\n10 Midwest   None         157\n# ‚Ñπ 14 more rows\n\ndatatable(rel_by_region)\n\n\n\n\n\n\n\nrel_by_region &lt;- gss_sm |&gt; \n  group_by(bigregion, religion) |&gt; \n  summarise(N = n()) |&gt; \n  mutate(prop = N/sum(N),\n         pct = round(100 * prop, 2))\n\ndatatable(rel_by_region)\n\n\n\n\n\n\noption + command + I for mac alt + ctrl + I for windwos\n\nggplot(rel_by_region,\n       aes(x = pct, y = religion, fill = religion)) +\n  geom_col() +\n  facet_wrap(.~bigregion, nrow = 1) +\n  guides(fill = \"none\")\n\n\n\n\n\norgandata\n\n# A tibble: 238 √ó 21\n   country   year       donors   pop pop_dens   gdp gdp_lag health health_lag\n   &lt;chr&gt;     &lt;date&gt;      &lt;dbl&gt; &lt;int&gt;    &lt;dbl&gt; &lt;int&gt;   &lt;int&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 Australia NA          NA    17065    0.220 16774   16591   1300       1224\n 2 Australia 1991-01-01  12.1  17284    0.223 17171   16774   1379       1300\n 3 Australia 1992-01-01  12.4  17495    0.226 17914   17171   1455       1379\n 4 Australia 1993-01-01  12.5  17667    0.228 18883   17914   1540       1455\n 5 Australia 1994-01-01  10.2  17855    0.231 19849   18883   1626       1540\n 6 Australia 1995-01-01  10.2  18072    0.233 21079   19849   1737       1626\n 7 Australia 1996-01-01  10.6  18311    0.237 21923   21079   1846       1737\n 8 Australia 1997-01-01  10.3  18518    0.239 22961   21923   1948       1846\n 9 Australia 1998-01-01  10.5  18711    0.242 24148   22961   2077       1948\n10 Australia 1999-01-01   8.67 18926    0.244 25445   24148   2231       2077\n# ‚Ñπ 228 more rows\n# ‚Ñπ 12 more variables: pubhealth &lt;dbl&gt;, roads &lt;dbl&gt;, cerebvas &lt;int&gt;,\n#   assault &lt;int&gt;, external &lt;int&gt;, txp_pop &lt;dbl&gt;, world &lt;chr&gt;, opt &lt;chr&gt;,\n#   consent_law &lt;chr&gt;, consent_practice &lt;chr&gt;, consistent &lt;chr&gt;, ccode &lt;chr&gt;\n\ndatatable(organdata)\n\n\n\n\n\n\n\nskim(organdata)\n\n\nData summary\n\n\nName\norgandata\n\n\nNumber of rows\n238\n\n\nNumber of columns\n21\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n7\n\n\nDate\n1\n\n\nnumeric\n13\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\ncountry\n0\n1.00\n5\n14\n0\n17\n0\n\n\nworld\n14\n0.94\n6\n11\n0\n3\n0\n\n\nopt\n28\n0.88\n2\n3\n0\n2\n0\n\n\nconsent_law\n0\n1.00\n8\n8\n0\n2\n0\n\n\nconsent_practice\n0\n1.00\n8\n8\n0\n2\n0\n\n\nconsistent\n0\n1.00\n2\n3\n0\n2\n0\n\n\nccode\n0\n1.00\n2\n4\n0\n17\n0\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nyear\n34\n0.86\n1991-01-01\n2002-01-01\n1996-07-02\n12\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndonors\n34\n0.86\n16.48\n5.11\n5.20\n13.00\n15.10\n19.60\n33.90\n‚ñÅ‚ñá‚ñÖ‚ñÇ‚ñÅ\n\n\npop\n17\n0.93\n39921.29\n62219.22\n3514.00\n6938.00\n15531.00\n57301.00\n288369.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\npop_dens\n17\n0.93\n12.00\n11.09\n0.22\n1.94\n9.49\n19.11\n38.89\n‚ñá‚ñÉ‚ñÉ‚ñÇ‚ñÅ\n\n\ngdp\n17\n0.93\n22986.18\n4665.92\n12917.00\n19546.00\n22756.00\n26180.00\n36554.00\n‚ñÇ‚ñá‚ñá‚ñÉ‚ñÅ\n\n\ngdp_lag\n0\n1.00\n22574.92\n4790.71\n11434.00\n19034.25\n22158.00\n25886.50\n36554.00\n‚ñÇ‚ñá‚ñá‚ñÉ‚ñÅ\n\n\nhealth\n0\n1.00\n2073.75\n733.59\n791.00\n1581.00\n1956.00\n2407.50\n5665.00\n‚ñÜ‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\nhealth_lag\n0\n1.00\n1972.99\n699.24\n727.00\n1542.00\n1850.50\n2290.25\n5267.00\n‚ñÜ‚ñá‚ñÇ‚ñÅ‚ñÅ\n\n\npubhealth\n21\n0.91\n6.19\n0.92\n4.30\n5.50\n6.00\n6.90\n8.80\n‚ñÇ‚ñá‚ñÖ‚ñÉ‚ñÅ\n\n\nroads\n17\n0.93\n113.04\n36.33\n58.21\n83.46\n111.22\n139.57\n232.48\n‚ñá‚ñá‚ñÜ‚ñÇ‚ñÅ\n\n\ncerebvas\n17\n0.93\n610.80\n144.45\n300.00\n500.00\n604.00\n698.00\n957.00\n‚ñÇ‚ñÖ‚ñá‚ñÉ‚ñÇ\n\n\nassault\n17\n0.93\n16.53\n17.33\n4.00\n9.00\n11.00\n16.00\n103.00\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\n\nexternal\n17\n0.93\n450.06\n118.19\n258.00\n367.00\n421.00\n534.00\n853.00\n‚ñÜ‚ñá‚ñÖ‚ñÅ‚ñÅ\n\n\ntxp_pop\n17\n0.93\n0.72\n0.20\n0.22\n0.63\n0.71\n0.83\n1.12\n‚ñÅ‚ñÇ‚ñá‚ñÉ‚ñÉ\n\n\n\n\n\n\norgandata &lt;- organdata\n\norgandata |&gt; \n  ggplot(aes(x = donors,\n             y = country)) +\n  geom_boxplot()\n\n\n\n\n\norgandata |&gt; \n  mutate(country = fct_reorder(country,\n                               donors, na.rm = T)) |&gt; \n  ggplot(aes(x = donors,\n             y = country)) +\n  geom_boxplot() +\n  labs(y = NULL)\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = \n                    reorder(\n                      country, \n                      donors, \n                      na.rm=TRUE),\n                  y = donors, \n                  fill = world))\np + geom_boxplot() + \n  labs(x=NULL) +\n  coord_flip() + \n  theme(legend.position = \"top\")\n\n\n\n\n\norgandata |&gt; \n  count(consent_law)\n\n# A tibble: 2 √ó 2\n  consent_law     n\n  &lt;chr&gt;       &lt;int&gt;\n1 Informed      112\n2 Presumed      126\n\n\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n    summarize(donors_mean= mean(donors, na.rm = TRUE),\n              donors_sd = sd(donors, na.rm = TRUE),\n              gdp_mean = mean(gdp, na.rm = TRUE),\n              health_mean = mean(health, na.rm = TRUE),\n              roads_mean = mean(roads, na.rm = TRUE),\n              cerebvas_mean = mean(cerebvas, na.rm = TRUE))\n\n\nby_country &lt;- organdata |&gt; group_by(consent_law, country) |&gt;\n  summarise_if(is.numeric,\n               lst(mean, sd), na.rm = T)\nby_country\n\n# A tibble: 17 √ó 28\n# Groups:   consent_law [2]\n   consent_law country  donors_mean pop_mean pop_dens_mean gdp_mean gdp_lag_mean\n   &lt;chr&gt;       &lt;chr&gt;          &lt;dbl&gt;    &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1 Informed    Austral‚Ä¶        10.6   18318.         0.237   22179.       21779.\n 2 Informed    Canada          14.0   29608.         0.297   23711.       23353.\n 3 Informed    Denmark         13.1    5257.        12.2     23722.       23275 \n 4 Informed    Germany         13.0   80255.        22.5     22163.       21938.\n 5 Informed    Ireland         19.8    3674.         5.23    20824.       20154.\n 6 Informed    Netherl‚Ä¶        13.7   15548.        37.4     23013.       22554.\n 7 Informed    United ‚Ä¶        13.5   58187.        24.0     21359.       20962.\n 8 Informed    United ‚Ä¶        20.0  269330.         2.80    29212.       28699.\n 9 Presumed    Austria         23.5    7927.         9.45    23876.       23415.\n10 Presumed    Belgium         21.9   10153.        30.7     22500.       22096.\n11 Presumed    Finland         18.4    5112.         1.51    21019.       20763 \n12 Presumed    France          16.8   58056.        10.5     22603.       22211.\n13 Presumed    Italy           11.1   57360.        19.0     21554.       21195.\n14 Presumed    Norway          15.4    4386.         1.35    26448.       25769.\n15 Presumed    Spain           28.1   39666.         7.84    16933        16584.\n16 Presumed    Sweden          13.1    8789.         1.95    22415.       22094 \n17 Presumed    Switzer‚Ä¶        14.2    7037.        17.0     27233        26931.\n# ‚Ñπ 21 more variables: health_mean &lt;dbl&gt;, health_lag_mean &lt;dbl&gt;,\n#   pubhealth_mean &lt;dbl&gt;, roads_mean &lt;dbl&gt;, cerebvas_mean &lt;dbl&gt;,\n#   assault_mean &lt;dbl&gt;, external_mean &lt;dbl&gt;, txp_pop_mean &lt;dbl&gt;,\n#   donors_sd &lt;dbl&gt;, pop_sd &lt;dbl&gt;, pop_dens_sd &lt;dbl&gt;, gdp_sd &lt;dbl&gt;,\n#   gdp_lag_sd &lt;dbl&gt;, health_sd &lt;dbl&gt;, health_lag_sd &lt;dbl&gt;, pubhealth_sd &lt;dbl&gt;,\n#   roads_sd &lt;dbl&gt;, cerebvas_sd &lt;dbl&gt;, assault_sd &lt;dbl&gt;, external_sd &lt;dbl&gt;,\n#   txp_pop_sd &lt;dbl&gt;\n\n\n\nby_country |&gt; \n  ggplot(aes(x = donors_mean,\n             y = fct_reorder(country, donors_mean),\n             color = consent_law)\n         ) +\n  geom_point() +\n  labs(y = NULL) +\n  theme(legend.position = \"top\")\n\n\n\n\n\nby_country |&gt; \n  ggplot(aes(x = donors_mean,\n             y = fct_reorder(country, donors_mean))\n         ) +\n  geom_point() +\n  labs(y = NULL) +\n  facet_wrap(.~consent_law, ncol= 1, scales = \"free_y\")\n\n\n\n\n\nby_country |&gt; \n  ggplot(aes(x = donors_mean,\n             xmin = donors_mean - donors_sd,\n             xmax = donors_mean + donors_sd,\n             y = fct_reorder(country, donors_mean))\n         ) +\n  geom_pointrange() +\n  labs(x = \"Donor Procurement Rate\", y = \"\")\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = world))\np + geom_point()\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = world))\np + geom_point() +\n  scale_y_continuous(breaks = c(5,15,25),\n                     labels = c(\"Five\",\n                                \"Fifteen\",\n                                \"Twenty Five\") ) +\n  theme(legend.position = \"top\")\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = world))\np + geom_point() +\n  scale_color_discrete(labels = c(\"Corporatist\",\n                                  \"Liberal\",\n                                  \"Social Democratic\",\n                                  \"Unclassified\") ) +\n  theme(legend.position = \"top\")\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = consent_law))\np + geom_point(show.legend = F) +\n  facet_wrap(.~consent_law, ncol = 1) +\n  labs(x = \"Road Deaths\",\n       y = \"Donor Procurement\")\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors, color = consent_law))\np + geom_point()  +\n  labs(x = \"Road Deaths\",\n       y = \"Donor Procurement\",\n       title = \"By Consent Law\",\n       color = \"Legal Regime:\") +\n  theme(plot.title = element_text(colour = \"brown\"))\n\n\n\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = roads_mean, \n                  y = donors_mean))\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country))\n\n\n\n\n\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country),\n            hjust = 0)\n\n\n\n\n\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country),\n            hjust = 1)\n\n\n\n\n\np + geom_point() + \n  geom_text(mapping = \n              aes(label = country),\n            hjust = .5)\n\n\n\n\n\n??elections_historic\nsocviz::elections_historic |&gt; select(2:7) \n\n# A tibble: 49 √ó 6\n    year winner                 win_party ec_pct popular_pct popular_margin\n   &lt;int&gt; &lt;chr&gt;                  &lt;chr&gt;      &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;\n 1  1824 John Quincy Adams      D.-R.      0.322       0.309        -0.104 \n 2  1828 Andrew Jackson         Dem.       0.682       0.559         0.122 \n 3  1832 Andrew Jackson         Dem.       0.766       0.547         0.178 \n 4  1836 Martin Van Buren       Dem.       0.578       0.508         0.142 \n 5  1840 William Henry Harrison Whig       0.796       0.529         0.0605\n 6  1844 James Polk             Dem.       0.618       0.495         0.0145\n 7  1848 Zachary Taylor         Whig       0.562       0.473         0.0479\n 8  1852 Franklin Pierce        Dem.       0.858       0.508         0.0695\n 9  1856 James Buchanan         Dem.       0.588       0.453         0.122 \n10  1860 Abraham Lincoln        Rep.       0.594       0.396         0.101 \n# ‚Ñπ 39 more rows\n\n\n\nelections_historic\n\n# A tibble: 49 √ó 19\n   election  year winner      win_party ec_pct popular_pct popular_margin  votes\n      &lt;int&gt; &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;      &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;  &lt;int&gt;\n 1       10  1824 John Quinc‚Ä¶ D.-R.      0.322       0.309        -0.104  1.13e5\n 2       11  1828 Andrew Jac‚Ä¶ Dem.       0.682       0.559         0.122  6.43e5\n 3       12  1832 Andrew Jac‚Ä¶ Dem.       0.766       0.547         0.178  7.03e5\n 4       13  1836 Martin Van‚Ä¶ Dem.       0.578       0.508         0.142  7.63e5\n 5       14  1840 William He‚Ä¶ Whig       0.796       0.529         0.0605 1.28e6\n 6       15  1844 James Polk  Dem.       0.618       0.495         0.0145 1.34e6\n 7       16  1848 Zachary Ta‚Ä¶ Whig       0.562       0.473         0.0479 1.36e6\n 8       17  1852 Franklin P‚Ä¶ Dem.       0.858       0.508         0.0695 1.61e6\n 9       18  1856 James Buch‚Ä¶ Dem.       0.588       0.453         0.122  1.84e6\n10       19  1860 Abraham Li‚Ä¶ Rep.       0.594       0.396         0.101  1.86e6\n# ‚Ñπ 39 more rows\n# ‚Ñπ 11 more variables: margin &lt;int&gt;, runner_up &lt;chr&gt;, ru_part &lt;chr&gt;,\n#   turnout_pct &lt;dbl&gt;, winner_lname &lt;chr&gt;, winner_label &lt;chr&gt;, ru_lname &lt;chr&gt;,\n#   ru_label &lt;chr&gt;, two_term &lt;lgl&gt;, ec_votes &lt;dbl&gt;, ec_denom &lt;dbl&gt;\n\n\n\np &lt;- ggplot(elections_historic, aes(x = popular_pct, y = ec_pct,\n                                    label = winner_label))\n\n\np_title &lt;- \"Presidential Elections: Popular & Electoral College Margins\"\np_subtitle &lt;- \"1824-2016\"\np_caption &lt;- \"Data for 2016 are provisional.\"\nx_label &lt;- \"Winner's share of Popular Vote\"\ny_label &lt;- \"Winner's share of Electoral College Votes\"\n\np &lt;- p + \n    geom_hline(yintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_vline(xintercept = 0.5, \n               linewidth = 1.4, \n               color = \"gray80\") +\n    geom_point() +\n    geom_text_repel() + \n     scale_x_continuous(\n       labels = scales::percent) +\n     scale_y_continuous(\n       labels = scales::percent)  + \n  labs(x = x_label, \n         y = y_label, \n         title = p_title, \n         subtitle = p_subtitle,\n         caption = p_caption)\np\n\n\n\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean,\n                  y = health_mean))\n\n\np + geom_point() +\n    geom_text_repel(\n      data = filter(by_country, \n                    gdp_mean &gt; 25000),\n      mapping = \n        aes(label = country))\n\n\n\n\n\np &lt;- ggplot(data = by_country,\n            mapping = \n              aes(x = gdp_mean, \n                  y = health_mean))\np + geom_point() +\n    geom_text_repel(\n      data = \n        filter(by_country,\n               gdp_mean &gt; 25000 | \n                 health_mean &lt; 1500 |\n                 country %in% \"Belgium\"),\n      mapping = \n        aes(label = country))\n\n\n\n\n\n# creating a dummy variable for labels\n# organdata$ind &lt;- \n#   organdata$ccode %in% c(\"Ita\", \"Spa\") & \n#   organdata$year &gt; 1998   \n\norgandata &lt;- organdata |&gt; \n  mutate(ind = ccode %in% c(\"Ita\", \"Spa\") & year &gt; 1998)\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = ind))\np + geom_point() +\n    geom_text_repel(\n      data = filter(organdata, ind),\n      mapping = aes(label = ccode)) +\n    guides(label = \"none\", \n           color = \"none\")\n\n\n\n\n\nmtcars &lt;- datasets::mtcars\nmtcars$model &lt;- rownames(mtcars)\nrownames(mtcars) &lt;- 1:nrow(mtcars)\n\nmtcars |&gt; \n  ggplot(aes(x = wt, y = mpg)) +\n  geom_point(color = \"red\") +\n  geom_text_repel(\n    data = filter(mtcars,\n                  wt &gt; 5),\n    aes(label = model)\n  )\n\n\n\n\n\np &lt;- ggplot(data = organdata, \n            mapping = \n              aes(x = roads, \n                  y = donors))\np + geom_point() + \n  annotate(geom = \"text\", \n           x = 91, y = 33,\n           label = \"A surprisingly high \\n recovery rate.\",\n           hjust = 0)\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = aes(x = roads, y = donors))\np + geom_point() +\n    annotate(geom = \"rect\", \n             xmin = 125, xmax = 155,\n             ymin = 30, ymax = 35, \n             fill = \"red\", \n             alpha = 0.2) + \n    annotate(geom = \"text\", \n             x = 157, y = 33,\n             label = \"A surprisingly high \\n recovery rate.\", \n             hjust = 0)\n\n\n\n\n\np &lt;- ggplot(mpg, aes(displ, hwy)) +\n  geom_point(\n    data = \n      filter(mpg, \n             manufacturer == \"subaru\"), \n    color = \"orange\", \n    size = 3) +\n  geom_point() \np + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40, \n           colour = \"orange\", \n           size = 3) + \n  annotate(geom = \"point\", \n           x = 5.5, y = 40) + \n  annotate(geom = \"text\", \n           x = 5.6, y = 40, \n           label = \"subaru\", \n           hjust = \"left\")\n\n\n\n\n\np + \n  annotate(\n    geom = \"curve\", \n    x = 4, y = 35, \n    xend = 2.65, yend = 27, \n    curvature = .3, \n    arrow = \n      arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", \n           x = 4.1, y = 35, \n           label = \"subaru\", \n           hjust = \"left\")\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-03-2024-0209.html",
    "href": "danl-class/danl-399-note-03-2024-0209.html",
    "title": "Lecture 3 - Note",
    "section": "",
    "text": "library(tidyverse)\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\nggplot(sale_df, \n       aes(x = sale.price), \n       bins = 500) +\n  geom_histogram()\n\n\n\n\n\nggplot(sale_df, \n       aes(x = log(sale.price)), \n       bins = 500) +\n  geom_histogram()\n\n\n\n\n\ndiamonds &lt;- ggplot2::diamonds\n\n??diamonds\n\n\n# to make a simple data.frame\ndemo &lt;- tribble(         \n  ~cut,         ~freq,\n  \"Fair\",       1610,\n  \"Good\",       4906,\n  \"Very Good\",  12082,\n  \"Premium\",    13791,\n  \"Ideal\",      21551 )\n\nggplot(data = demo) +\n  geom_bar(mapping = \n             aes(x = cut, \n                 y = freq), \n           stat = \"identity\")\n\n\n\n\n\nggplot(data = demo) +\n  geom_col(mapping = \n             aes(x = cut, \n                 y = freq))\n\n\n\n\n\nggplot(diamonds) +\n  geom_bar(aes(x = cut,\n               fill = clarity),\n           position = \"fill\") +\n  labs(y = \"Proportion\")\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "listing-danl-399-cw.html",
    "href": "listing-danl-399-cw.html",
    "title": "DANL 399 - Classwork",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nClasswork 8\n\n\nMap Visualization\n\n\nApril 12, 2024\n\n\n\n\nClasswork 7\n\n\nBar Charts\n\n\nMarch 22, 2024\n\n\n\n\nClasswork 6\n\n\nKey Components in Project Proposal\n\n\nMarch 2, 2024\n\n\n\n\nClasswork 5 - Example Answers\n\n\nThe Layered Grammar of Graphics\n\n\nMarch 8, 2023\n\n\n\n\nClasswork 5\n\n\nThe Layered Grammar of Graphics\n\n\nFebruary 10, 2023\n\n\n\n\nClasswork 4 - Example Answers\n\n\nggplot Basics\n\n\nMarch 8, 2023\n\n\n\n\nClasswork 4\n\n\nggplot Basics\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 3\n\n\nQuarto Website Basics\n\n\nFebruary 1, 2023\n\n\n\n\nClasswork 2\n\n\nMarkdown Basics\n\n\nJanuary 26, 2024\n\n\n\n\nClasswork 1\n\n\nBuilding a Personal Website using Git, GitHub, and RStudio with Quarto\n\n\nJanuary 26, 2023\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-04.html",
    "href": "danl-qa/danl-399-qa-04.html",
    "title": "Lecture 4 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 4 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 4 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 4 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-02.html",
    "href": "danl-qa/danl-399-qa-02.html",
    "title": "Lecture 2 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 2 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 2 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 2 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-01.html",
    "href": "danl-qa/danl-399-qa-01.html",
    "title": "Lecture 1 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 1 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 1 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 3 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "listing-danl-399-lec.html",
    "href": "listing-danl-399-lec.html",
    "title": "DANL 399 - Lecture",
    "section": "",
    "text": "Title\n\n\nDate\n\n\n\n\n\n\nLecture 8\n\n\nApril 12, 2024\n\n\n\n\nLecture 7\n\n\nApril 5, 2024\n\n\n\n\nLecture 6\n\n\nMarch 1, 2024\n\n\n\n\nLecture 5\n\n\nFebruary 23, 2024\n\n\n\n\nLecture 4\n\n\nFebruary 16, 2024\n\n\n\n\nLecture 3\n\n\nFebruary 9, 2024\n\n\n\n\nLecture 2\n\n\nFebruary 2, 2024\n\n\n\n\nLecture 10\n\n\nMay 3, 2024\n\n\n\n\nLecture 1\n\n\nJanuary 26, 2024\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-hw/danl-399-hw-02-q.html",
    "href": "danl-hw/danl-399-hw-02-q.html",
    "title": "Homework 2",
    "section": "",
    "text": "Add a web-page of the project proposal to your website."
  },
  {
    "objectID": "danl-hw/danl-399-hw-02-q.html#q2a.",
    "href": "danl-hw/danl-399-hw-02-q.html#q2a.",
    "title": "Homework 2",
    "section": "Q2a.",
    "text": "Q2a.\nBelow is the data.frame for Q2a:\n\nhdi_corruption &lt;- read_csv(\n  'https://bcdanl.github.io/data/hdi_corruption.csv')\n\n\ndatatable(hdi_corruption)"
  },
  {
    "objectID": "danl-hw/danl-399-hw-02-q.html#q2b",
    "href": "danl-hw/danl-399-hw-02-q.html#q2b",
    "title": "Homework 2",
    "section": "Q2b",
    "text": "Q2b\n\nDownload the file, labor_supply.zip, from this link. Then, extract labor_supply.zip, so that you can access the labor_supply.csv file.\nVariable description in labor_supply.csv\n\nSEX: 1 if Male; 2 if Female; 9 if NIU (Not in universe)\nNCHLT5: Number of own children under age 5 in a household; 9 if 9+\nLABFORCE: 0 if NIU or members of the armed forces; 1 if not in the labor force; 2 if in the labor force.\nASECWT: sample weight\n\nA sample weight of each observation means how much population each observation represents.\n\nIf you sum ASECWT for each year, you get the size of yearly population in the US.\n\nHouseholds with LABFORCE == 0 is not in labor force.\nLabor force participation rate can be calculated by:\n\n\\[\n(\\text{Labor Force Participation Rate}) \\, = \\, \\frac{(\\text{Size of population in labor force})}{(\\text{Size of civilian population that are not members of the armed force})}\n\\]\n\nBelow provides the first 100 observations in labor_supply.csv:"
  },
  {
    "objectID": "danl-hw/danl-399-hw-02-q.html#q2c",
    "href": "danl-hw/danl-399-hw-02-q.html#q2c",
    "title": "Homework 2",
    "section": "Q2c",
    "text": "Q2c\nBelow is the data.frame for Q2c:\n\n# install.packages(\"ggcorrplot\")\nlibrary(ggcorrplot) # to create correlation heatmaps using ggcorrplot()\n\nbeer_mkt &lt;- read_csv('https://bcdanl.github.io/data/beer_markets.csv')\n\n\nrmarkdown::paged_table(beer_mkt)\n\n\n\n  \n\n\n\n\n\nMake a correlation heat-map with variables that are either strongly correlated or promo-related.\nThe variables are selected by how high the mean value of the absolute value of correlations with the variable is (top 13-15 variables).\nYou can start with the data.frame, beer_dummies:\n\n\nbeer_dummies &lt;- beer_mkt %&gt;% select(-hh, -market) \nreg &lt;- lm(data = beer_dummies,\n          beer_floz ~ .)\nbeer_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\nbeer_dummies &lt;- cbind(beer_mkt$beer_floz ,beer_dummies)\nbeer_dummies &lt;- beer_dummies %&gt;% \n  rename(beer_floz = `beer_mkt$beer_floz`)\n\n\nTo calculate a correlation between numeric variables in data.frame, use cor(data.frame)\n\n\n\n\n\n\n\n\n\n\n\nThen, make a correlation heat-map for NY markets with the same selection of variables.\nNY markets are such that whose market value is either ALBANY, BUFFALO-ROCHESTER, URBAN NY, SUBURBAN NY, EXURBAN NY, RURAL NEW YORK, or SYRACUSE."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-1",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-1",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nUse color to your advantage\n\nWe should choose a color palette based on the types of the data we are plotting.\n\nAn unordered categorical variable (e.g., ‚ÄòSex‚Äô or ‚ÄòCountry‚Äô) requires distinct colors that won‚Äôt be easily confused with one another.\nAn ordered categorical variable (e.g., ‚ÄòLevel of Education‚Äô) requires a graded color scheme of some kind running from less to more or earlier to later.\n\nWe choose color palettes for mappings through one of the scale_ functions for color or fill."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-2",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-2",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nRColorBrewer\n# install.pacakges(\"RColorBrewer\")\nlibrary(RColorBrewer)\n\nRColorBrewer package provides a wide range of named color palettes.\n\nWe can access these colors by specifying the scale_color_brewer() or scale_fill_brewer() functions with palette parameter."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-3",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-3",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nSequential"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-4",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-4",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nDiverging"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-5",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-5",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nQualitative"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-6",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-6",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nUse color to your advantage\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = world))\n\np + geom_point(size = 2,\n               alpha = .5) + \n  scale_color_brewer(\n    palette = \"Set2\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\nLet‚Äôs use the named palettes with scale_color_brewer(palette = ...)."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-7",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-7",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nPastel2\n\n\np + geom_point(size = 2,\n               alpha = .5\n               ) + \n  scale_color_brewer(\n    palette = \"Pastel2\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-8",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-8",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nDark2\n\n\np + geom_point(size = 2,\n               alpha = .5) + \n  scale_color_brewer(\n    palette = \"Dark2\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-9",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-9",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nUse color to your advantage\n\nWe can also specify colors manually, via scale_color_manual() or scale_fill_manual().\n\nThese functions take values argument that can be specified as vector of color names or hex colors.\nCheck https://www.color-hex.com"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-10",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-10",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nUse color to your advantage\n\n\np + geom_point(size = 2) + \n  scale_color_manual(\n    values = c(\"#3c6ff8\", \"#afd68d\", \n               \"#8467ad\", \"#82857f\")) +\n  theme_ipsum() + \n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-11",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-11",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nColor blindness\n# install.packages(\"dichromat\")\nlibrary(dichromat)\n\nEven though colorblind people can recognize a wide range of colors, it might be hard to differentiate between certain colors.\n\ndichromat package provides a range of safe palettes and some useful functions for helping us approximately see what our current palette might look like to a viewer with one of several different kinds of color blindness."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-12",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-12",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nColor blindness\n\n# RColorBrewer::brewer.pal() makes the color palettes\nDefault &lt;- brewer.pal(5, \"Set2\") \ntypes &lt;- c(\"deutan\", \"protan\", \"tritan\")\nnames(types) &lt;- \n  c(\"Deuteronopia\", \"Protanopia\", \"Tritanopia\")\n\ncolor_table &lt;- types |&gt;\n    purrr::map(~ dichromat(Default, .x)) |&gt;\n    as_tibble() |&gt;\n    add_column(Default, .before = TRUE)\n\ncolor_table"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-13",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-13",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nColor blindness"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-14",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-14",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nColor blindness\n\nbrewer.pal.info\n\n\nRColorBrewer provides the color-blind friendly pallets."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-15",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-15",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\nWe can use color to highlight some aspect of our data.\n\nLet‚Äôs do a simple exploratory analysis on the relationship between politics and race using color."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-16",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-16",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\n# DEM Blue and REP Red\nparty_colors &lt;- \n  c(\"#2E74C0\", \"#CB454A\") \n\np0 &lt;- ggplot(\n  data = filter(county_data, \n                flipped == \"No\"),\n  mapping = \n    aes(x = pop, \n        y = black/100) )\n\np1 &lt;- p0 + \n  geom_point(alpha = 0.15, \n             color = \"gray50\") +\n  scale_x_log10(labels=scales::comma) \np1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-17",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-17",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\np2 &lt;- p1 + \n  geom_point(\n    data = filter(county_data,\n                  flipped == \"Yes\"),\n    mapping = \n      aes(x = pop, y = black/100,\n          color = partywinner16)) +\n    scale_color_manual(\n      values = party_colors)\np2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-18",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-18",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\np3 &lt;- p2 + \n  scale_y_continuous(\n    labels=scales::percent) +\n  labs(\n    color = \n      \"County flipped to ... \",\n    x = \n      \"County Population (log scale)\",\n    y = \n      \"Percent Black Population\",\n    title = \n      \"Flipped counties, 2016\",\n    caption = \n      \"Counties in gray did not flip.\")\np3"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-19",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-19",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\np4 &lt;- p3 + \n  geom_text_repel(\n    data = \n      filter(\n       county_data,\n       flipped == \"Yes\" & black &gt;25),\n    mapping = \n      aes(x = pop, y = black/100,\n          label = state), \n    size = 2)\n\np4 + theme_minimal() + \n  theme(legend.position=\"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-20",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-20",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\np4 + theme_economist() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-21",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-21",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nLayer color and text together\n\n\np4 + theme_wsj() +\n  theme(\n    plot.title = \n      element_text(size = rel(0.6)),\n    legend.title = \n      element_text(size = rel(0.35)),\n    plot.caption = \n      element_text(size = rel(0.35)),\n    legend.position = \"top\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-22",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-22",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np4 + theme(\n  legend.position = \"top\",\n  plot.title = element_text(\n      size = rel(2),\n      lineheight = .5,\n      family = \"Times\",\n      face = \"bold.italic\",\n      color = \"orange\"),\n  axis.text.x = element_text(\n      size = rel(1.1),\n      family = \"Courier\",\n      face = \"bold\",\n      color = \"purple\")\n  )\n\n\n\n\n\n\n\nThe theme() function allows us to exert very fine-grained control over the appearance of all kinds of text and graphical elements in a plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-23",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-23",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np4 + theme(\n  legend.position = \"top\",\n  plot.title = element_text(\n    size = rel(2),\n    lineheight = .5,\n    family = \"Times\",\n    face = \"bold.italic\",\n    colour = \"orange\"),\n  axis.text.x = element_blank()\n  ) \n\n\n\n\n\n\n\nWe can also use element_blank() to remove a number of elements by naming them and making them disappear."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-24",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-24",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\nLet‚Äôs create an effective small multiple of the age distribution of General Social Survey (GSS) respondents over the years using gss_lon data.\n\n\n\n\n\nyrs &lt;- c(seq(1972, 1988, 4), \n         1993, \n         seq(1996, 2016, 4))\n\nmean_age &lt;- gss_lon |&gt;\n    filter( !is.na(age), \n            year %in% yrs) |&gt;\n    group_by(year) |&gt;\n    summarize(\n      xbar = round(\n        mean(age, na.rm = TRUE), 0)\n      )\n\n\n\nmean_age$y &lt;- 0.3 \n\nyr_labs &lt;- data.frame(\n  x = 85, y = 0.8, \n  year = yrs)  # to position the age as a text label"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-25",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-25",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np &lt;- ggplot(\n  data = \n    filter(gss_lon, year %in% yrs),\n  mapping = \n    aes(x = age))\n\np1 &lt;- p + \n  geom_density(\n    fill = \"black\", color = FALSE,\n    alpha = 0.9, \n    mapping = aes(y = ..scaled..))\np1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-26",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-26",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np2 &lt;- p1 + \n  geom_vline(\n    data = filter(\n      mean_age, year %in% yrs),\n    aes(xintercept = xbar), \n    color = \"white\", size = 0.5) + \n  geom_text(\n    data = filter(mean_age, \n             year %in% yrs),\n    aes(x = xbar, y = y, label = xbar), \n    nudge_x = 7.5, color = \"white\", \n    size = 3.5, hjust = 1) +\n  geom_text(data = filter(\n    yr_labs, year %in% yrs),\n    aes(x = x, y = y, label = year)) \np2\n\n\n\n\n\n\n\nThe nudge_x argument to push the label slightly to the right of its x-value."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-27",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-27",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np3 &lt;- p2  + \n  facet_grid(year ~ ., switch = \"y\")\np3\n\n\n\n\n\n\n\nIn the facet_grid() we use the switch argument to move the labels to the left."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-28",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-28",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nChange the appearance of plots with theme()\n\n\np2a &lt;- p3 + \n  theme(\n    plot.title = \n      element_text(size = 16),\n    axis.text.x= \n      element_text(size = 12),\n    axis.title.y=element_blank(),\n    axis.text.y=element_blank(),\n    axis.ticks.y = element_blank(),\n    strip.background = element_blank(),\n    strip.text.y = element_blank(),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()) +\n  labs(x = \"Age\", y = NULL,\n       title = \n         \"Age Distribution of\\nGSS Respondents\")\np2a"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-29",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-29",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nggridges\n# install.packages(\"ggridges\")\nlibrary(ggridges)\n\nggridges allows the distributions to overlap vertically.\n\nIt is especially useful for repeated distributional measures that change in a clear direction."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-30",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-30",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nggridges\n\np &lt;- ggplot(\n  data = gss_lon,\n  mapping = \n    aes(x = age, \n        y = factor(year, \n                   levels = rev(unique(year)), \n                   ordered = TRUE)))\n\n\nfactor() converts a variable to a factor variable.\n\nWith levels parameter, we can set the categories of a categorical variable."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-31",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-31",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nggridges\n\n\np2b &lt;- p + \n  geom_density_ridges(\n    alpha = 0.6, fill = \"lightblue\", \n    scale = 1.5) +  \n    scale_x_continuous(\n      breaks = c(25, 50, 75)) +\n    scale_y_discrete(\n      expand = c(0.01, 0)) + \n    labs(x = \"Age\", y = NULL, \n         title = \n           \"Age Distribution of\\nGSS Respondents\") +\n    theme_ridges() +  # make labels aligned properly\n    theme(\n      title = \n        element_text(\n          size = 16, face = \"bold\"))\np2b\n\n\n\n\n\n\n\nThe expand argument in scale_y_discrete() adjusts the scaling of the y-axis slightly."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-32",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-32",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nArrange plots with gridExtra::grid.arrange()\n\n# install.packages(\"gridExtra\")\ngrid.arrange(p2a, p2b, nrow = 1)   # sub-figures\n\n\ngridExtra package provides grid.arrange() function.\n\ngrid.arrange() arranges multiple ggplot objects on a page, and draw tables of figures."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-33",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-33",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nArrange plots with gridExtra::grid.arrange()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-34",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-34",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\nUse data.frame studebt to describe how the distribution of Debt pct varies by type.\n\n\nstudebt\n\np_xlab &lt;- \"Amount Owed, in thousands of Dollars\"\np_title &lt;- \"Outstanding Student Loans\"\np_subtitle &lt;- \"44 million borrowers owe a total of $1.3 trillion\"\np_caption &lt;- \"Source: FRB NY\"\n\nf_labs &lt;- c(`Borrowers` = \"Percent of\\nall Borrowers\",\n            `Balances` = \"Percent of\\nall Balances\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-35",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-35",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np &lt;- ggplot(\n  data = studebt,\n  mapping = \n    aes(x = pct/100, y = Debt,\n        fill = type))\np1 &lt;- p + geom_col()\np1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-36",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-36",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np2 &lt;- p1 +\n  scale_fill_brewer(\n    type = \"qual\", palette = \"Dark2\")\np2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-37",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-37",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np3 &lt;- p2 +\n  scale_x_continuous(\n    labels = scales::percent)\np3"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-38",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-38",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np4 &lt;- p3 +\n  guides(fill = FALSE)\np4"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-39",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-39",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np5 &lt;- p4 +\n  facet_grid(\n    .~ type, \n    labeller = as_labeller(f_labs))\np5"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-40",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-40",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np6 &lt;- p5 +\n  labs(y = NULL, x = p_xlab, \n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle)\np6"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-41",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-41",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 1\n\n\np7 &lt;- p6 +\n  theme(strip.text.x = \n          element_text(face = \"bold\"))\np7"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-42",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-42",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\nInstead of having separate bars distinguished by heights, we can array the percentages for each distribution proportionally within a single bar.\nLet‚Äôs make a stacked bar chart with just two main bars, and lie them on their side for comparison."
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-43",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-43",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np &lt;- ggplot(\n  studebt, \n  aes(x = pct/100, y = type, \n      fill = Debtrc))\np1 &lt;- p + \n  geom_col(color = \"gray80\")\np1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-44",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-44",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np2 &lt;- p1 +\n  scale_y_discrete(\n    labels = as_labeller(f_labs))\np2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-45",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-45",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np3 &lt;- p2 +\n  scale_x_continuous(\n    labels = scales::percent)\np3"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-46",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-46",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np4 &lt;- p3 +\n  scale_fill_viridis_d(\n    option = \"B\")\np4"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-47",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-47",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np5 &lt;- p4 +\n  guides(\n    fill = \n      guide_legend(\n        reverse = TRUE,\n        title.position = \"top\",\n        label.position = \"bottom\",\n        keywidth = 3,\n        nrow = 1))\np5"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-48",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-48",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np6 &lt;- p5 +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle)\np6"
  },
  {
    "objectID": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-49",
    "href": "danl-lec/danl-399-lec-06-2024-0301.html#refine-your-plots-49",
    "title": "Lecture 6",
    "section": "Refine your plots",
    "text": "Refine your plots\nAdvanced Bar Chart 2\n\n\np7 &lt;- p6 +\n  theme(legend.position = \"top\",\n        axis.text.y = \n          element_text(\n            face = \"bold\",\n            hjust = 1, \n            size = 12),\n        axis.ticks.length = \n          unit(0, \"cm\"),\n        panel.grid.major.y = \n          element_blank())\np7"
  },
  {
    "objectID": "danl-qa/danl-399-qa-06.html",
    "href": "danl-qa/danl-399-qa-06.html",
    "title": "Lecture 6 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 6 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 6 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 6 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-06-2024-0301.html",
    "href": "danl-class/danl-399-note-06-2024-0301.html",
    "title": "Lecture 6 - Note",
    "section": "",
    "text": "p &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = world))\n\np + geom_point(size = 2,\n               alpha = .5) + \n  theme(legend.position = \"top\")\n\n\n\n\n\np &lt;- ggplot(data = organdata,\n            mapping = \n              aes(x = roads, \n                  y = donors, \n                  color = world))\n\np + geom_point(size = 2,\n               alpha = .5) + \n  scale_color_brewer(\n    palette = \"Set2\",\n    na.value = \"grey60\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\np + geom_point(size = 2,\n               alpha = .5) + \n  scale_color_brewer(\n    palette = \"Pastel2\",\n    na.value = \"grey60\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\np + geom_point(size = 2,\n               alpha = .5) + \n  scale_color_brewer(\n    palette = \"Dark2\",\n    na.value = \"grey60\") +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-class/danl-399-note-06-2024-0301.html#case-1",
    "href": "danl-class/danl-399-note-06-2024-0301.html#case-1",
    "title": "Lecture 6 - Note",
    "section": "5.1 Case 1",
    "text": "5.1 Case 1\n\ndatatable(studebt)\n\n\n\n\n\n\n\np_xlab &lt;- \"Amount Owed, in thousands of Dollars\"\np_title &lt;- \"Outstanding Student Loans\"\np_subtitle &lt;- \"44 million borrowers owe a total of $1.3 trillion\"\np_caption &lt;- \"Source: FRB NY\"\n\nf_labs &lt;- c(`Borrowers` = \"Percent of all Borrowers\",\n            `Balances` = \"Percent of all Balances\")\np &lt;- ggplot(\n  data = studebt,\n  mapping = \n    aes(x = pct/100, y = Debt,\n        fill = type))\np1 &lt;- p + geom_col()\np2 &lt;- p1 +\n  scale_fill_brewer(\n    type = \"qual\", palette = \"Dark2\")\np3 &lt;- p2 +\n  scale_x_continuous(\n    labels = scales::percent)\np4 &lt;- p3 +\n  guides(fill = FALSE)\np5 &lt;- p4 +\n  facet_grid(\n    .~ type, \n    labeller = as_labeller(f_labs))\np6 &lt;- p5 +\n  labs(y = NULL, x = p_xlab, \n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle)\np7 &lt;- p6 +\n  theme(strip.text.x = \n          element_text(face = \"bold\"))\np7"
  },
  {
    "objectID": "danl-class/danl-399-note-06-2024-0301.html#case-2",
    "href": "danl-class/danl-399-note-06-2024-0301.html#case-2",
    "title": "Lecture 6 - Note",
    "section": "5.2 Case 2",
    "text": "5.2 Case 2\n\np &lt;- ggplot(\n  studebt, \n  aes(x = pct/100, y = type, \n      fill = Debtrc))\np1 &lt;- p + \n  geom_col(color = \"gray80\")\np2 &lt;- p1 +\n  scale_y_discrete(\n    labels = as_labeller(f_labs))\np3 &lt;- p2 +\n  scale_x_continuous(\n    labels = scales::percent)\np4 &lt;- p3 +\n  scale_fill_viridis_d(\n    option = \"B\")\np4\n\n\n\n\n\np5 &lt;- p4 +\n  guides(\n    fill = \n      guide_legend(\n        reverse = TRUE,\n        title.position = \"top\",\n        label.position = \"bottom\",\n        keywidth = 3,\n        nrow = 1))\np6 &lt;- p5 +\n  labs(x = NULL, y = NULL,\n       fill = \"Amount Owed, in thousands of dollars\",\n       caption = p_caption,\n       title = p_title,\n       subtitle = p_subtitle)\np7 &lt;- p6 +\n  theme(legend.position = \"top\",\n        axis.text.y = \n          element_text(\n            face = \"bold\",\n            hjust = 1, \n            size = 12),\n        axis.ticks.length = \n          unit(0, \"cm\"),\n        panel.grid.major.y = \n          element_blank())\np7"
  },
  {
    "objectID": "danl-cw/danl-399-cw-06.html",
    "href": "danl-cw/danl-399-cw-06.html",
    "title": "Classwork 6",
    "section": "",
    "text": "Key Components in Project Proposal\n\n\n\n\nBelow are key components in project proposal.\n\nTitle: A clear and concise title that gives an idea of the research topic.\nIntroduction:\n\nBackground: Provide context for the research topic, explaining why it‚Äôs significant or relevant.\nStatement of the Problem: Clearly articulate the specific problem or issue the research will address.\n\nObjectives or Research Questions:\n\nList the primary objectives of the study or the main questions you aim to answer.\n\nEmpirical Analysis:\n\nData Collection: Explain how data will be gathered\nMethodologies: Describe how the data will be analyzed using machine learning methods (e.g., linear regression, etc.).\n\nSignificance of the Study:\n\nExplain its implications for real-world applications, business strategies, or public policy.\n\nReferences: List all sources cited in the proposal\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html",
    "href": "danl-cw/danl-399-cw-04-a.html",
    "title": "Classwork 4 - Example Answers",
    "section": "",
    "text": "Load the following data.frame, mpg.\n\nlibrary(tidyverse)\nmpg &lt;- ggplot2::mpg\n\n\ndatatable(mpg)\n\n\n\n\n\n\n\nrmarkdown::paged_table(mpg)\n\n\n\n  \n\n\n\n\n\nskim(mpg)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n0\n1\n4\n10\n0\n15\n0\n\n\nmodel\n0\n1\n2\n22\n0\n38\n0\n\n\ntrans\n0\n1\n8\n10\n0\n10\n0\n\n\ndrv\n0\n1\n1\n1\n0\n3\n0\n\n\nfl\n0\n1\n1\n1\n0\n5\n0\n\n\nclass\n0\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n0\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n0\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n0\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n0\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n0\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ\n\n\n\n\n\n\n\nRun ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)\n\n\n\n\n\n\n\n\nWrite a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))\n\n\n\n\n\nThe above visualization is not great.\nWhen we describe the relationship between continuous and categorical variables, it is better to go with the visualization about how the distribution of a continuous variable varies by a categorical variable.\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_histogram(aes(fill = factor(cyl)), alpha = .3)\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_freqpoly(aes(color = factor(cyl)), alpha = .5)\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_density(aes(fill = factor(cyl)), alpha = .5) +\n  scale_x_continuous(breaks = seq(5,40,5)) +\n  scale_fill_manual(values = c(\"#ff6600\", \"#00ccff\", \"#556b2f\", \"#66023c\" )) +\n  labs(fill = \"Number of Cylinders\") +\n  theme(legend.position = c(.25,.75)) +\n  guides(fill = guide_legend(nrow = 1,\n                             label.position = \"bottom\"\n                             ))\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_density(aes(fill = factor(cyl)), alpha = .5) +\n  scale_x_continuous(breaks = seq(5,40,5)) +\n  scale_fill_brewer(palette = 'Reds') +\n  labs(fill = \"Number of Cylinders\") +\n  theme(legend.position = c(.25,.75)) +\n  guides(fill = guide_legend(nrow = 1,\n                             label.position = \"bottom\"\n                             ))\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = factor(cyl), y = hwy,\n             fill = factor(cyl))) +\n  geom_boxplot(show.legend = F)\n\n\n\n\n\n\n\n\n\n\nWhat happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv), alpha = .02)\n\n\n\n\n\nmpg |&gt; \n  count(class)\n\n# A tibble: 7 √ó 2\n  class          n\n  &lt;chr&gt;      &lt;int&gt;\n1 2seater        5\n2 compact       47\n3 midsize       41\n4 minivan       11\n5 pickup        33\n6 subcompact    35\n7 suv           62\n\nmpg |&gt; \n  count(drv)\n\n# A tibble: 3 √ó 2\n  drv       n\n  &lt;chr&gt; &lt;int&gt;\n1 4       103\n2 f       106\n3 r        25\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar(position = \"fill\") +\n  labs(y = \"Proportion\")\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar(position = position_dodge(preserve = \"single\")) +\n  labs(y = \"Proportion\")"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q1a.",
    "href": "danl-cw/danl-399-cw-04-a.html#q1a.",
    "title": "Classwork 4 - Example Answers",
    "section": "",
    "text": "Run ggplot(data = mpg). What do you see?\n\nggplot(data = mpg)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q1b.",
    "href": "danl-cw/danl-399-cw-04-a.html#q1b.",
    "title": "Classwork 4 - Example Answers",
    "section": "",
    "text": "Write a ggplot code to make a scatterplot of hwy vs.¬†cyl.\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = hwy, y = cyl))\n\n\n\n\n\nThe above visualization is not great.\nWhen we describe the relationship between continuous and categorical variables, it is better to go with the visualization about how the distribution of a continuous variable varies by a categorical variable.\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_histogram(aes(fill = factor(cyl)), alpha = .3)\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_freqpoly(aes(color = factor(cyl)), alpha = .5)\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_density(aes(fill = factor(cyl)), alpha = .5) +\n  scale_x_continuous(breaks = seq(5,40,5)) +\n  scale_fill_manual(values = c(\"#ff6600\", \"#00ccff\", \"#556b2f\", \"#66023c\" )) +\n  labs(fill = \"Number of Cylinders\") +\n  theme(legend.position = c(.25,.75)) +\n  guides(fill = guide_legend(nrow = 1,\n                             label.position = \"bottom\"\n                             ))\n\n\n\n\n\np &lt;- ggplot(mpg, aes(x = hwy))\n\np + geom_density(aes(fill = factor(cyl)), alpha = .5) +\n  scale_x_continuous(breaks = seq(5,40,5)) +\n  scale_fill_brewer(palette = 'Reds') +\n  labs(fill = \"Number of Cylinders\") +\n  theme(legend.position = c(.25,.75)) +\n  guides(fill = guide_legend(nrow = 1,\n                             label.position = \"bottom\"\n                             ))\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = factor(cyl), y = hwy,\n             fill = factor(cyl))) +\n  geom_boxplot(show.legend = F)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q1c.",
    "href": "danl-cw/danl-399-cw-04-a.html#q1c.",
    "title": "Classwork 4 - Example Answers",
    "section": "",
    "text": "What happens if you make a scatterplot of class vs.¬†drv?\n\nWhy is the plot not useful?\n\n\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = class, y = drv), alpha = .02)\n\n\n\n\n\nmpg |&gt; \n  count(class)\n\n# A tibble: 7 √ó 2\n  class          n\n  &lt;chr&gt;      &lt;int&gt;\n1 2seater        5\n2 compact       47\n3 midsize       41\n4 minivan       11\n5 pickup        33\n6 subcompact    35\n7 suv           62\n\nmpg |&gt; \n  count(drv)\n\n# A tibble: 3 √ó 2\n  drv       n\n  &lt;chr&gt; &lt;int&gt;\n1 4       103\n2 f       106\n3 r        25\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar(position = \"fill\") +\n  labs(y = \"Proportion\")\n\n\n\n\n\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) +\n  geom_bar(position = position_dodge(preserve = \"single\")) +\n  labs(y = \"Proportion\")"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q2a.",
    "href": "danl-cw/danl-399-cw-04-a.html#q2a.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q2a.",
    "text": "Q2a.\n\nWhich variables in mpg are categorical?\n\n\nmpg |&gt; \n  count(drv)\n\n# A tibble: 3 √ó 2\n  drv       n\n  &lt;chr&gt; &lt;int&gt;\n1 4       103\n2 f       106\n3 r        25\n\n\n\nWhich variables are continuous?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q2b.",
    "href": "danl-cw/danl-399-cw-04-a.html#q2b.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q2b.",
    "text": "Q2b.\n\nMap a continuous variable to color, size, and shape.\nHow do these aesthetics behave differently for categorical vs.¬†continuous variables?\n\n\nmpg |&gt; \n  ggplot(aes(x = displ, y = hwy,\n             shape = cty)) +\n  geom_point()"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q2d.",
    "href": "danl-cw/danl-399-cw-04-a.html#q2d.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q2d.",
    "text": "Q2d.\nWhat happens if you map an aesthetic to something other than a variable name, like aes(color = displ &lt; 5)?\n\nmpg |&gt; \n  ggplot(aes(x = displ, y = hwy,\n             color = displ &lt; 5)) +\n  geom_point(alpha = .33)\n\n\n\n\n\nmpg |&gt; \n  mutate(cond = displ &lt; 5) |&gt; \n  ggplot(aes(x = displ, y = hwy,\n             color = cond)) +\n  geom_point(alpha = .33)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3a.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3a.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3a.",
    "text": "Q3a.\nWhat happens if you facet on a continuous variable?\n\nbeer &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")\n\n\nbeer |&gt; \n  ggplot(aes(x = log(beer_floz), y = log(price_per_floz)) ) +\n  geom_point(alpha = .1) +\n  geom_smooth() +\n  geom_smooth(method = 'lm', color = 'red') +\n  facet_grid(brand ~ .)\n\n\n\n\n\n# it takes too long!\nbeer |&gt; \n  ggplot(aes(x = log(beer_floz), y = log(price_per_floz)) ) +\n  geom_point(alpha = .1) +\n  geom_smooth() +\n  geom_smooth(method = 'lm', color = 'red') +\n  facet_wrap(dollar_spent ~ .)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3b.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3b.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3b.",
    "text": "Q3b.\n\nWhat do the empty cells in the scatterplot of displ vs.¬†hwy with facet_grid(drv ~ cyl) mean?\n\nHow do they relate to this plot?\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = drv, y = cyl))\n\n\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = drv, y = cyl)) +\n  facet_grid(drv ~ cyl)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3c.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3c.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3c.",
    "text": "Q3c.\nWhat plots does the following code make? What does . do?\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(drv ~ .)\n\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy),\n             alpha = .5) +\n  facet_grid(. ~ cyl)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3d.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3d.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3d.",
    "text": "Q3d.\nConsider the following faceted plot:\n\nggplot(data = mpg,\n       mapping = aes(x = displ, y = hwy,\n                           color = class)\n             ) + \n  geom_point(alpha = .5) +\n  geom_smooth() +\n  facet_wrap(~ class, ncol = 1) \n\n\n\n\n\nggplot(data = mpg,\n       mapping = aes(x = displ, y = hwy,\n                           color = class)\n             ) + \n  geom_point(alpha = .5) +\n  geom_smooth()\n\n\n\n\n\nWhat are the advantages to using faceting instead of the color aesthetic?\n\nWhat are the disadvantages?\nHow might the balance change if you had a larger dataset?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3e.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3e.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3e.",
    "text": "Q3e.\n\nRead ?facet_wrap.\n\nWhat does nrow do?\nWhat does ncol do?\nWhat other options control the layout of the individual panels?\nWhy doesn‚Äôt facet_grid() have nrow and ncol arguments?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3f.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3f.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3f.",
    "text": "Q3f.\nWhen using facet_grid(), you should usually put the variable with more unique levels in the columns. Why?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-04-a.html#q3g.",
    "href": "danl-cw/danl-399-cw-04-a.html#q3g.",
    "title": "Classwork 4 - Example Answers",
    "section": "Q3g.",
    "text": "Q3g.\nUse the following data.frame.\n\ntvshows_web &lt;- read_csv(\n        'https://bcdanl.github.io/data/tvshows.csv')\n\n\ndatatable(tvshows_web)\n\n\n\n\n\n\n\n\nDescribe the relationship between audience size (GRP) and audience engagement (PE) using ggplot.\n\n\ntvshows_web |&gt; \n  ggplot(aes(x = GRP, y = PE)) +\n  geom_point() +\n  geom_smooth()\n\n\n\n\n\nDescribe how the relationship between audience size (GRP) and audience engagement (PE) varies by Genre using ggplot.\n\n\ntvshows_web |&gt; \n  ggplot(aes(x = GRP, y = PE)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  facet_wrap(Genre ~ .)\n\n\n\n\n\ntvshows_web |&gt; \n  ggplot(aes(x = GRP, y = PE, color = Genre)) +\n  geom_point() +\n  geom_smooth(method = lm) \n\n\n\n\n\nExplain the relationship in words."
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html",
    "href": "danl-cw/danl-399-cw-07.html",
    "title": "Classwork 7",
    "section": "",
    "text": "The following data is for Question 1:\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\n\n\n\n\n  \n\n\n\n\n\nReplicate the following ggplot.\n\n\n\n\n\n\n\n\n\n\nThe following data is for Question 2:\n\nnyc_flights &lt;- read_csv(\n  'https://bcdanl.github.io/data/nyc_flights_grouped.csv')\n\n\n\n\n\n  \n\n\n\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-qa/danl-399-qa-07.html",
    "href": "danl-qa/danl-399-qa-07.html",
    "title": "Lecture 7 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 7 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 7 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 7 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html",
    "href": "danl-cw/danl-399-cw-05-a.html",
    "title": "Classwork 5 - Example Answers",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth()\n\n\n\n\n\n\n\n\nWhat does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)\n\n\n\n\n\n\n\nRecreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')\n\n\norgandata_simple |&gt; \n  ggplot(aes(x = as.integer(year), y = donors)) +\n  geom_line(aes(color = country),\n            show.legend = F) +\n  geom_point(size = .75) +\n  geom_smooth(linewidth = .5) +\n  scale_x_continuous(breaks = 1991:2002,\n                     labels = str_c(\"'\", str_sub(as.character(1991:2002), 3, 4))) +\n  facet_wrap(country ~ .) +\n  theme(axis.text.x = element_text(angle = 45,\n                                   size = rel(.75)))\n\n\n\n\n\norgandata_simple |&gt; \n  ggplot(aes(x = as.integer(year), y = donors)) +\n  geom_col(aes(fill = country),\n            show.legend = F) +\n  geom_smooth(linewidth = .5) +\n  scale_x_continuous(breaks = 1991:2002,\n                     labels = str_c(\"'\", str_sub(as.character(1991:2002), 3, 4))) +\n  scale_fill_viridis_d() +\n  facet_wrap(country ~ .) +\n  theme(axis.text.x = element_text(angle = 45,\n                                   size = rel(.75)))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q1a.",
    "href": "danl-cw/danl-399-cw-05-a.html#q1a.",
    "title": "Classwork 5 - Example Answers",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth()"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q1b.",
    "href": "danl-cw/danl-399-cw-05-a.html#q1b.",
    "title": "Classwork 5 - Example Answers",
    "section": "",
    "text": "What does show.legend = FALSE do? What happens if you remove it? Why do you think I used it earlier in the lecture?\n\nAnswer:\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q1c.",
    "href": "danl-cw/danl-399-cw-05-a.html#q1c.",
    "title": "Classwork 5 - Example Answers",
    "section": "",
    "text": "Recreate the R code necessary to generate the following graphs."
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q1d.",
    "href": "danl-cw/danl-399-cw-05-a.html#q1d.",
    "title": "Classwork 5 - Example Answers",
    "section": "",
    "text": "Use the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')\n\n\norgandata_simple |&gt; \n  ggplot(aes(x = as.integer(year), y = donors)) +\n  geom_line(aes(color = country),\n            show.legend = F) +\n  geom_point(size = .75) +\n  geom_smooth(linewidth = .5) +\n  scale_x_continuous(breaks = 1991:2002,\n                     labels = str_c(\"'\", str_sub(as.character(1991:2002), 3, 4))) +\n  facet_wrap(country ~ .) +\n  theme(axis.text.x = element_text(angle = 45,\n                                   size = rel(.75)))\n\n\n\n\n\norgandata_simple |&gt; \n  ggplot(aes(x = as.integer(year), y = donors)) +\n  geom_col(aes(fill = country),\n            show.legend = F) +\n  geom_smooth(linewidth = .5) +\n  scale_x_continuous(breaks = 1991:2002,\n                     labels = str_c(\"'\", str_sub(as.character(1991:2002), 3, 4))) +\n  scale_fill_viridis_d() +\n  facet_wrap(country ~ .) +\n  theme(axis.text.x = element_text(angle = 45,\n                                   size = rel(.75)))"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q2a.",
    "href": "danl-cw/danl-399-cw-05-a.html#q2a.",
    "title": "Classwork 5 - Example Answers",
    "section": "Q2a.",
    "text": "Q2a.\nWhat does geom_col() do? How is it different to geom_bar()?\nAnswer:"
  },
  {
    "objectID": "danl-cw/danl-399-cw-05-a.html#q2b.",
    "href": "danl-cw/danl-399-cw-05-a.html#q2b.",
    "title": "Classwork 5 - Example Answers",
    "section": "Q2b.",
    "text": "Q2b.\n\nInstall the R package, nycflights13, which provides the flights data.frame.\nVisualize the distribution of carrier.\nVisualize how the distribution of carrier varies by origin.\n\nAnswer:\n\nflights &lt;- nycflights13::flights\nairlines &lt;- nycflights13::airlines\n\nflights &lt;- flights |&gt; \n  left_join(airlines)\n\n\nflights |&gt; \n  ggplot(aes(y = name)) +\n  geom_bar()\n\n\n\n\n\nflights |&gt; \n  group_by(name) |&gt; \n  count() |&gt; \n  ggplot(aes(y = fct_reorder(name, n), x = n)) +\n  geom_col()\n\n\n\n\n\nflights |&gt; \n  group_by(name, origin) |&gt; \n  count() |&gt; \n  ggplot(aes(y = fct_reorder(name, n), x = n)) +\n  geom_col() +\n  facet_wrap(origin ~ ., scales = \"free_y\")\n\n\n\n\n\nflights |&gt; \n  group_by(name, origin) |&gt; \n  count() |&gt; \n  ggplot(aes(y = name, x = n)) +\n  geom_col() +\n  facet_wrap(origin ~ ., scales = \"free_y\", ncol = 1)\n\n\n\n\n\ndf &lt;- flights |&gt; \n  group_by(name, origin) |&gt; \n  count()\ndf |&gt; \n  ggplot(aes(y = fct_reorder(name, n), x = n)) +\n  geom_col() +\n  facet_wrap(origin ~ ., scales = \"free_y\", ncol = 1)\n\n\n\n\n\nlibrary(gridExtra)\ndf &lt;- flights |&gt; \n  group_by(carrier, origin) |&gt; \n  count()\n\ndf_LGA &lt;- df |&gt; filter(origin == \"LGA\")\ndf_EWR &lt;- df |&gt; filter(origin == \"EWR\")\ndf_JFK &lt;- df |&gt; filter(origin == \"JFK\")\n\ndf_LGA &lt;- df_LGA |&gt; \n  mutate(carrier = fct_reorder(carrier, n))\n\nlevels(df_LGA$carrier)\n\n [1] \"9E\" \"AA\" \"B6\" \"DL\" \"EV\" \"F9\" \"FL\" \"MQ\" \"OO\" \"UA\" \"US\" \"WN\" \"YV\"\n\np1 &lt;- df_LGA |&gt; \n  mutate(carrier = factor(carrier, levels = unique(flights$carrier))) |&gt; \n  ggplot(aes(y = fct_reorder(carrier, n), x = n)) +\n  geom_col() +\n  labs(title = \"LGA\", y = \"Carrier\")\n\nlevels(fct_reorder(df_LGA$carrier, df_LGA$n))\n\n [1] \"OO\" \"YV\" \"F9\" \"9E\" \"FL\" \"B6\" \"WN\" \"UA\" \"EV\" \"US\" \"AA\" \"MQ\" \"DL\"\n\np2 &lt;- df_EWR |&gt; \n  mutate(carrier = factor(carrier, levels = unique(flights$carrier))) |&gt; \n  ggplot(aes(y = factor(carrier,\n                        levels = levels(fct_reorder(df_LGA$carrier, df_LGA$n))), \n             x = n)) +\n  geom_col() +\n  labs(title = \"EWR\", y = \"Carrier\")\n\np3 &lt;- df_JFK |&gt; \n  mutate(carrier = factor(carrier, levels = unique(flights$carrier))) |&gt; \n  ggplot(aes(y = factor(carrier,\n                        levels = levels(fct_reorder(df_LGA$carrier, df_LGA$n))), \n             x = n)) +\n  geom_col() +\n  labs(title = \"JFK\", y = \"Carrier\")\n\ngrid.arrange(p1,p2,p3, nrow = 1)\n\n\n\n\n\nIn our course, I do not require using for-loop. But here I just provide how can we combine tidyverse with for-loop.\nBelow is a manually faceted bar chart with the order referenced to LGA\n\n\nlibrary(gridExtra)\nflights &lt;- nycflights13::flights\ndf &lt;- flights |&gt; \n  group_by(carrier, origin) |&gt; \n  count() |&gt; \n  ungroup()\n\n\nfor (airport in unique(flights$origin)){\n  # data.frame for each origin airport in NYC\n  tmp &lt;- df |&gt; \n    filter(origin == airport) |&gt; \n    select(-origin) \n  \n  # Check for missing levels\n  missing_levels &lt;- setdiff(unique(flights$carrier), tmp$carrier)\n  \n  # If there are missing levels, add an observation for each\n  if (length(missing_levels) &gt; 0) {\n    for (item in missing_levels) {\n      tmp &lt;- tmp |&gt; \n        add_row(n = 0, carrier = item)\n    }\n  }\n  \n  # Assign tmp to df_airport\n  assign(paste0('df_', airport),\n         tmp)\n}\n\np1 &lt;- df_LGA |&gt; \n  ggplot(aes(y = fct_reorder(carrier, n), x = n)) +\n  geom_col() +\n  labs(title = \"LGA\", y = \"Carrier\")\n\nlevels(fct_reorder(df_LGA$carrier, df_LGA$n))\n\n [1] \"AS\" \"HA\" \"VX\" \"OO\" \"YV\" \"F9\" \"9E\" \"FL\" \"B6\" \"WN\" \"UA\" \"EV\" \"US\" \"AA\" \"MQ\"\n[16] \"DL\"\n\np2 &lt;- df_EWR |&gt; \n  ggplot(aes(y = factor(carrier,\n                        levels = levels(fct_reorder(df_LGA$carrier, df_LGA$n))), \n             x = n)) +\n  geom_col() +\n  labs(title = \"EWR\", y = \"\")\n\np3 &lt;- df_JFK |&gt; \n  ggplot(aes(y = factor(carrier,\n                        levels = levels(fct_reorder(df_LGA$carrier, df_LGA$n))), \n             x = n)) +\n  geom_col() +\n  labs(title = \"JFK\", y = \"\")\n\ngrid.arrange(p1,p2,p3, nrow = 1)"
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html",
    "href": "danl-hw/danl-399-hw-03-q.html",
    "title": "Homework 3",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)"
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#loading-r-packages",
    "href": "danl-hw/danl-399-hw-03-q.html#loading-r-packages",
    "title": "Homework 3",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)"
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q1a",
    "href": "danl-hw/danl-399-hw-03-q.html#q1a",
    "title": "Homework 3",
    "section": "Q1a",
    "text": "Q1a\n\nReplicate the following ggplot.\n\nUse the color #0072B2 for dots."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q1b",
    "href": "danl-hw/danl-399-hw-03-q.html#q1b",
    "title": "Homework 3",
    "section": "Q1b",
    "text": "Q1b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q2a",
    "href": "danl-hw/danl-399-hw-03-q.html#q2a",
    "title": "Homework 3",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nThe following describes the type values:\n\nn_ot_us: Number of US tweets\nn_ot_wrld: Number of worldwide tweets\nn_rt_lk_us: Number of US retweets & likes\nn_rt_lk_wrld: Number of worldwide retweets & likes\n\nUse the colors, maroon and #428bca properly."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q2b.",
    "href": "danl-hw/danl-399-hw-03-q.html#q2b.",
    "title": "Homework 3",
    "section": "Q2b.",
    "text": "Q2b.\n\nMake a simple comment on the visualization result."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q3a",
    "href": "danl-hw/danl-399-hw-03-q.html#q3a",
    "title": "Homework 3",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q3b",
    "href": "danl-hw/danl-399-hw-03-q.html#q3b",
    "title": "Homework 3",
    "section": "Q3b",
    "text": "Q3b\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#variable-description",
    "href": "danl-hw/danl-399-hw-03-q.html#variable-description",
    "title": "Homework 3",
    "section": "Variable description",
    "text": "Variable description\n\nProduct_Name: Product Name\nSize: Size of drink (short, tall, grande, venti)\nMilk: Milk Type type of milk used\n\n0 none\n1 nonfat\n2 2%\n3 soy\n4 coconut\n5 whole\n\nWhip: Whip added or not (binary 0/1)\nServ_Size_mL: Serving size in ml\nCalories: KCal\nTotal_Fat_g: Total fat grams\nSaturated_Fat_g: Saturated fat grams\nTrans_Fat_g: Trans fat grams\nCholesterol_mg: Cholesterol mg\nSodium_mg: Sodium milligrams\nTotal_Carbs_g: Total Carbs grams\nFiber_g: Fiber grams\nSugar_g: Sugar grams\nCaffeine_mg: Caffeine in milligrams"
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q4a.",
    "href": "danl-hw/danl-399-hw-03-q.html#q4a.",
    "title": "Homework 3",
    "section": "Q4a.",
    "text": "Q4a.\n\nAdd the following two variables to starbucks data.frame\n\ncaffeine_mgml: Caffeine in milligrams per mL\ncalories_kcml: Calories KCal per mL"
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q4b.",
    "href": "danl-hw/danl-399-hw-03-q.html#q4b.",
    "title": "Homework 3",
    "section": "Q4b.",
    "text": "Q4b.\n\nCalculate a mean caffeine_mgml and a mean calories_kcml for each product_name."
  },
  {
    "objectID": "danl-hw/danl-399-hw-03-q.html#q4c.",
    "href": "danl-hw/danl-399-hw-03-q.html#q4c.",
    "title": "Homework 3",
    "section": "Q4c.",
    "text": "Q4c.\n\nFor the top 10 product_name in terms of caffeine_mgml and the top 10 product_name in terms of calories_kcml, replicate the following ggplot.\nUse the following commands for showing texts in the plot:\n\n\n# install.packages(\"showtext\")\nlibrary(showtext)\nshowtext_auto()\nfont_add_google(\"Annie Use Your Telescope\", \"annie\")\n\n\nUse the following annotate() geom to insert the starbucks image in the plot:\n\n\nannotate(\"richtext\", \n           x =  , \n           y =  , \n           label = \"&lt;img src='https://bcdanl.github.io/lec_figs/starbucks.png' width='100'/&gt;\", \n           fill =  ,\n           size =  , \n           color =  )\n\n\nUse the following geom_text_repel() geom to use the annie font\n\n\ngeom_text_repel(max.overlaps = ,\n                  size =  ,\n                  min.segment.length =  ,\n                  point.padding =  ,\n                  box.padding =  ,\n                  show.legend =  ,\n                  family = \"annie\")\n\n\nUse the color, #00704A, for the title."
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html#question-1---facetted-bar-charts",
    "href": "danl-cw/danl-399-cw-07.html#question-1---facetted-bar-charts",
    "title": "Classwork 7",
    "section": "",
    "text": "The following data is for Question 1:\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\n\n\n\n\n  \n\n\n\n\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html#question-2---ordered-bar-chart-with-colors",
    "href": "danl-cw/danl-399-cw-07.html#question-2---ordered-bar-chart-with-colors",
    "title": "Classwork 7",
    "section": "",
    "text": "The following data is for Question 2:\n\nnyc_flights &lt;- read_csv(\n  'https://bcdanl.github.io/data/nyc_flights_grouped.csv')\n\n\n\n\n\n  \n\n\n\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html#question-3---free-scales",
    "href": "danl-cw/danl-399-cw-07.html#question-3---free-scales",
    "title": "Classwork 7",
    "section": "Question 3 - Free scales",
    "text": "Question 3 - Free scales\n\nAdd scales = \"free_x\" as an argument to the facet_wrap() function.\nHow does the visualization change?\nHow is the story this visualization telling different than the story the original plot tells?"
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html#question-4---comparing-proportions-across-facets",
    "href": "danl-cw/danl-399-cw-07.html#question-4---comparing-proportions-across-facets",
    "title": "Classwork 7",
    "section": "Question 4 - Comparing proportions across facets",
    "text": "Question 4 - Comparing proportions across facets\n\nFirst, calculate the proportion of wrong, right, and don‚Äôt know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nHow is the story this visualization telling different than the story the original plot tells?\n\nHint: You‚Äôll need the scales package to improve axis labeling, which means you‚Äôll need to load it on top of the document as well."
  },
  {
    "objectID": "danl-cw/danl-399-cw-07.html#question-5---comparing-proportions-across-bars",
    "href": "danl-cw/danl-399-cw-07.html#question-5---comparing-proportions-across-bars",
    "title": "Classwork 7",
    "section": "Question 5 - Comparing proportions across bars",
    "text": "Question 5 - Comparing proportions across bars\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html",
    "href": "danl-class/danl-399-note-07-2024-0322.html",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "ncdc_temp &lt;- read_csv(\n  'https://bcdanl.github.io/data/ncdc_temp_cleaned.csv')\n\n\nncdc_temp |&gt; \n  ggplot(aes(x = date, y = temperature)) +\n  geom_line(aes(color = location)) +\n  geom_point(data = filter(ncdc_temp,\n                           month %in% c(\"01\", \"04\", \"07\", \"10\"),\n                           day == 1)\n             ) +\n  scale_x_date(breaks = ymd(c('0000-01-01',\n                              '0000-04-01',\n                              '0000-07-01',\n                              '0000-10-01',\n                              '0000-12-31')),\n               labels = c(\"Jan\", \"Apr\", \"Jul\", \"Oct\", \"Jan\")) +\n  scale_y_continuous(breaks = seq(20,100,20)) +\n  labs(x = \"month\")\n\n\n\n\n\n\n\n\nncdc_temp |&gt; \n  ggplot(aes(x = month,\n             y = temperature)) +\n  geom_boxplot(fill = 'lightgrey') +\n  stat_summary(fun = mean,\n               color = 'red') +\n  theme_clean()\n\n\n\n\n\n\n\n\nrel_min_height aesthetic sets a percent cutoff relative to the highest point of any of the density curves.\n\n\nncdc_temp |&gt; \n  ggplot(aes(x = temperature,\n             y = month)) +\n  geom_density_ridges(fill = 'lightblue',\n                      color = 'white',\n                      rel_min_height = .01,\n                      scale = 2.5)\n\n\n\n\n\n\n\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg,\n             color = hp)) +\n  geom_point()\n\n\n\n\n\n\n\n\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')\n\npopgrowth_df |&gt; \n  ggplot(aes(x = popgrowth,\n             y = reorder(state, popgrowth),\n             fill = region)) +\n  geom_col() +\n  scale_x_continuous(labels = scales::percent) +\n  theme(legend.position = c(.67,.5))\n\n\n\n\n\n\n\n\nmale_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\nmale_Aus |&gt; \n  ggplot(aes(x = height, y = pcBfat, \n             shape = sport, \n             fill = sport,\n             color = sport)) +\n  geom_point(size = 2) +\n  scale_shape_manual(values = c('water polo' = 6,\n                                'track' = 2,\n                                'swimming' = 5,\n                                'field' = 0,\n                                'basketball' = 1\n                                )) +\n  scale_fill_manual(values = c('red', rep('grey',4))) +\n  scale_color_manual(values = c('red', rep('grey',4)))\n\n\n\n\n\n\n\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\ntitanic_male &lt;- titanic |&gt; \n  mutate(sex = 'male')\ntitanic_female &lt;- titanic |&gt; \n  mutate(sex = 'female')\ntitanic_trick &lt;- rbind(titanic_male,\n                       titanic_female)\n\ntitanic |&gt; \n  ggplot(aes(x = age, y = stat(count))) +\n  geom_density(data = titanic_trick, fill = 'grey', color = NA) +\n  geom_density(aes(fill = sex), color = NA) +\n  facet_wrap(~sex) +\n  scale_fill_manual(values= c('#f6546a', '#0a75ad'))\n\n\n\n\n\n\n\n\ncows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')\n\ncows_filtered |&gt; \n  ggplot(aes(x = butterfat, fill = breed, color = breed)) +\n  geom_density(alpha = .33)"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-1",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-1",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "ncdc_temp &lt;- read_csv(\n  'https://bcdanl.github.io/data/ncdc_temp_cleaned.csv')\n\n\nncdc_temp |&gt; \n  ggplot(aes(x = date, y = temperature)) +\n  geom_line(aes(color = location)) +\n  geom_point(data = filter(ncdc_temp,\n                           month %in% c(\"01\", \"04\", \"07\", \"10\"),\n                           day == 1)\n             ) +\n  scale_x_date(breaks = ymd(c('0000-01-01',\n                              '0000-04-01',\n                              '0000-07-01',\n                              '0000-10-01',\n                              '0000-12-31')),\n               labels = c(\"Jan\", \"Apr\", \"Jul\", \"Oct\", \"Jan\")) +\n  scale_y_continuous(breaks = seq(20,100,20)) +\n  labs(x = \"month\")"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-2",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-2",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "ncdc_temp |&gt; \n  ggplot(aes(x = month,\n             y = temperature)) +\n  geom_boxplot(fill = 'lightgrey') +\n  stat_summary(fun = mean,\n               color = 'red') +\n  theme_clean()"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-3",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-3",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "rel_min_height aesthetic sets a percent cutoff relative to the highest point of any of the density curves.\n\n\nncdc_temp |&gt; \n  ggplot(aes(x = temperature,\n             y = month)) +\n  geom_density_ridges(fill = 'lightblue',\n                      color = 'white',\n                      rel_min_height = .01,\n                      scale = 2.5)"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-4",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-4",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "mtcars |&gt; \n  ggplot(aes(x = disp, y = mpg,\n             color = hp)) +\n  geom_point()"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-5",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-5",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "popgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')\n\npopgrowth_df |&gt; \n  ggplot(aes(x = popgrowth,\n             y = reorder(state, popgrowth),\n             fill = region)) +\n  geom_col() +\n  scale_x_continuous(labels = scales::percent) +\n  theme(legend.position = c(.67,.5))"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-6",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-6",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "male_Aus &lt;- read_csv(\n  'https://bcdanl.github.io/data/aus_athletics_male.csv')\n\nmale_Aus |&gt; \n  ggplot(aes(x = height, y = pcBfat, \n             shape = sport, \n             fill = sport,\n             color = sport)) +\n  geom_point(size = 2) +\n  scale_shape_manual(values = c('water polo' = 6,\n                                'track' = 2,\n                                'swimming' = 5,\n                                'field' = 0,\n                                'basketball' = 1\n                                )) +\n  scale_fill_manual(values = c('red', rep('grey',4))) +\n  scale_color_manual(values = c('red', rep('grey',4)))"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-7",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-7",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "titanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\ntitanic_male &lt;- titanic |&gt; \n  mutate(sex = 'male')\ntitanic_female &lt;- titanic |&gt; \n  mutate(sex = 'female')\ntitanic_trick &lt;- rbind(titanic_male,\n                       titanic_female)\n\ntitanic |&gt; \n  ggplot(aes(x = age, y = stat(count))) +\n  geom_density(data = titanic_trick, fill = 'grey', color = NA) +\n  geom_density(aes(fill = sex), color = NA) +\n  facet_wrap(~sex) +\n  scale_fill_manual(values= c('#f6546a', '#0a75ad'))"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-8",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-8",
    "title": "Advanced ggplot Visualization",
    "section": "",
    "text": "cows_filtered &lt;- read_csv(\n  'https://bcdanl.github.io/data/cows_filtered.csv')\n\ncows_filtered |&gt; \n  ggplot(aes(x = butterfat, fill = breed, color = breed)) +\n  geom_density(alpha = .33)"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-1-1",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-1-1",
    "title": "Advanced ggplot Visualization",
    "section": "Question 1",
    "text": "Question 1\n\ntitanic &lt;- read_csv(\n  'https://bcdanl.github.io/data/titanic_cleaned.csv')\n\ntitanic |&gt; \n  mutate(survived = ifelse(survived == T, 'Survived', 'Died')) |&gt; \n  ggplot(aes(x = sex, fill = sex)) +\n  geom_bar(show.legend = F) +\n  facet_grid(class ~ survived)"
  },
  {
    "objectID": "danl-class/danl-399-note-07-2024-0322.html#question-2-1",
    "href": "danl-class/danl-399-note-07-2024-0322.html#question-2-1",
    "title": "Advanced ggplot Visualization",
    "section": "Question 2",
    "text": "Question 2\n\nnyc_flights &lt;- read_csv(\n  'https://bcdanl.github.io/data/nyc_flights_grouped.csv')\n\n# unique(nyc_flights$carrier_full)\n\nnyc_flights |&gt; \n  count(carrier_full) |&gt; \n  mutate(carrier_full = ifelse(carrier_full == 'other', 'Other', carrier_full),\n         carrier_full = factor(carrier_full),\n         carrier_full = reorder(carrier_full, n)) |&gt; \n  ggplot(aes(x = n, y = carrier_full,\n             fill = carrier_full)) +\n  geom_col(show.legend = F,\n           alpha = .75) +\n  geom_text(aes(label = scales::comma(n)),\n            hjust = -.1) +\n  scale_fill_manual(values = c(rep('lightgrey',5), rep('red', 2), rep('lightgrey',3)\n  )) +\n  scale_x_continuous(limits = c(0,60000)) +\n  labs(title = 'Number of flights from NYC',\n       subtitle = 'Year 2013', y = '',\n       caption = 'Sources: U.S. Department of Transportation,\\nBureau of Transportation Statistics') +\n  theme_fivethirtyeight()"
  },
  {
    "objectID": "danl-399-midterm-q.html",
    "href": "danl-399-midterm-q.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)"
  },
  {
    "objectID": "danl-399-midterm-q.html#loading-r-packages",
    "href": "danl-399-midterm-q.html#loading-r-packages",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)"
  },
  {
    "objectID": "danl-399-midterm-q.html#using-the-power-of-nature-to-clean-the-oceans",
    "href": "danl-399-midterm-q.html#using-the-power-of-nature-to-clean-the-oceans",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Using The Power of Nature to Clean the Oceans",
    "text": "Using The Power of Nature to Clean the Oceans\n\n\n\nMr.¬†Trash Wheel\n\n\nMr.¬†Trash Wheel is a semi-autonomous trash interceptor that is placed at the end of a river, stream or other outfall.\nFar too lazy to chase trash around the ocean, Mr.¬†Trash Wheel stays put and waits for the waste to flow to him.\nSustainably powered and built to withstand the biggest storms, Mr.¬†Trash Wheel uses a unique blend of solar and hydro power to pull hundreds of tons of trash out of the water each year."
  },
  {
    "objectID": "danl-399-midterm-q.html#meet-the-mr.-trash-wheel-family",
    "href": "danl-399-midterm-q.html#meet-the-mr.-trash-wheel-family",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Meet the Mr.¬†Trash Wheel Family",
    "text": "Meet the Mr.¬†Trash Wheel Family\n\n\n\n\n\n\nMister Trash Wheel\n\n\n\n\nInstalled: May 9, 2014\nLocation: Jones Falls stream, Inner Harbor, Baltimore, MD\n\n\n\n\n\n\n\n\nProfessor Trash Wheel\n\n\n\n\nInstalled: December 4, 2016\nLocation: Harris Creek, Canton neighborhood, Baltimore, MD\n\n\n\n\n\n\n\n\nCaptain Trash Wheel\n\n\n\n\n\nInstalled: June 5, 2018\nLocation: Masonville Cove, Baltimore, MD\n\n\n\n\n\n\n\n\nGwynnda Trash Wheel\n\n\n\n\n\nInstalled: June 3, 2021\nLocation: Gwynns Falls, West Baltimore, MD\n\n\n\n\n\nThe following is the data frames for Question 1.\n\n\ntrashwheel &lt;- read_csv('https://bcdanl.github.io/data/trashwheel.csv')"
  },
  {
    "objectID": "danl-399-midterm-q.html#part-1",
    "href": "danl-399-midterm-q.html#part-1",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Part 1",
    "text": "Part 1\n\nThe following is the data frames for Part 1 in Question 1.\n\n\ntrashwheel &lt;- read_csv('https://bcdanl.github.io/data/trashwheel.csv')\n\n\nVariable Description\n\n\n\n\n\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nMonth\ncharacter\nMonth\n\n\nYear\nnumeric\nYear\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nWeight\nnumeric\nWeight in tons\n\n\nVolume\nnumeric\nVolume in cubic yards\n\n\nPlasticBottles\nnumeric\nNumber of plastic bottles\n\n\nPolystyrene\nnumeric\nNumber of polystyrene items\n\n\nCigaretteButts\nnumeric\nNumber of cigarette butts\n\n\nGlassBottles\nnumeric\nNumber of glass bottles\n\n\nPlasticBags\nnumeric\nNumber of plastic bags\n\n\nWrappers\nnumeric\nNumber of wrappers\n\n\nSportsBalls\nnumeric\nNumber of sports balls\n\n\nHomesPowered\nnumeric\nHomes Powered - Each ton of trash equates to on average 500 kilowatts of electricity. An average household will use 30 kilowatts per day.\n\n\n\n\n\nQ1a\n\nProvide an R code to calculate mean and standard deviation of Volume for ‚ÄúMister Trash Wheel‚Äù.\n\nAnswer :\n\n\n\nQ1b\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of Weight varies by Name.\n\nThe number of bins in each subplot below is 15.\n\n\n\nknitr::include_graphics('midterm-figs/figure-html/q1b-1.png')\n\n\n\n\nAnswer :\n\n\n\nQ1c\n\nProvide a comment to describe how the distribution of Weight varies by Name, as visualized in Q1b.\n\nAnswer :\n\n\n\nQ1d\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of HomesPowered varies by Name.\n\nThe number of bins in each subplot below is 75.\n\n\n\nknitr::include_graphics('midterm-figs/figure-html/q1d-1.png')\n\n\n\n\nAnswer :\n\n\n\nQ1e\n\nProvide a comment to describe how the daily trend of HomesPowered varies by Name, as visualized in Q1d.\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#part-ii",
    "href": "danl-399-midterm-q.html#part-ii",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Part II",
    "text": "Part II\nFor Part II, use the following data.frame, trashwheel_long.\n\ntrashwheel_long &lt;- trashwheel |&gt; \n  ungroup() |&gt; \n  select(Name, Date, PlasticBottles:SportsBalls) |&gt; \n  pivot_longer(cols = PlasticBottles:SportsBalls,\n               values_to = \"Number\",\n               names_to = \"Trash_Type\") |&gt; \n  arrange(Trash_Type, Date)\n\n\nVariable Description\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nTrash_Type\nnumeric\nType of Trashes\n\n\nNumber\nnumeric\nNumber of trash items\n\n\n\n\n\n\nQ1f\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of log10(Number) varies by Trash_Type and Name.\n\n\nknitr::include_graphics('midterm-figs/figure-html/q1f-1.png')\n\n\n\n\nAnswer :\n\n\n\nQ1g\n\nProvide a comment to describes how the daily trend of log10(Number) varies by Trash_Type and Name, as visualized in Q1f.\n\nAnswer :\n\n\n\nQ1h\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of log10(Number) varies by Trash_Type and Name.\n\n\nknitr::include_graphics('midterm-figs/figure-html/q1h-1.png')\n\n\n\n\nAnswer :\n\n\n\nQ1i\n\nProvide a comment to describe how the distribution of Number varies by Trash_Type and Name, as visualized in Q1f.\n\nIn your comment, please include how the median Number of ‚ÄúCigaretteButts‚Äù varies by Name.\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q2a",
    "href": "danl-399-midterm-q.html#q2a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nUse the color #496d9b for United States, and #fffff0 for the rest of countries."
  },
  {
    "objectID": "danl-399-midterm-q.html#q2b",
    "href": "danl-399-midterm-q.html#q2b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b",
    "text": "Q2b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "danl-399-midterm-q.html#q3a",
    "href": "danl-399-midterm-q.html#q3a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot."
  },
  {
    "objectID": "danl-399-midterm-q.html#q3b",
    "href": "danl-399-midterm-q.html#q3b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b",
    "text": "Q3b\n\nMake a simple comment on the visualization result in Q3a."
  },
  {
    "objectID": "danl-399-midterm-q.html#q4a",
    "href": "danl-399-midterm-q.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization"
  },
  {
    "objectID": "danl-399-midterm-q.html#q4b",
    "href": "danl-399-midterm-q.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?"
  },
  {
    "objectID": "danl-399-midterm-q.html#q4c",
    "href": "danl-399-midterm-q.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don‚Äôt know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?"
  },
  {
    "objectID": "danl-399-midterm-q.html#q4d.",
    "href": "danl-399-midterm-q.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?"
  },
  {
    "objectID": "danl-399-midterm-q.html#variable-description-for-trashwheel",
    "href": "danl-399-midterm-q.html#variable-description-for-trashwheel",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable Description for trashwheel",
    "text": "Variable Description for trashwheel\n\n\n\n\n\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nMonth\ncharacter\nMonth\n\n\nYear\nnumeric\nYear\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nWeight\nnumeric\nWeight in tons\n\n\nVolume\nnumeric\nVolume in cubic yards\n\n\nPlasticBottles\nnumeric\nNumber of plastic bottles\n\n\nPolystyrene\nnumeric\nNumber of polystyrene items\n\n\nCigaretteButts\nnumeric\nNumber of cigarette butts\n\n\nGlassBottles\nnumeric\nNumber of glass bottles\n\n\nPlasticBags\nnumeric\nNumber of plastic bags\n\n\nWrappers\nnumeric\nNumber of wrappers\n\n\nSportsBalls\nnumeric\nNumber of sports balls\n\n\nHomesPowered\nnumeric\nHomes Powered - Each ton of trash equates to on average 500 kilowatts of electricity. An average household will use 30 kilowatts per day."
  },
  {
    "objectID": "danl-399-midterm-q.html#q1a",
    "href": "danl-399-midterm-q.html#q1a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1a",
    "text": "Q1a\n\nProvide an R code to calculate mean and standard deviation of Volume for ‚ÄúMister Trash Wheel‚Äù.\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1b",
    "href": "danl-399-midterm-q.html#q1b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1b",
    "text": "Q1b\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of Weight varies by Name.\n\nThe number of bins in each subplot below is 15.\n\n\n\n\n\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1c",
    "href": "danl-399-midterm-q.html#q1c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1c",
    "text": "Q1c\n\nProvide a comment to describe how the distribution of Weight varies by Name, as visualized in Q1b.\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1d",
    "href": "danl-399-midterm-q.html#q1d",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1d",
    "text": "Q1d\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the monthly trend of HomesPowered varies by Name.\n\n\n\n\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1e",
    "href": "danl-399-midterm-q.html#q1e",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1e",
    "text": "Q1e\n\nProvide a comment to describe how the monthly trend of HomesPowered varies by Name, as visualized in Q1d.\n\nAnswer :\n\nFor Q1f and Q1h, use the following data.frame, trashwheel_long.\n\ntrashwheel_long &lt;- trashwheel |&gt; \n  ungroup() |&gt; \n  select(Name, Date, PlasticBottles:SportsBalls) |&gt; \n  pivot_longer(cols = PlasticBottles:SportsBalls,\n               values_to = \"Number\",\n               names_to = \"Trash_Type\") |&gt; \n  arrange(Trash_Type, Date)"
  },
  {
    "objectID": "danl-399-midterm-q.html#variable-description-for-trashwheel_long",
    "href": "danl-399-midterm-q.html#variable-description-for-trashwheel_long",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable Description for trashwheel_long",
    "text": "Variable Description for trashwheel_long\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nTrash_Type\nnumeric\nType of Trashes\n\n\nNumber\nnumeric\nNumber of trash items"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1f",
    "href": "danl-399-midterm-q.html#q1f",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1f",
    "text": "Q1f\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of log10(Number) varies by Trash_Type and Name.\n\n\n\n\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1g",
    "href": "danl-399-midterm-q.html#q1g",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1g",
    "text": "Q1g\n\nProvide a comment to describes how the daily trend of log10(Number) varies by Trash_Type and Name, as visualized in Q1f.\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1h",
    "href": "danl-399-midterm-q.html#q1h",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1h",
    "text": "Q1h\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of log10(Number) varies by Trash_Type and Name.\n\n\n\n\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-q.html#q1i",
    "href": "danl-399-midterm-q.html#q1i",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1i",
    "text": "Q1i\n\nProvide a comment to describe how the distribution of Number varies by Trash_Type and Name, as visualized in Q1h.\n\nIn your comment, please include how the median Number of ‚ÄúCigaretteButts‚Äù varies by Name.\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html",
    "href": "danl-399-midterm-makeup-q.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "I solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.\nI will not communicate with other students or use unauthorized materials.\nI will uphold the integrity of this exam and demonstrate my own knowledge and abilities.\nBy taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.\nI accept the consequences of any violation of this promise.\n\nStudent‚Äôs Name:\nStudent‚Äôs ID:\nStudent‚Äôs Signature:"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#description-for-variables-in-banks_all",
    "href": "danl-399-midterm-makeup-q.html#description-for-variables-in-banks_all",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks_all",
    "text": "Description for Variables in banks_all\n\nyear: Year\nmonth: Month\nday: Day\nbib6: The number of banks in business in the Sixth District\nbib8: The number of banks in business in the Eighth District\n\n\n\nbanks &lt;- read_csv('https://bcdanl.github.io/data/banks_ms.csv')"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#description-for-variables-in-banks",
    "href": "danl-399-midterm-makeup-q.html#description-for-variables-in-banks",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks",
    "text": "Description for Variables in banks\n\nyear: Year\nmonth: Month\nday: Day\ndistrict: District\n\nbib6: The Sixth District\nbib8: The Eighth District\ncounterfactual: The Sixth District Counterfactual. The counterfactual evolution of the number of banks in the Sixth District if the same number of banks had failed in that district after 1930 as did in the Eighth.\n\nn_banks: The number of banks in business"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#variable-description",
    "href": "danl-399-midterm-makeup-q.html#variable-description",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable description",
    "text": "Variable description\n\ncountry: factor with 142 levels\ncontinent: factor with 5 levels\nyear: ranges from 1952 to 2007 in increments of 5 years\nlifeExp: life expectancy at birth, in years\npop: population\n\ngdpPercap GDP per capita (US$, inflation-adjusted)"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q2a.",
    "href": "danl-399-midterm-makeup-q.html#q2a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a.",
    "text": "Q2a.\n\nProvide ggplot code to replicate the following visualization that describes (1) the time trend of log10(gdpPercap) for each country and (2) the time trend of log10(gdpPercap) for each continent.\n\nThe time trend of log10(gdpPercap) for each continent, depicted by the blue curve, is from the prediction based on the data points of year and log10(gdpPercap).\nThe time trend of log10(gdpPercap) for each country, depicted by the ‚Äúgrey‚Äù curve, is from the data points of year and log10(gdpPercap) for that country."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q2b.",
    "href": "danl-399-midterm-makeup-q.html#q2b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b.",
    "text": "Q2b.\n\nInterpret the visualization in Q2a."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q2c.",
    "href": "danl-399-midterm-makeup-q.html#q2c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2c.",
    "text": "Q2c.\n\nProvide ggplot code to replicate the following visualization that describes (1) the relationship between log10(gdpPercap) and lifeExp in year 2007, excluding the continent ‚ÄúOceania‚Äù.\n\nThe size of dots varies by pop."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q2d.",
    "href": "danl-399-midterm-makeup-q.html#q2d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2d.",
    "text": "Q2d.\n\nInterpret the visualization in Q2c.\n\nIn your interpretation, please explain the deviation of Nigeria from the overall relationship between log10(gdpPercap) and lifeExp in Africa."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#description-for-variables-in-titanic_1",
    "href": "danl-399-midterm-makeup-q.html#description-for-variables-in-titanic_1",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_1",
    "text": "Description for Variables in titanic_1\n\nClass: Social class\nSex: Sex\nAge: Age\nSurvived: Survival status from the Titanic disaster.\n\n\n\n\ntitanic_2 &lt;- read_csv(\"https://bcdanl.github.io/data/titanic_2.csv\")"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#description-for-variables-in-titanic_2",
    "href": "danl-399-midterm-makeup-q.html#description-for-variables-in-titanic_2",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_2",
    "text": "Description for Variables in titanic_2\n\npclass: Social class\nsex: Sex\nage: Age\nsurvived: Survival status from the Titanic disaster."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q3a.",
    "href": "danl-399-midterm-makeup-q.html#q3a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a.",
    "text": "Q3a.\n\nProvide ggplot code with the titanic_1 data.frame to replicate the following visualization that describes how the distribution of Sex varies by Survived, Age, and Class."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q3b.",
    "href": "danl-399-midterm-makeup-q.html#q3b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b.",
    "text": "Q3b.\nMake a detailed comment on the visualization in Q3a."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q3c.",
    "href": "danl-399-midterm-makeup-q.html#q3c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3c.",
    "text": "Q3c.\n\nProvide ggplot code with the titanic_2 data.frame to replicate the following visualization that describes how the distribution of age varies by survived, pclass, and sex.\n\nUse the following colors: #4c3642 and #d399e7.\nThe number of bins in each subplot is 25."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q3d.",
    "href": "danl-399-midterm-makeup-q.html#q3d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3d.",
    "text": "Q3d.\nMake a detailed comment on the visualization in Q3c."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q4a",
    "href": "danl-399-midterm-makeup-q.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q4b",
    "href": "danl-399-midterm-makeup-q.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q4c",
    "href": "danl-399-midterm-makeup-q.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don‚Äôt know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q4d.",
    "href": "danl-399-midterm-makeup-q.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?"
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q1a",
    "href": "danl-399-midterm-makeup-q.html#q1a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1a",
    "text": "Q1a\n\nProvide your R code to create a new data.frame, bank7_1, which contains the observations with only July 1st for each year in the data.frame banks_all."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q1b",
    "href": "danl-399-midterm-makeup-q.html#q1b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1b",
    "text": "Q1b\n\nProvide your R code to calculate the median, mean, and standard deviation of the number of banks in business in each district in the data.frame banks_all."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q1c.",
    "href": "danl-399-midterm-makeup-q.html#q1c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1c.",
    "text": "Q1c.\n\nProvide the ggplot code to replicate the following ggplot figure that describes how the distribution of the number of banks in business varies by district.\n\nBlue color corresponds to the Sixth district.\nRed color corresponds to the Eighth district."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q1d.",
    "href": "danl-399-midterm-makeup-q.html#q1d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1d.",
    "text": "Q1d.\n\nProvide the ggplot code with the data.frame banks to replicate the following ggplot figure that describes the yearly trend of the number of banks in business for each district.\n\nThe dotted line is from the observation with ‚Äúcounterfactual‚Äù district value .\nThe logical condition district != \"counterfactual\" returns TRUE if the value of district is not equal to ‚Äúcounterfactual‚Äù.\nThe logical condition district != \"counterfactual\" returns FALSE if the value of district is equal to ‚Äúcounterfactual‚Äù.\nThe number of banks in business in this figure was measured on July 1st in each year."
  },
  {
    "objectID": "danl-399-midterm-makeup-q.html#q1e.",
    "href": "danl-399-midterm-makeup-q.html#q1e.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1e.",
    "text": "Q1e.\n\nConsidering the context of the data.frame, banks, and the ggplot figure in Q1d, make a detailed comment on the following questions:\n\nDescribe and compare the yearly trend of the number of banks in business depicted in the ggplot figure in Q1d.\nWhat would be the effect of the monetary policy on bank failures in Mississippi in July 1934?\nIn the given ggplot figure in Q1d, point out the magnitude of such effect."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html",
    "href": "danl-399-midterm-makeup-a.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "I solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.\nI will not communicate with other students or use unauthorized materials.\nI will uphold the integrity of this exam and demonstrate my own knowledge and abilities.\nBy taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.\nI accept the consequences of any violation of this promise.\n\nStudent‚Äôs Name:\nStudent‚Äôs ID:\nStudent‚Äôs Signature:"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#description-for-variables-in-banks_all",
    "href": "danl-399-midterm-makeup-a.html#description-for-variables-in-banks_all",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks_all",
    "text": "Description for Variables in banks_all\n\nyear: Year\nmonth: Month\nday: Day\nbib6: The number of banks in business in the Sixth District\nbib8: The number of banks in business in the Eighth District\n\n\n\nbanks &lt;- read_csv('https://bcdanl.github.io/data/banks_ms.csv')"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#description-for-variables-in-banks",
    "href": "danl-399-midterm-makeup-a.html#description-for-variables-in-banks",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in banks",
    "text": "Description for Variables in banks\n\nyear: Year\nmonth: Month\nday: Day\ndistrict: District\n\nbib6: The Sixth District\nbib8: The Eighth District\ncounterfactual: The Sixth District Counterfactual. The counterfactual evolution of the number of banks in the Sixth District if the same number of banks had failed in that district after 1930 as did in the Eighth.\n\nn_banks: The number of banks in business"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q1a",
    "href": "danl-399-midterm-makeup-a.html#q1a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1a",
    "text": "Q1a\n\nProvide your R code to create a new data.frame, bank7_1, which contains the observations with only July 1st for each year in the data.frame banks_all.\n\n\n\nbank7_1 &lt;- banks_all |&gt; \n  filter(month == \"July\")\n\nbank7_1 &lt;- bank7_1 |&gt; \n  filter(day == 1)"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q1b",
    "href": "danl-399-midterm-makeup-a.html#q1b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1b",
    "text": "Q1b\n\nProvide your R code to calculate the median, mean, and standard deviation of the number of banks in business in each district in the data.frame banks_all.\n\n\n\nskim(banks$bib6)\nskim(banks$bib8)"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q1c.",
    "href": "danl-399-midterm-makeup-a.html#q1c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1c.",
    "text": "Q1c.\n\nProvide the ggplot code to replicate the following ggplot figure that describes how the distribution of the number of banks in business varies by district.\n\nBlue color corresponds to the Sixth district.\nRed color corresponds to the Eighth district.\n\n\n\nggplot(banks_all) +\n  geom_freqpoly(aes(x = bib6),\n                 bins = 100, \n                 color = 'blue') +\n  geom_histogram(aes(x = bib8),\n                 bins = 100, \n                 fill = 'red', alpha = .5) +\n  labs(x = \"Number of banks in business\")"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q1d.",
    "href": "danl-399-midterm-makeup-a.html#q1d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1d.",
    "text": "Q1d.\n\nProvide the ggplot code with the data.frame banks to replicate the following ggplot figure that describes the yearly trend of the number of banks in business for each district.\n\nThe dotted line is from the observation with ‚Äúcounterfactual‚Äù district value .\nThe logical condition district != \"counterfactual\" returns TRUE if the value of district is not equal to ‚Äúcounterfactual‚Äù.\nThe logical condition district != \"counterfactual\" returns FALSE if the value of district is equal to ‚Äúcounterfactual‚Äù.\nThe number of banks in business in this figure was measured on July 1st in each year.\n\n\n\nggplot(data = banks |&gt; \n         filter(district != \"counterfactual\"),\n       aes(x = year, y = n_banks)) +\n  geom_line(aes(color = district),\n            show.legend = F) +\n  geom_line(data = banks |&gt; \n              filter(district == \"counterfactual\"),\n            linetype = 2\n            ) +\n  geom_point() +\n  geom_point(data = banks |&gt; \n               filter(district == \"counterfactual\")) +\n  geom_vline(xintercept = 1930 + 5/12, linetype = 3) +\n  geom_label_repel(data = banks |&gt; \n                     filter(year == 1934),\n                   aes(x = 1934, label = district),\n                   box.padding = .75,\n                   nudge_x = .33) +\n  scale_x_continuous(breaks = c(1929, 1930, 1930 + 5/12, 1931, 1932, 1933, 1934, 1935),\n                     label = c('1929', '1930', 'Dec\\n1930', '1931', '1932', '1933', '1934', '1935'),\n                     limits = c(1929,1935)\n                     ) +\n  theme(axis.text.x = element_text(angle = 0))"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q1e.",
    "href": "danl-399-midterm-makeup-a.html#q1e.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1e.",
    "text": "Q1e.\n\nConsidering the context of the data.frame, banks, and the ggplot figure in Q1d, make a detailed comment on the following questions:\n\nDescribe and compare the yearly trend of the number of banks in business depicted in the ggplot figure in Q1d.\nWhat would be the effect of the monetary policy on bank failures in Mississippi in July 1934?\nIn the given ggplot figure in Q1d, point out the magnitude of such effect."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#variable-description",
    "href": "danl-399-midterm-makeup-a.html#variable-description",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable description",
    "text": "Variable description\n\ncountry: factor with 142 levels\ncontinent: factor with 5 levels\nyear: ranges from 1952 to 2007 in increments of 5 years\nlifeExp: life expectancy at birth, in years\npop: population\n\ngdpPercap GDP per capita (US$, inflation-adjusted)"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q2a.",
    "href": "danl-399-midterm-makeup-a.html#q2a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a.",
    "text": "Q2a.\n\nProvide ggplot code to replicate the following visualization that describes (1) the time trend of log10(gdpPercap) for each country and (2) the time trend of log10(gdpPercap) for each continent.\n\nThe time trend of log10(gdpPercap) for each continent, depicted by the blue curve, is from the prediction based on the data points of year and log10(gdpPercap).\nThe time trend of log10(gdpPercap) for each country, depicted by the ‚Äúgrey‚Äù curve, is from the data points of year and log10(gdpPercap) for that country.\n\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap,\n                           group = country) )\n\np + geom_line(color=\"gray70\", aes(group = country)) +\n    geom_smooth(size = 1.1, method = \"loess\", se = FALSE,\n                aes(group = continent)) +\n    facet_wrap(continent ~.) +\n    scale_y_log10(labels=scales::dollar) +\n    theme(axis.text.x = element_text(angle = 45),\n          axis.title.x = element_text(margin = margin(t = 0, b = 0, l = 0, r = 0)))"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q2b.",
    "href": "danl-399-midterm-makeup-a.html#q2b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b.",
    "text": "Q2b.\n\nInterpret the visualization in Q2a."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q2c.",
    "href": "danl-399-midterm-makeup-a.html#q2c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2c.",
    "text": "Q2c.\n\nProvide ggplot code to replicate the following visualization that describes (1) the relationship between log10(gdpPercap) and lifeExp in year 2007, excluding the continent ‚ÄúOceania‚Äù.\n\nThe size of dots varies by pop.\n\n\n\np &lt;- ggplot(data = gapminder |&gt; filter(year == 2007) |&gt; filter(continent != \"Oceania\"),\n            mapping = aes( x = gdpPercap,\n                           y = lifeExp,\n                   color = continent) )\n\np + geom_point(alpha = .5, \n               aes(size = pop)) +\n  geom_smooth(se = T, method = lm, aes(fill = continent)) +\n  ggrepel::geom_text_repel(data = gapminder |&gt; filter(year == 2007, \n                                                      country %in% c(\"United States\", \"China\", \"India\", \"Nigeria\") ),\n                           aes(label = country),\n                           box.padding = 3,\n                           nudge_x = .5,\n                           show.legend = F) +\n  guides(color = guide_legend(label.position = \"bottom\",\n                              keywidth = 3, order = 1),\n         size = guide_legend(label.position = \"bottom\",\n                              keywidth = 3, order = 2),\n         fill = guide_legend(label.position = \"bottom\",\n                              keywidth = 3, order = 1),\n         ) +\n  scale_x_log10(labels = scales::comma) +\n  scale_color_brewer(palette = \"Dark2\") + \n  scale_fill_brewer(palette = \"Dark2\") + \n  scale_size_continuous(breaks = c(10^8, 2*10^8, 4*10^8, 6*10^8), labels = scales::comma) +\n  labs(y = \"Life\\nExpectancy\",\n       x = \"GDP per capita\",\n       size = \"Population\",\n       ) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q2d.",
    "href": "danl-399-midterm-makeup-a.html#q2d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2d.",
    "text": "Q2d.\n\nInterpret the visualization in Q2c.\n\nIn your interpretation, please explain the deviation of Nigeria from the overall relationship between log10(gdpPercap) and lifeExp in Africa."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#description-for-variables-in-titanic_1",
    "href": "danl-399-midterm-makeup-a.html#description-for-variables-in-titanic_1",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_1",
    "text": "Description for Variables in titanic_1\n\nClass: Social class\nSex: Sex\nAge: Age\nSurvived: Survival status from the Titanic disaster.\n\n\n\n\ntitanic_2 &lt;- read_csv(\"https://bcdanl.github.io/data/titanic_2.csv\")"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#description-for-variables-in-titanic_2",
    "href": "danl-399-midterm-makeup-a.html#description-for-variables-in-titanic_2",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Description for Variables in titanic_2",
    "text": "Description for Variables in titanic_2\n\npclass: Social class\nsex: Sex\nage: Age\nsurvived: Survival status from the Titanic disaster."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q3a.",
    "href": "danl-399-midterm-makeup-a.html#q3a.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a.",
    "text": "Q3a.\n\nProvide ggplot code with the titanic_1 data.frame to replicate the following visualization that describes how the distribution of Sex varies by Survived, Age, and Class.\n\n\np &lt;- ggplot(data = titanic_1,\n            mapping = aes(x = Survived, fill = Sex))\n\np + geom_bar(position = \"fill\", color = 'black') +\n  facet_grid(Age ~ Class) +\n  scale_y_percent() +\n  scale_fill_manual(values = c('#cd4f39', '#4f632d')) +\n  labs(y = \"Percent\") +\n  guides(color = guide_legend(label.position = \"bottom\",\n                              keywidth = 3)) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        axis.title.y = element_text(margin = margin(0, 15, 0, 0)))"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q3b.",
    "href": "danl-399-midterm-makeup-a.html#q3b.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b.",
    "text": "Q3b.\nMake a detailed comment on the visualization in Q3a."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q3c.",
    "href": "danl-399-midterm-makeup-a.html#q3c.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3c.",
    "text": "Q3c.\n\nProvide ggplot code with the titanic_2 data.frame to replicate the following visualization that describes how the distribution of age varies by survived, pclass, and sex.\n\nUse the following colors: #4c3642 and #d399e7.\nThe number of bins in each subplot is 25.\n\n\n\nggplot(data = titanic_2 |&gt; \n         filter(!is.na(pclass), !is.na(sex)),\n       ) +\n  geom_freqpoly(aes(x = age, y = stat(count / sum(count)), \n                    color = survived ), \n                bins = 20,\n                linewidth = rel(2)) +\n  scale_color_manual(values = c('#4c3642','#d399e7')) +\n  facet_grid(pclass ~ sex) +\n  scale_y_percent() +\n  labs(y = \"Percent\",\n       color = \"Survived?\") +\n  guides(color = guide_legend(reverse = T,\n                              label.position = \"bottom\",\n                              keywidth = 3)) +\n  theme(legend.position = \"top\",\n        axis.title.y = element_text(margin = margin(0, 15, 0, 0)))"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q3d.",
    "href": "danl-399-midterm-makeup-a.html#q3d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3d.",
    "text": "Q3d.\nMake a detailed comment on the visualization in Q3c."
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q4a",
    "href": "danl-399-midterm-makeup-a.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization\n\n\nbrexit &lt;- brexit |&gt; \n  mutate(\n    region = fct_relevel(region, \n                         \"london\", \"rest_of_south\", \"midlands_wales\", \"north\", \"scot\"),\n    region = fct_recode(region, \n                        London = \"london\", \n                        `Rest of South` = \"rest_of_south\", \n                        `Midlands / Wales` = \"midlands_wales\", \n                        North = \"north\", \n                        Scotland = \"scot\")\n  )\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap( ~ region, \n             nrow = 1, \n             labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q4b",
    "href": "danl-399-midterm-makeup-a.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?\n\n\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, scales = 'free_x',\n    nrow = 1, labeller = label_wrap_gen(width = 12),\n    # ___\n  ) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q4c",
    "href": "danl-399-midterm-makeup-a.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don‚Äôt know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?\n\n\n\nggplot(q4, aes(y = opinion, x = prop,\n               fill = opinion)) +\n  geom_col() +\n  facet_wrap(~region,\n    nrow = 1, labeller = label_wrap_gen(width = 12),\n    # ___\n  ) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = 'Percent', y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  scale_x_continuous(labels = scales::percent) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-makeup-a.html#q4d.",
    "href": "danl-399-midterm-makeup-a.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?\n\n\n\nggplot(q4, aes(y = region, x = prop,\n               fill = opinion)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = 'Percent', y = NULL, fill = 'Opinion'\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  scale_x_continuous(labels = scales::percent) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-1",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-1",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMaps with geospatial data\nData with map drawing, also known as geospatial data, is important for several reasons:\n\nAnalysis: Geospatial data can highlight patterns and relationships across spatial units in the data that may not be apparent in other forms of data.\nCommunication: Maps can be visually striking, especially when the spatial units of the map are familiar entities, like counties in the US."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-2",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-2",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nThe socviz::election dataset has various measures of the vote and vote shares by state.\n\nsocviz::election |&gt; select(state, total_vote,\n                    r_points, pct_trump, party, census) |&gt;\n    sample_n(5)\n\nWe don‚Äôt have to represent spatial data spatially."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-3",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-3",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\n(1)(2)(3)(4)(5)\n\n\nparty_colors &lt;- c(\"#2E74C0\", \"#CB454A\")  # Hex color codes for Dem Blue and Rep Red\np0 &lt;- ggplot(data = filter(election, st != \"DC\"),\n             mapping = aes(x = r_points,\n                           y = reorder(state, r_points),\n                           color = party))\n\n\np1 &lt;- p0 + geom_vline(xintercept = 0, color = \"gray30\") +\n    geom_point(size = 2)\n\np1\n\n\np2 &lt;- p1 + scale_color_manual(values = party_colors)\n\np2\n\n\np3 &lt;- p2 + scale_x_continuous(breaks = c(-30, -20, -10, 0, 10, 20, 30, 40),\n                              labels = c(\"30\\n (Clinton)\", \"20\", \"10\", \"0\",\n                                         \"10\", \"20\", \"30\", \"40\\n(Trump)\"))\np3\n\n\np3 + facet_wrap(~ census, ncol=1, scales=\"free_y\") +\n     guides(color = \"none\") + labs(x = \"Point Margin\", y = \"\") +\n     theme(axis.text=element_text(size=8))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-4",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-4",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nLet us get a data frame of the US state map.\n\nus_states &lt;- map_data(\"state\") # from the 'maps' package\nus_states\nview(us_states)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-5",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-5",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\ngeom_polygon() can be used to visualize map data.\n\np &lt;- ggplot(data = us_states,\n            mapping = aes(x = long, y = lat,\n                          group = group))\n\np + geom_polygon(fill = \"white\", color = \"black\")\n\nA map is a set of lines drawn in the right order on a grid."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-6",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-6",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nLet‚Äôs fill the map.\n\np &lt;- ggplot(data = us_states,\n            aes(x = long, y = lat,\n                group = group, fill = region))\n\np + geom_polygon(color = \"gray90\", size = 0.1) + guides(fill = FALSE)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-7",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-7",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nLet‚Äôs deal with the projection.\n\nBy default, the map is plotted using the venerable Mercator projection.\n\n\np &lt;- ggplot(data = us_states,\n            mapping = aes(x = long, y = lat,\n                          group = group, fill = region))\n\np + geom_polygon(color = \"gray90\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n    guides(fill = FALSE)\n\nWe can transform the default projection used by geom_polygon(), via the coord_map() function.\n\nThe Albers projection requires two latitude parameters, lat0 and lat1."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-8",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-8",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nLet‚Äôs get the election data on to the map\n\nelection$region &lt;- tolower(election$state)\nus_states_elec &lt;- left_join(us_states, election)\n\nIn the map data, us_states, the state names (in a variable named region) are in lower case.\nHere we can create a variable in the election data frame to correspond to this, using the tolower() function to convert the state names.\nIt is important to know your data and variables well enough to check that they have merged properly.\n\nFIPS code is useful in joining the data."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-9",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-9",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\np0 &lt;- ggplot(data = us_states_elec,\n            aes(x = long, y = lat,\n                group = group, fill = party))\n\np0 + geom_polygon(color = \"gray90\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\nWe use our party colors for the fill."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-10",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-10",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\np1 &lt;- p0 + geom_polygon(color = \"gray90\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_manual(values = party_colors) +\n    labs(title = \"Election Results 2016\", fill = NULL)\n\np2 + theme_map()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-11",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-11",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nTo the fill aethetic, let‚Äôs try a continuous measure, such as the percentage of the vote received by Donald Trump (pct_trump).\n\np0 &lt;- ggplot(data = us_states_elec,\n             mapping = aes(x = long, y = lat, group = group, fill = pct_trump))\n\np1 &lt;- p0 + geom_polygon(color = \"gray90\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np1 + labs(title = \"Trump vote\") + theme_map() + labs(fill = \"Percent\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-12",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-12",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nBlue is not the color we want here.\nThe color gradient runs in the wrong direction.\nLet‚Äôs fix these problems using scale_fill_gradient():\n\np2 &lt;- p1 + scale_fill_gradient(low = \"white\", high = \"#CB454A\") +\n        labs(title = \"Trump vote\") \np2 + theme_map() + labs(fill = \"Percent\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-13",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-13",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nFor election results, we might prefer a gradient that diverges from a midpoint.\n\nThe scale_*_gradient2() function gives us a blue-red spectrum that passes through white by default.\nWe can also re-specify the mid-level color along with the high and low colors.\n\n\np0 &lt;- ggplot(data = us_states_elec,\n             mapping = aes(x = long, y = lat, group = group, fill = d_points))\n\np1 &lt;- p0 + geom_polygon(color = \"gray90\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_gradient2() + labs(title = \"Winning margins\") \np2 + theme_map() + labs(fill = \"Percent\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-14",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-14",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nFrom the scale_*_gradient2() function, we can also re-specify the mid-level color along with the high and low colors.\n\np3 &lt;- p1 + scale_fill_gradient2(low = \"red\", \n                                mid = scales::muted(\"purple\"),\n                                high = \"blue\", \n                                breaks = c(-25, 0, 25, 50, 75)) \np3 + theme_map() + labs(fill = \"Percent\", title = \"Winning margins\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-1",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-1",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nAmerica‚Äôs ur-choropleths\n\nChoropleth maps display divided geographical areas or regions that are colored, shaded or patterned in relation to a data variable.\nCounty-level US choropleth maps can be aesthetically pleasing, because of the added detail they bring to a national map.\nThe county-level datasets (county_map and county_data) are included in the socviz library.\nThe county map data frame, county_map, has been processed a little in order to transform it to an Albers projection, and also to relocate (and re-scale) Alaska and Hawaii."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-2",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-2",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nAmerica‚Äôs ur-choropleths\ncounty_map\n\ncounty_data |&gt;\n  select(id, name, state, pop_dens, pct_black) |&gt;\n  sample_n(5)\n\ncounty_full &lt;- \n  left_join(county_map, county_data, by = \"id\")\n\nThe id field is the FIPS code for the county.\npop_dens is population density.\npct_black is percent of African-American population.\nWe merge the data frames using the shared FIPS id column."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-3",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-3",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nMap U.S. county-level data\n\n(1)(2)\n\n\np &lt;- ggplot(data = county_full,\n            mapping = aes(x = long, y = lat,\n                          fill = pop_dens, \n                          group = group))\np1 &lt;- p + geom_polygon(color = \"gray90\", size = 0.05)\np1\n\np1 object produces a legible map, but by default it chooses an unordered categorical layout.\nThis is because the pop_dens variable is not ordered.\npop_dens is an un-ordered discrete variable.\n\n\n\np1 + coord_equal()\n\nThe use of coord_equal() makes sure that the relative scale of our map does not change even if we alter the overall dimensions of the plot."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-4",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-4",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nMap U.S. county-level data\n\n(1)(2)\n\n\np2 &lt;- p1 + scale_fill_brewer(\n  palette = \"Blues\",\n  labels = c(\"0-10\", \"10-50\", \"50-100\", \"100-500\",\n             \"500-1,000\", \"1,000-5,000\", \"&gt;5,000\"))\np2\n\nWe can manually supply the right sort of scale using the scale_fill_brewer() function, together with a nicer set of labels.\n\n\n\np2 + labs(fill = \"Population per\\nsquare mile\") +\n  theme_map() +\n  guides(fill = guide_legend(nrow = 1)) + \n  theme(legend.position = \"bottom\")\n\nWe can also use the guides() function to make sure each element of the key in the legend appears on the same row."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-5",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-5",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nMap U.S. county-level data\n\nWe can now do exactly the same thing for our map of percent African-American population by county.\npct_black is an un-ordered factor variable.\ntable(county_full$pct_black)\n\np &lt;- ggplot(data = county_full,\n            mapping = aes(x = long, y = lat, fill = pct_black, \n                          group = group))\np1 &lt;- p + geom_polygon(color = \"gray90\", size = 0.05) + coord_equal()\np2 &lt;- p1 + scale_fill_brewer(palette=\"Greens\")\n\np2 + labs(fill = \"US Population, Percent Black\") +\n  guides(fill = guide_legend(nrow = 1)) + \n  theme_map() + theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-6",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-6",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nMap U.S. county-level data\n\npop_dens6 dataColor(1)(2)\n\n\n\nLet‚Äôs draw a new county-level choropleths.\nWe have a pop_dens6 variable that divides the population density into six categories.\nWe will map the color scale to the value of variable.\n\n\n\norange_pal &lt;- RColorBrewer::brewer.pal(n = 6, name = \"Oranges\")\norange_pal\norange_rev &lt;- rev(orange_pal)\norange_rev\n\nWe use the RColorBrewer::brewer.pal() function to manually create two palettes.\n\nThe brewer.pal() function produces evenly-spaced color schemes.\n\nWe use the rev() function to reverse the order of a color vector.\n\n\n\npop_p &lt;- ggplot(data = county_full,\n            mapping = aes(x = long, y = lat,\n                          fill = pop_dens6, \n                          group = group))\n\npop_p1 &lt;- pop_p + geom_polygon(color = \"gray90\", size = 0.05) +\n  coord_equal()\npop_p2 &lt;- pop_p1 + scale_fill_manual(values = orange_pal)\n\npop_p2 + labs(title = \"Population Density\",\n              fill = \"People per square mile\") +\n    theme_map() + theme(legend.position = \"bottom\")\n\n\npop_p2_rev &lt;- pop_p1 + scale_fill_manual(values = orange_rev)\n\npop_p2_rev + labs(title = \"Reverse-coded Population Density\",\n              fill = \"People per square mile\") +\n    theme_map() + theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-7",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-7",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nMap U.S. county-level data\n\n(1)scale_fill_gradient*(2)\n\n\n\nLet‚Äôs consider a county map of a continuous variable, such as per_gop_2016.\nCheck class(county_full$per_gop_2016).\n\ngop_p &lt;- ggplot(data = county_full,\n                mapping = aes(x = long, y = lat,\n                              fill = per_gop_2016, \n                              group = group))\n\ngop_p1 &lt;- gop_p + geom_polygon(color = \"gray70\", size = 0.05) + coord_equal()\ngop_p1\n\n\n\nFor a continuous variable, we can use scale_fill_gradient(), scale_fill_gradient2(), or scale_fill_gradient2() function:\n\nscale_fill_gradient() produces a two-color gradient.\n\nscale_fill_gradient2() produces a three-color gradient with specified midpoint.\nscale_fill_gradientn() produces an n-color gradient.\nFor scale_fill_gradient2(), choose the value and color for midpoint carefully.\n\n\n\ngop_p2 &lt;- gop_p1 + scale_fill_gradient2( \n  low = '#2E74C0',  # from party_colors for DEM\n  mid = '#FFFFFF',  # transparent white\n  high = '#CB454A',  # from party_colors for GOP\n  na.value = \"grey50\",\n  midpoint = .5)\n\ngop_p2 + labs(title = \"US Presidential Election 2016\",\n              fill = \"Trump vote share\") +\n  theme_map() + theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-8",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#choropleth-maps-8",
    "title": "Lecture 7",
    "section": "Choropleth Maps",
    "text": "Choropleth Maps\nSmall-multiple maps\n\nNY dataviridismapfacet\n\n\n\nSometimes we have geographical data with repeated observations over time.\nA common case is to have a country- or state-level measure observed over a period of years (Panel data).\nLet‚Äôs consider consider the poverty rate determined by level of educational attainment in NY.\n\nNY_socioecon_geo_poverty &lt;- read_csv(\n  'https://bcdanl.github.io/data/NY_socioecon_geo_poverty.csv'\n)\n\n\nlibrary(viridis)\n\nThe viridis colors run in low-to-high sequences and combines perceptually uniform colors with easy-to-see, easily-contrasted hues along their scales.\n\nThe scale_fill_viridis_c() function is for continuous data.\nThe scale_fill_viridis_d() function is for discrete data.\n\n\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c04_058 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\np2 + facet_wrap(~ year, ncol = 3) +\n    theme(legend.position = \"bottom\",\n          strip.background = element_blank()) +\n    labs(fill = \"Poverty rate in NY (%)\",\n         title = \"Poverty rate for the male population 25 years and over \\nfor whom the highest educational attainment is bachelor's degree\")\n\nWe facet the maps just like any other small-multiple with facet_wrap()."
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps",
    "title": "Lecture 7",
    "section": "Hexbin Maps",
    "text": "Hexbin Maps"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-1",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-1",
    "title": "Lecture 7",
    "section": "Hexbin Maps",
    "text": "Hexbin Maps\nStatebins\n\n(1)(2)\n\n\n\nAs an alternative to state-level choropleths, we can consider statebins.\n\nlibrary(statebins)  # install.packages(\"statebins\")\np &lt;- ggplot(election, aes( state = state, fill = pct_trump ) )\np1 &lt;- p +  geom_statebins(lbl_size = 5,\n                          border_col = \"grey90\", border_size = 1)\np2 &lt;- p1 + labs(fill = \"Percent Trump\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.45, 1) ) +\n  theme( legend.direction=\"horizontal\" )\np2\n\n\np2 + scale_fill_gradient2( \n  low = '#2E74C0',  # from party_colors for DEM\n  mid = '#FFFFFF',  # transparent white\n  high = '#CB454A',  # from party_colors for GOP\n  na.value = \"grey50\",\n  midpoint = 50)   # set the midpoint value"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-2",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-2",
    "title": "Lecture 7",
    "section": "Hexbin Maps",
    "text": "Hexbin Maps\nStatebins\n\n(1)(2)\n\n\n\nLet‚Äôs remove DC and use scale_fill_gradient().\n\np &lt;- ggplot(data = filter(election, st != \"DC\")  , \n            mapping = aes(state = state, fill = pct_clinton)) \np1 &lt;- p + geom_statebins(lbl_size = 5,\n                         border_col = \"grey90\",\n                         border_size = 1)\n\n\np2 &lt;- p1 + labs(fill = \"Percent Clinton\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.45, 1) ) +\n  theme( legend.direction=\"horizontal\" )\np2\n\np2 + scale_fill_gradient( \n    low = '#FFFFFF',  # transparent white\n    high = '#2E74C0',  # from party_colors for DEM\n    na.value = \"grey50\")   # set the midpoint value"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-3",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-3",
    "title": "Lecture 7",
    "section": "Hexbin Maps",
    "text": "Hexbin Maps\nStatebins\n\n(1)(2)\n\n\n\nLet‚Äôs use scale_fill_manual() to fill color by party.\nlegend_position allows for adjusting a coordinate for the legend position.\n\np &lt;- ggplot(data = election  , \n            mapping = aes(state = state, fill = party)) \np1 &lt;- p + geom_statebins(lbl_size = 5,\n                         border_col = \"grey90\",\n                         border_size = 1)\n\n\np2 &lt;- p1 + labs(fill = \"Winner\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.25, 1) ) +\n  theme( legend.direction=\"horizontal\",\n         legend.title = element_text(size=30),\n         legend.text = element_text(size=30) )\n\np2 + scale_fill_manual( values = c(Republican = \"darkred\", \n                                   Democratic = \"royalblue\"))"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-4",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#hexbin-maps-4",
    "title": "Lecture 7",
    "section": "Hexbin Maps",
    "text": "Hexbin Maps\nStatebins\n\n(1)(2)\n\n\n\nLet‚Äôs discretize a continuous variable using scale_fill_gradient() with breaks.\n\np &lt;- ggplot(data = election  , \n            mapping = aes(state = state, fill=pct_trump)) \np1 &lt;- p + geom_statebins(lbl_size = 5,\n                         border_col = \"grey90\",\n                         border_size = 1)\n\n\np2 &lt;- p1 + labs(fill = \"Percent Trump\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.2, 1) ) +\n  theme( legend.direction=\"horizontal\")\n\np2 + scale_fill_gradient(breaks = c(5, 21, 41, 48, 57),\n                         labels = c(\"&lt; 5\", \"5-21\", \n                                    \"21-41\", \"41-58\", \"&gt; 57\"),\n                         low = \"#f9ecec\", high = \"#CB454A\") +\n  guides(fill = guide_legend())"
  },
  {
    "objectID": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-15",
    "href": "danl-lec/danl-399-lec-07-2024-0405.html#draw-maps-15",
    "title": "Lecture 7",
    "section": "Draw maps",
    "text": "Draw maps\nMap U.S. state-level data\n\nIf you take a look at the gradient scale for this first ‚Äúpurple America‚Äù map, p3, you‚Äôll see that it extends very high on the Blue side.\n\nThis is because Washington DC is included in the data.\n\nIf we omit Washington DC, we‚Äôll see that our color scale shifts.\n\np0 &lt;- ggplot(data = filter(us_states_elec,\n                           region != \"district of columbia\"),\n             aes(x = long, y = lat, group = group, fill = d_points))\n\np3 &lt;- p1 + scale_fill_gradient2(low = \"red\", \n                                mid = scales::muted(\"purple\"),\n                                high = \"blue\", \n                                breaks = c(-25, 0, 25, 50, 75)) \np3 + theme_map() + labs(fill = \"Percent\", title = \"Winning margins\", caption = \"DC is omitted.\")"
  },
  {
    "objectID": "danl-class/danl-399-note-08-2024-0405.html",
    "href": "danl-class/danl-399-note-08-2024-0405.html",
    "title": "Lecture 7",
    "section": "",
    "text": "election data\n\nelection &lt;- socviz::election\n\n\nparty_colors &lt;- c(\"#2E74C0\", \"#CB454A\")\n\nelection |&gt; filter(st != \"DC\") |&gt; \n  ggplot(aes(x = r_points,\n             y = reorder(state, r_points),\n             color = party)) +\n  geom_point(size = rel(2)) +\n  geom_vline(xintercept = 0, color = \"gray30\") +\n  scale_color_manual(values = party_colors) +\n  scale_x_continuous(breaks = c(-30, -20, -10, 0, 10, 20, 30, 40),\n                              labels = c(\"30\\n (Clinton)\", \"20\", \"10\", \"0\",\n                                         \"10\", \"20\", \"30\", \"40\\n(Trump)\")) +\n  facet_wrap(census ~ ., scales = \"free_y\") +\n  guides(color = \"none\") + \n  labs(x = \"Point Margin\", y = \"\") +\n  theme(axis.text=element_text(size=8))\n\n\n\n\n\n\nMap Data\n\nus_states &lt;- map_data(\"state\")\nus_states |&gt; count(group) |&gt; nrow()\n\n[1] 63\n\nus_states |&gt; count(region) \n\n                 region    n\n1               alabama  202\n2               arizona  149\n3              arkansas  312\n4            california  516\n5              colorado   79\n6           connecticut   91\n7              delaware   94\n8  district of columbia   10\n9               florida  872\n10              georgia  381\n11                idaho  233\n12             illinois  329\n13              indiana  257\n14                 iowa  256\n15               kansas  113\n16             kentucky  397\n17            louisiana  650\n18                maine  399\n19             maryland  566\n20        massachusetts  286\n21             michigan  830\n22            minnesota  373\n23          mississippi  382\n24             missouri  315\n25              montana  238\n26             nebraska  208\n27               nevada   70\n28        new hampshire  125\n29           new jersey  205\n30           new mexico   78\n31             new york  495\n32       north carolina  782\n33         north dakota  105\n34                 ohio  238\n35             oklahoma  284\n36               oregon  236\n37         pennsylvania  172\n38         rhode island   66\n39       south carolina  304\n40         south dakota  166\n41            tennessee  289\n42                texas 1088\n43                 utah   59\n44              vermont  129\n45             virginia  734\n46           washington  545\n47        west virginia  373\n48            wisconsin  388\n49              wyoming   68\n\nus_states_distinct &lt;- us_states |&gt; \n  distinct(group, region)\n\n\nus_states |&gt; \n  ggplot(aes(x = long, y = lat,\n             group = group)) +\n  geom_polygon(fill = \"white\", color = \"black\")\n\n\n\n\n\nus_states |&gt; \n  ggplot(aes(x = long, y = lat,\n             group = group,\n             fill = region)) +\n  geom_polygon(color = \"gray90\",\n               size = 0.1) +\n  guides(fill = \"none\") +\n  ggthemes::theme_map()\n\n\n\n\n\nus_states |&gt; \n  ggplot(aes(x = long, y = lat,\n             group = group,\n             fill = region)) +\n  geom_polygon(color = \"gray90\",\n               size = 0.1) +\n  guides(fill = \"none\") + \n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map()\n\n\n\n\n\nelection$region &lt;- tolower(election$state)\n\nus_states_elec &lt;- us_states |&gt; \n  left_join(election)\n\n\nus_states_elec |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = party)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_manual(values = party_colors) +\n  guides(fill = \"none\")  +\n  labs(title = \"Election Results 2016\", fill = NULL) +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  )\n        )\n\n\n\n\n\nus_states_elec |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pct_trump)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_gradient(low = \"white\", high = \"#CB454A\") +\n  labs(title = \"Election Results 2016\", \n       subtitle = \"Trump vote\",\n       fill = \"Percent\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,5,0)\n                                  ),\n        plot.subtitle = element_text(hjust = 0.5,\n                                  size = rel(1.25),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  ),\n        \n        )\n\n\n\n\n\nus_states_elec |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = d_points)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_gradient2() +\n  labs(title = \"Election Results 2016\", \n       subtitle = \"\",\n       fill = \"Percent\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,5,0)\n                                  ),\n        plot.subtitle = element_text(hjust = 0.5,\n                                  size = rel(1.25),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  ),\n        \n        )\n\n\n\n\n\nus_states_elec |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = d_points)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_gradient2(low = \"#CB454A\", mid = \"white\", high = \"#2E74C0\") +\n  labs(title = \"Election Results 2016\", \n       subtitle = \"\",\n       fill = \"Percent\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,5,0)\n                                  ),\n        plot.subtitle = element_text(hjust = 0.5,\n                                  size = rel(1.25),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  ),\n        \n        )\n\n\n\n\n\nus_states_elec |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = d_points)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_gradient2(low = \"red\", \n                                mid = scales::muted(\"purple\"),\n                                high = \"blue\", \n                                breaks = c(-25, 0, 25, 50, 75)) +\n  labs(title = \"Election Results 2016\", \n       subtitle = \"Winning margins\",\n       fill = \"Percent\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,5,0)\n                                  ),\n        plot.subtitle = element_text(hjust = 0.5,\n                                  size = rel(1.25),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  ),\n        \n        )\n\n\n\n\n\nus_states_elec |&gt; \n  filter(region != \"district of columbia\") |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = d_points)) +\n  geom_polygon(color = 'grey90', size = .1) +\n  scale_fill_gradient2(low = \"red\", \n                                mid = scales::muted(\"purple\"),\n                                high = \"blue\", \n                                breaks = c(-40, -30, -20, -10, 0, 10, 20)) +\n  labs(title = \"Election Results 2016\", \n       subtitle = \"Winning margins\",\n       fill = \"Percent\") +\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +\n  theme_map() +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  size = rel(2),\n                                  face = \"bold\",\n                                  margin = margin(0,0,5,0)\n                                  ),\n        plot.subtitle = element_text(hjust = 0.5,\n                                  size = rel(1.25),\n                                  face = \"bold\",\n                                  margin = margin(0,0,-10,0)\n                                  ),\n        \n        )\n\n\n\n\n\n\nChoropleth Maps\n\ncounty_map &lt;- socviz::county_map\ncounty_data &lt;- county_data\n\ncounty_full &lt;- county_map |&gt; \n  left_join(county_data,\n            by = \"id\")\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pop_dens)) +\n  geom_polygon(color = 'grey90', size = .05) +\n  theme_map()\n\n\n\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pop_dens)) +\n  geom_polygon(color = 'grey90', size = .05) +\n  coord_equal() +\n  theme_map()\n\n\n\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pop_dens)) +\n  geom_polygon(color = 'grey90', size = .05)+ \n  scale_fill_brewer(\n    palette = \"Blues\",\n    labels = c(\"0-10\", \"10-50\", \"50-100\", \"100-500\",\n               \"500-1,000\", \"1,000-5,000\", \"&gt;5,000\")) +\n  coord_equal() +\n  theme_map()\n\n\n\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pop_dens)) +\n  geom_polygon(color = 'grey90', size = .05)+ \n  scale_fill_brewer(\n    palette = \"Greens\") +\n  coord_equal() +\n  labs(fill = \"US Population, Percent Black\") +\n  guides(fill = guide_legend(nrow = 1)) + \n  theme_map() + \n  theme(legend.position = \"top\")\n\n\n\n\n\norange_pal &lt;- RColorBrewer::brewer.pal(n = 6, name = \"Oranges\")\norange_pal\n\n[1] \"#FEEDDE\" \"#FDD0A2\" \"#FDAE6B\" \"#FD8D3C\" \"#E6550D\" \"#A63603\"\n\norange_rev &lt;- rev(orange_pal)\norange_rev\n\n[1] \"#A63603\" \"#E6550D\" \"#FD8D3C\" \"#FDAE6B\" \"#FDD0A2\" \"#FEEDDE\"\n\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = pop_dens6)) +\n  geom_polygon(color = 'grey90', size = .05)+ \n  scale_fill_manual(\n    values = orange_rev) +\n  coord_equal() +\n  labs(title = \"Population Density\",\n       fill = \"People per square mile\") +\n  guides(fill = guide_legend(nrow = 1)) + \n  theme_map() + \n  theme(legend.position = \"top\")\n\n\n\n\n\ncounty_full |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = per_gop_2016)) +\n  geom_polygon(color = 'grey90', size = .05) + \n  scale_fill_gradient2( \n    low = '#2E74C0',  # from party_colors for DEM\n    mid = '#FFFFFF',  # transparent white\n    high = '#CB454A',  # from party_colors for GOP\n    na.value = \"grey50\",\n    midpoint = .5) +\n  coord_equal() +\n  labs(title = \"US Presidential Election 2016\",\n       fill = \"Trump vote share\") +\n  theme_map() + \n  theme(legend.position = \"top\")\n\n\n\n\n\n\nFactted Maps\n\nNY_socioecon_geo_poverty &lt;- read_csv(\n  'https://bcdanl.github.io/data/NY_socioecon_geo_poverty.csv'\n)\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c04_058 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\n\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c04_055 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\n\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c06_058 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\n\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c06_055 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\n\n\n\np &lt;- ggplot(data = NY_socioecon_geo_poverty,\n            mapping = aes(x = long, y = lat, group = group, \n                          fill = c04_055 ))\n  \np1 &lt;- p + geom_polygon(color = \"grey\", size = 0.1) +\n    coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) \n\np2 &lt;- p1 + scale_fill_viridis_c(option = \"plasma\") + theme_map() \np2\n\n\n\n\n\np2 + facet_wrap(~ year, ncol = 3) +\n    theme(legend.position = \"bottom\",\n          strip.background = element_blank()) +\n    labs(fill = \"Poverty rate in NY (%)\",\n         title = \"Poverty rate for the male population 25 years and over \\nfor whom the highest educational attainment is bachelor's degree\")\n\n\n\n\n\n\nState Bins\n\nlibrary(statebins)  # install.packages(\"statebins\")\np &lt;- ggplot(election, aes( state = state, fill = pct_trump ) )\np1 &lt;- p +  geom_statebins(lbl_size = 5,\n                          border_col = \"grey90\", border_size = 1)\np2 &lt;- p1 + labs(fill = \"Percent Trump\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.45, 1) ) +\n  theme( legend.direction = \"horizontal\" )\np2\n\n\n\n\n\nlibrary(statebins)  # install.packages(\"statebins\")\np &lt;- ggplot(election, aes( state = state, fill = pct_trump ) )\np1 &lt;- p +  geom_statebins(lbl_size = 5,\n                          border_col = \"grey90\", border_size = 1)\np2 &lt;- p1 + labs(fill = \"Percent Trump\") +\n  coord_equal() + \n  scale_fill_gradient2( \n    low = '#2E74C0',  # from party_colors for DEM\n    mid = '#FFFFFF',  # transparent white\n    high = '#CB454A',  # from party_colors for GOP\n    na.value = \"grey50\",\n    midpoint = 50) +  # set the midpoint value \n  theme_statebins( legend_position = c(.45, 1) ) +\n  theme( legend.direction = \"horizontal\" )\np2\n\n\n\n\n\nlibrary(statebins)  # install.packages(\"statebins\")\np &lt;- ggplot(data = election |&gt; filter(st != \"DC\"), \n            aes( state = state, fill = pct_trump ) )\np1 &lt;- p +  geom_statebins(lbl_size = 5,\n                          border_col = \"grey90\", border_size = 1)\np2 &lt;- p1 + labs(fill = \"Percent Trump\",\n                caption = \"DC excluded\") +\n  coord_equal() + \n  scale_fill_gradient2( \n    low = '#2E74C0',  # from party_colors for DEM\n    mid = '#FFFFFF',  # transparent white\n    high = '#CB454A',  # from party_colors for GOP\n    na.value = \"grey50\",\n    midpoint = 50) +  # set the midpoint value \n  theme_statebins( legend_position = c(.45, 1) ) +\n  theme( legend.direction = \"horizontal\" )\np2\n\n\n\n\n\np &lt;- ggplot(data = election  , \n            mapping = aes(state = state, fill=pct_trump)) \np1 &lt;- p + geom_statebins(lbl_size = 5,\n                         border_col = \"grey90\",\n                         border_size = 1)\n\np2 &lt;- p1 + labs(fill = \"Percent Trump\") +\n  coord_equal() +\n  theme_statebins( legend_position = c(.2, 1) ) +\n  theme( legend.direction=\"horizontal\")\n\np2 + scale_fill_gradient(breaks = c(5, 21, 41, 48, 57),\n                         labels = c(\"&lt; 5\", \"5-21\", \n                                    \"21-41\", \"41-58\", \"&gt; 57\"),\n                         low = \"#f9ecec\", high = \"#CB454A\") +\n  guides(fill = guide_legend())\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-1",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-1",
    "title": "Lecture 8",
    "section": "Interactive ggplot",
    "text": "Interactive ggplot\nplotly::ggplotly()\n\n(1)(2)\n\n\n\nplotly is an alternative to ggplot with a relatively easy to learn syntax for generating many of the same kinds of plots.\nplotly is mainly for the interactive figures of visualization.\n\nWe will focus only on plotly::ggplotly().\nggplotly() interacts with ggplot objects to make those figures interactive.\n\n\n\n\n\n# install.packages(\"plotly\")\nlibrary(plotly)\ndat &lt;- data.frame(cond = rep(c(\"A\", \"B\"), each = 10),\n                  xvar = 1:20 + rnorm(20, sd=3),\n                  yvar = 1:20 + rnorm(20, sd=3))\n\np &lt;- ggplot(dat, aes(x = xvar, y = yvar)) +\n  geom_point(shape=1)      # Use hollow circles\nfig &lt;- ggplotly(p)\nfig"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-2",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-2",
    "title": "Lecture 8",
    "section": "Interactive ggplot",
    "text": "Interactive ggplot\nplotly::ggplotly()\n\ndatarecode()ggplotly\n\n\n\nConsider the static relationship between seniority and legislative effectiveness using CCES data.\n\ncces &lt;- read_csv(url(\"https://bcdanl.github.io/data/cces.csv\"))\n\n\n\nWe can use recode() to create a new variable corresponding to other factor variable.\n\nHere we summarize the number of Democrats and Republicans in a series of years.\nThere are usually 435 seats in total in the House of Representatives.\n\nVariable les is a score for legislative effectiveness.\n\nIt measures how productive members of Congress are at making laws.\n\n\ncces &lt;- cces |&gt; \n  mutate(party = recode(dem, `1` = \"Democrat\", `0` = \"Republican\"))\n\n\np &lt;- ggplot(cces, aes(x = seniority, y = les,\n                      color = party))+\n  geom_point()+\n  scale_color_manual(values=c(\"blue\",\"red\")) +\n  labs(x = \"Seniority\", y = \"Leg. Effectiveness\")\n\np1 &lt;- ggplotly(p)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-3",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-3",
    "title": "Lecture 8",
    "section": "Interactive ggplot",
    "text": "Interactive ggplot\nhtmlwidgets::saveWidget()\n\nhtmlwidgets::saveWidget() saves the interactive ggplot object as an *.html file.\n\n# install.packages(\"htmlwidgets\")\nlibrary(htmlwidgets)\nsaveWidget(p1, \"fig.html\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-4",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-4",
    "title": "Lecture 8",
    "section": "Interactive ggplot",
    "text": "Interactive ggplot\nggiraph\n\nggiraph is a R package that allows us to create dynamic ggplot graphs.\n\nThis allows us to add tooltips, hover effects and JavaScript actions to the graphics.\n\nThe package also allows the selection of graphical elements when used in shiny applications.\n\nInteractivity is added to ggplot geometries, legends and theme elements, via the following aesthetics:\n\ntooltip: tooltips to be displayed when mouse is over elements.\nonclick: JavaScript function to be executed when elements are clicked.\ndata_id: id to be associated with elements (used for hover and click actions)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-5",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#interactive-ggplot-5",
    "title": "Lecture 8",
    "section": "Interactive ggplot",
    "text": "Interactive ggplot\nggiraph\n\n(1)(2)(3)\n\n\n\nThe things we need to know to create a ggiraph interactive graphic:\n\nInstead of using geom_point, use geom_point_interactive.\nProvide at least one of the aesthetics, tooltip, data_id and/or onclick, to create interactive elements.\nCall function girafe with the ggplot object so that the graphic is translated as a web interactive graphics.\n\n\n\n\n# install.packages(\"ggiraph\")\nlibrary(ggiraph)\ndata &lt;- mtcars\ndata$carname &lt;- row.names(data)\n\ngg_point &lt;- ggplot(data = data) +\n  geom_point_interactive(aes(x = wt, y = qsec, \n                             color = disp,\n                             tooltip = carname, \n                             data_id = carname)) + \n  theme_minimal()\n\ngg_point\n\n\np2 &lt;- girafe(ggobj = gg_point)\np2\n\nsaveWidget(p2, \"girafe_fig.html\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\n\nConsider the relationship between cyl and mpg from mtcars.\n\ndata(mtcars)\n\np &lt;- ggplot(data = mtcars,\n       mapping = aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot()\n\np"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-1",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-1",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\n\nLet us consider how the relationship between cyl and mpg vary by gear.\n\np + facet_wrap(~gear)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-2",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-2",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\n\ngganimate turn our ggplot visualizations into moving images.\n\ngganimate takes a ggplot figure and creates many different versions of it by changing a single parameter in the data.\n\n\nmy_anim &lt;- p + \n  transition_states(gear)\n\nmy_anim"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-3",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-3",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-4",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-4",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\ntransition_states()\n\ntransition_states() is intended to use primarily with categorical variables.\n\nYou can control the link for each transition and the amount of time spent on each of the states using the transition_length and state_length arguments.\n\n\nmy_anim2 &lt;- p + \n  transition_states(gear,\n    transition_length = 3,  # relative length\n    state_length = 2)  # relative length\n\nmy_anim2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-5",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-5",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nCooperative Congressional Election Survey\n\nCooperative Congressional Election Survey (CCES) is a 50,000+ person national stratified sample survey.\nWe can use recode() to create a new variable corresponding to other factor variable.\nHere we summarize the number of Democrats and Republicans in a series of years.\nThere are usually 435 seats in total in the House of Representatives.\n\ncces &lt;- read_csv(url(\"https://bcdanl.github.io/data/cces.csv\"))\ncces &lt;- cces |&gt; \n  mutate(party = recode(dem,`1`=\"Democrat\",`0`=\"Republican\"))\n\ncong_dat &lt;- cces |&gt; \n  group_by(year, party) |&gt;\n  summarise( seats =n())"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-6",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-6",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nCooperative Congressional Election Survey\np &lt;- ggplot(cong_dat, \n            aes(x = year, y= seats, \n                fill = party)) +\n  geom_col() +\n  geom_hline(yintercept = 217) +  # threshold for having a majority of seats in the house.\n  scale_fill_manual(values=c(\"blue\",\"red\"))\n\np"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-7",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-7",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\ntransition_time()\n\ntransition_time() is intended for time-series data like hours, minutes, days, weeks months, years, etc.\n\nanim2 &lt;- p + transition_time(year)\n\nanim2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-8",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-8",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nCooperative Congressional Election Survey\n\nLet‚Äôs consider a scatter plot of seniority against all_pass.\n\nVariable seniority is about how long a member has been in Congress.\nVariable all_pass is about how many bills a member passed"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-9",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-9",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nCooperative Congressional Election Survey\np &lt;- ggplot() + \n  geom_jitter(data = filter(cces, \n                            congress==115 & party==\"Democrat\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_jitter(data = filter(cces, \n                            congress==115 & party==\"Republican\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_smooth(data = filter(cces, \n                            congress==115 & party==\"Democrat\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_smooth(data = filter(cces, \n                            congress==115 & party==\"Republican\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  scale_color_manual(values=c(\"blue\",\"red\"))\n\np"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-10",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-10",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\ntransition_layers()\n\ntransition_layers() allow for building up a plot layer by layer with an animation.\n\n\nanim2 &lt;- p + transition_layers()\n\nanim2"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-11",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-11",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nenter_*() and exit_*()\n\nenter_*() and exit_*() allow for controlling the entering and exiting in gganimate.\n\n*_fade() will set the alpha value to zero making the elements fade in/out during the transition.\n\n\nanim &lt;- ggplot(mtcars, aes(factor(cyl), mpg)) +\n  geom_boxplot() +\n  transition_states(factor(cyl))\n\n# Fade-in, fade-out\nanim1 &lt;- anim +\n  enter_fade() +\n  exit_fade()\n\nanim1"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-12",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-12",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nshadow_*()\n\n(1)(2)\n\n\n\nshadow_*() allows you to retain previous or preview future frames of the animation.\nshadow_wake() shows preceding frames with gradual falloff.\n\nalpha is for transparency modification of the wake.\nwrap should the shadow wrap around, so that the first frame will get shadows from the end of the animation.\n\nThere are also shadow_mark(), shadow_null(), and shadow_trail().\n\n\n\np &lt;- ggplot(cong_dat,\n                aes(x = year, y = seats, fill = party)) +\n  geom_bar(stat = \"identity\") +\n  geom_hline(yintercept = 217) +\n  scale_fill_manual(values = c(\"blue\",\"red\"))\n\n\nanim3 &lt;- p + transition_time(year) +\n  shadow_wake(wake_length = 1,\n              alpha = TRUE,\n              wrap = TRUE)\n\nanim3"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-13",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-13",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nGapminder\nlibrary(gapminder)\np &lt;- gapminder |&gt;\n  ggplot() + \n    geom_point(aes(x = gdpPercap, y = lifeExp, \n                   color = continent, size = pop), \n               alpha = 0.75) + \n  theme_minimal() + theme(legend.position = \"top\") + \n  guides(size = \"none\") + \n  labs(x = \"GDP per Capita\", y = \"Life Expetancy\", color = \"\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-14",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-14",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nGapminder\nHere is with transition_time().\nlibrary(gganimate)\np +\n  transition_time(year)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-15",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-15",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nlabs(title = \"TIME_VARIABLE: {frame_time}\")\n\nWe can indicate the number of frame on the transition using labs()\n\np +\n  transition_time(year) +\n  labs(title = \"Year: {frame_time}\")"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-16",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-16",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nWith geom_text()\n\nIt is much more visually fascinating to include the data on the same graph with an extra ggplot layer.\n\np +\n  geom_text(aes(x = min(gdpPercap), \n                y = min(lifeExp), \n                label = as.factor(year)) , \n            hjust=-2, vjust = -0.2, alpha = 0.2,  \n            color = \"gray\", size = 20) +\n  transition_states(as.factor(year), state_length = 0)\n\nstate_length allows us to control for how long will pause before changing to the new state."
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-17",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-17",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\ntransition_reveal(year)\ntransition_reveal(year) is adding each year of the data on top of ‚Äòold‚Äô data.\ngapminder |&gt;\n  filter(country == \"United States\") |&gt;\n  ggplot(aes(x = year, y = pop)) + \n  geom_point() + geom_line() +\n  theme_minimal() +\n  transition_reveal(year)"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-18",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-18",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nview_follow()\n\nIf we want to better see how the variables grow, it is better to adjust the scale in each frame.\n\nFor this, we can use the view_follow() function.\n\n\ngapminder |&gt;\n  filter(country == \"United States\") |&gt;\n  ggplot(aes(x = year, y = pop)) + \n  geom_point() + geom_line() + \n  geom_text(aes(x = min(year), y = min(pop), \n                label = as.factor(year)) , \n            hjust=-2, vjust = -0.2, alpha = 0.5,  \n            color = \"gray\", size = 20) +\n  theme_minimal() +\n  transition_reveal(year) + \n  view_follow()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-19",
    "href": "danl-lec/danl-399-lec-08-2024-0412.html#gganimate-19",
    "title": "Lecture 8",
    "section": "gganimate",
    "text": "gganimate\nBar Chart Race\n\nRenderingRankingRacessave\n\n\n\nFrames and duration are the key for a good quality of animation.\nWe can adjust several key elements of our animations, such as:\n\nThe width and height of the animation to create an animation.\nDuration, number of frames, and number of frames per second (fps): this will make us the animation see fluently.\n\nThe fps parameter is recommended to be higher than 12.\n\nOutput file format: if we don‚Äôt want to create a gif, you can also create a video too.\n\n\n\n\n\nCalculate the ranking of gdpPercap for each year:\n\ngapminder_sum &lt;- gapminder |&gt;\n  group_by(year) |&gt;\n  arrange(year, desc(gdpPercap)) |&gt;\n  mutate(ranking = row_number()) |&gt;\n  filter(ranking &lt;=15)\n\n\nanim &lt;- gapminder_sum |&gt;\n  ggplot() +\n  geom_col(aes(x = ranking, y = gdpPercap, fill = country)) +\n  geom_text(aes(x = ranking, y = gdpPercap, label = round(gdpPercap, 0)), \n            hjust=-0.1) +\n  geom_text(aes(x = ranking, y = 0 , \n                label = country), hjust=1.1) + \n  geom_text(aes(x = 15, \n                y = max(gdpPercap), \n                label = as.factor(year)), \n            vjust = 0.2, alpha = 0.5,  color = \"gray\", size = 20) +\n  coord_flip(clip = \"off\", expand = FALSE) + \n  scale_x_reverse() +\n  theme_minimal() + \n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"none\",\n    axis.ticks.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.margin = margin(1, 4, 1, 3, \"cm\")\n  ) +\n  transition_states(year, state_length = 0, transition_length = 2) +\n  enter_fade() +\n  exit_fade() + \n  ease_aes('quadratic-in-out') \n\np_anim &lt;- animate(anim, \n                  width = 700, height = 432, \n                  fps = 25, duration = 15, \n                  rewind = FALSE)\np_anim\n\n\n\nWe can use anim_save() to save animation as gif file or video files.\n\nanimation_to_save &lt;- anim_a  + exit_shrink()\nanim_save(\"first_saved_animation.gif\", animation = p_anim)"
  },
  {
    "objectID": "danl-cw/danl-399-cw-08.html",
    "href": "danl-cw/danl-399-cw-08.html",
    "title": "Classwork 8",
    "section": "",
    "text": "Loading R packages\n\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(ggthemes)\nlibrary(socviz)\n\nThe following data is for Classwork 8:\n\nclimate_opinion_long &lt;- read_csv(\n  'https://bcdanl.github.io/data/climate_opinion_2021.csv')\n\n\n\n\n  \n\n\n\n\n\nVariable Description\n\nbelief:\n\nhuman: Estimated percentage who think that global warming is caused mostly by human activities.\nhappening: Estimated percentage who think that global warming is happening.\n\n\n\n\nQuestion 1\n\nFilter climate_opinion_long, so that climate_opinion_long has only estimated percentage of people who think that global warming is caused mostly by human activities.\n\nAnswer:\n\n\n\nQuestion 2\n\nJoin the two data.frames, socviz::county_map and the resulting data.frame in Question 1.\n\nAnswer:\n\n\n\nQuestion 3\n\nReplicate the following map.\n\nDo not use coord_map(projection = \"albers\", lat0 = 39, lat1 = 45).\n\n\n\n\n\n\n\nAnswer:\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-hw/danl-399-hw-04-q.html",
    "href": "danl-hw/danl-399-hw-04-q.html",
    "title": "Homework 4",
    "section": "",
    "text": "Loading R packages\n\nlibrary(tidyverse)\nlibrary(socviz)\nlibrary(lubridate)\nlibrary(geofacet)\n\n\n\nQuestion 1 - Unemployment Rate Maps with geofacet::facet_geo()\nThe following data is for Question 1:\n\nunemp_house_prices &lt;- read_csv(\n  'https://bcdanl.github.io/data/unemp_house_prices.csv')\n\n\n\n\n  \n\n\n\nUse geom_area(), geom_line(), and facet_geo(~state, labeller = adjust_labels) to replicate the following figure\n\n\n\n\n\n\n\n\n\nQuestion 2 - Election maps and data clearning\nThe following data is for Question 2:\n\nelection_panel &lt;- read_csv(\n  'https://bcdanl.github.io/data/election_panel.csv')\n\n\n\n\n\n  \n\n\n\n\nReplicate the following map.\n\nDo not use coord_map(projection = \"albers\", lat0 = 39, lat1 = 45).\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-qa/danl-399-qa-08.html",
    "href": "danl-qa/danl-399-qa-08.html",
    "title": "Lecture 8 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 8 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 8 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 8 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-09-2024-0412.html",
    "href": "danl-class/danl-399-note-09-2024-0412.html",
    "title": "Lecture 8",
    "section": "",
    "text": "plotly::ggplotly()\n\n# install.packages(\"plotly\")\ndat &lt;- data.frame(cond = rep(c(\"A\", \"B\"), each = 10),\n                  xvar = 1:20 + rnorm(20, sd=3),\n                  yvar = 1:20 + rnorm(20, sd=3))\n\np &lt;- ggplot(dat, aes(x = xvar, y = yvar)) +\n  geom_point(shape=1)      # Use hollow circles\nfig &lt;- ggplotly(p)\nfig\n\n\n\n\n\n\ncces &lt;- read_csv(url(\"https://bcdanl.github.io/data/cces.csv\"))\n\n\ncces &lt;- cces |&gt; \n  mutate(party = recode(dem, `1` = \"Democrat\", `0` = \"Republican\"))\n\n\np &lt;- cces |&gt; \n  select(les, seniority, party) |&gt; \n  ggplot(aes(x = seniority, y = les,\n             color = party)) +\n  geom_point(alpha = .25) +\n  scale_color_manual(values = c('red', 'blue'))\n\np2 &lt;- ggplotly(p)\np2\n\n\n\n\n\n\nlibrary(htmlwidgets)\nsaveWidget(p2, \"fig.html\")\n\n\n# install.packages(\"ggiraph\")\nlibrary(ggiraph)\ndata &lt;- mtcars\ndata$carname &lt;- row.names(data)\n\ngg_point &lt;- ggplot(data = data) +\n  geom_point_interactive(aes(x = wt, y = qsec, \n                             color = disp,\n                             tooltip = carname, \n                             data_id = carname)) + \n  theme_minimal()\n\ngg_point\n\n\n\n\n\np2 &lt;- girafe(ggobj = gg_point)\np2\n\n\n\n\nsaveWidget(p2, \"girafe_fig.html\")\n\n\n\nAnimation\n\ndata(mtcars)\n\np &lt;- ggplot(data = mtcars,\n       mapping = aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot()\n\np\n\n\n\n\n\np + facet_wrap(gear ~ .)\n\n\n\n\n\nlibrary(gganimate)\nmy_anim &lt;- p + \n  transition_states(gear)\n\nmy_anim\n\n\n\n\n\nmy_anim2 &lt;- p + \n  transition_states(gear,\n    transition_length = 3,  # relative length\n    state_length = 2)  # relative length\n\nmy_anim2\n\n\n\n\n\ncces &lt;- read_csv(url(\"https://bcdanl.github.io/data/cces.csv\"))\ncces &lt;- cces |&gt; \n  mutate(party = recode(dem,`1`=\"Democrat\",`0`=\"Republican\"))\n\ncong_dat &lt;- cces |&gt; \n  group_by(year, party) |&gt;\n  summarise( seats =n())\n\n\np &lt;- cong_dat |&gt; \n  ggplot(aes(x = year, y = seats,\n             fill = party)) +\n  geom_col() +\n  geom_hline(yintercept = 217) +\n  scale_fill_manual(values = c('blue','red'))\n\np\n\n\n\n\n\nanim2 &lt;- p + transition_time(year)\nanim2\n\n\n\n\n\np &lt;- ggplot() + \n  geom_jitter(data = filter(cces, \n                            congress==115 & party==\"Democrat\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_jitter(data = filter(cces, \n                            congress==115 & party==\"Republican\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_smooth(data = filter(cces, \n                            congress==115 & party==\"Democrat\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  geom_smooth(data = filter(cces, \n                            congress==115 & party==\"Republican\"),\n              aes(x = seniority, y = all_pass,\n                  color = party) ) +\n  scale_color_manual(values=c(\"blue\",\"red\"))\n\np\n\n\n\n\n\nanim2 &lt;- p + transition_layers()\n\nanim2\n\n\n\n\n\nanim &lt;- ggplot(mtcars, aes(factor(cyl), mpg)) +\n  geom_boxplot() +\n  transition_states(factor(cyl))\n\n# Fade-in, fade-out\nanim1 &lt;- anim +\n  enter_fade() +\n  exit_fade()\n\nanim1\n\n\n\n\n\np &lt;- ggplot(cong_dat,\n                aes(x = year, y = seats, fill = party)) +\n  geom_bar(stat = \"identity\") +\n  geom_hline(yintercept = 217) +\n  scale_fill_manual(values = c(\"blue\",\"red\"))\n\n\nanim3 &lt;- p + transition_time(year) +\n  shadow_wake(wake_length = 1,\n              alpha = TRUE,\n              wrap = TRUE)\n\nanim3\n\n\n\n\n\nlibrary(gapminder)\np &lt;- gapminder |&gt; \n  ggplot(aes(x = gdpPercap,\n             y = lifeExp,\n             color = continent)) +\n  geom_point(alpha = .75) + \n  theme_minimal() + \n  theme(legend.position = \"top\") + \n  guides(size = \"none\") + \n  labs(x = \"GDP per Capita\", y = \"Life Expetancy\", color = \"\") \n\np\n\n\n\n\n\np + transition_time(year) \n\n\n\n\n\np + transition_time(year) +\n  labs(title = \"Year: {frame_time}\")\n\n\n\n\n\np +\n  geom_text(aes(x = min(gdpPercap), \n                y = min(lifeExp), \n                label = as.factor(year)) , \n            hjust=-2, vjust = -0.2, alpha = 0.2,  \n            color = \"gray\", size = 20) +\n  transition_states(as.factor(year), state_length = 0)\n\n\n\n\n\ngapminder |&gt;\n  filter(country == \"United States\") |&gt;\n  ggplot(aes(x = year, y = pop)) + \n  geom_point() + \n  geom_line() +\n  theme_minimal() +\n  transition_reveal(year)\n\n\n\n\n\ngapminder |&gt;\n  filter(country == \"United States\") |&gt;\n  ggplot(aes(x = year, y = pop)) + \n  geom_point() + \n  geom_line() + \n  geom_text(aes(x = min(year), y = min(pop), \n                label = as.factor(year)) , \n            hjust=-2, vjust = -0.2, alpha = 0.5,  \n            color = \"gray\", size = 20) +\n  theme_minimal() +\n  transition_reveal(year) + \n  view_follow()\n\n\n\n\n\n\nBar Chart Race\n\ngapminder_sum &lt;- gapminder |&gt;\n  group_by(year) |&gt;\n  arrange(year, desc(gdpPercap)) |&gt;\n  mutate(ranking = row_number()) |&gt;\n  filter(ranking &lt;=15)\n\n\nanim &lt;- gapminder_sum |&gt;\n  ggplot() +\n  geom_col(aes(x = ranking, y = gdpPercap, fill = country)) +\n  geom_text(aes(x = ranking, y = gdpPercap, label = round(gdpPercap, 0)), \n            hjust=-0.1) +\n  geom_text(aes(x = ranking, y = 0 , \n                label = country), hjust=1.1) + \n  geom_text(aes(x = 15, \n                y = max(gdpPercap), \n                label = as.factor(year)), \n            vjust = 0.2, alpha = 0.5,  color = \"gray\", size = 20) +\n  coord_flip(clip = \"off\", expand = FALSE) + \n  scale_x_reverse() +\n  theme_minimal() + \n  theme(\n    panel.grid = element_blank(), \n    legend.position = \"none\",\n    axis.ticks.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank(),\n    plot.margin = margin(1, 4, 1, 3, \"cm\")\n  ) +\n  transition_states(year, state_length = 0, transition_length = 2) +\n  enter_fade() +\n  exit_fade() + \n  ease_aes('quadratic-in-out') \n\np_anim &lt;- animate(anim, \n                  width = 700, height = 432, \n                  fps = 25, duration = 15, \n                  rewind = FALSE)\np_anim\n\n\n\n\n\nanim_save(\"first_saved_animation.gif\", animation = p_anim)\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-class/danl-399-note-10-2024-0420.html",
    "href": "danl-class/danl-399-note-10-2024-0420.html",
    "title": "Note 10",
    "section": "",
    "text": "climate_opinion_long &lt;- read_csv(\n  'https://bcdanl.github.io/data/climate_opinion_2021.csv')\n\n\n\n\n\nFilter climate_opinion_long, so that climate_opinion_long has only estimated percentage of people who think that global warming is caused mostly by human activities.\n\nclimate_opinion_long &lt;- climate_opinion_long |&gt; \n  filter(belief == 'human') |&gt; \n  select(-belief)\n\n\n\n\n\n\ncounty_map &lt;- socviz::county_map\n\ncounty_map &lt;- county_map |&gt; \n  mutate(id = as.numeric(id)) |&gt; \n  left_join(climate_opinion_long)\n\n\n\n\n\n\ncounty_map |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = perc)) +\n  geom_polygon(color = 'grey70',\n               linewidth = .1) +\n  scale_fill_gradient2(\n    low = \"#2E74C0\",\n    mid = 'white',\n    high = \"#CB454A\",\n    midpoint = 50,\n    breaks = c(min(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .25, na.rm = T),\n               median(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .75, na.rm = T),\n               max(climate_opinion_long$perc, na.rm = T)\n               ),\n    labels = c(paste(round(min(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Min)\"),\n               paste(round(quantile(climate_opinion_long$perc, .25, na.rm = T), 1), \"\\n(25th)\"),\n               paste(round(median(climate_opinion_long$perc, na.rm = T), 1), \"\\n(50th)\"),\n               paste(round(quantile(climate_opinion_long$perc, .75, na.rm = T), 1), \"\\n(75th)\"),\n               paste(round(max(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Max)\")\n               )\n  ) +\n  labs(fill = 'Percent\\nBelief',\n       title = 'U.S. Climate Opinion, 2021',\n       caption = 'Sources: Yale Program on Climate Change Communication\\n\n(https://climatecommunication.yale.edu/visualizations-data/ycom-us/') +\n  theme_map() +\n  guides(fill = guide_colorbar(direction = 'horizontal',\n                               barwidth = 25,\n                               title.vjust = 1)) +\n  theme(plot.caption = element_text(hjust = 1,\n                                    margin = margin(20,0,0,0)),\n        aspect.ratio = .75,\n        legend.position = c(.5, 0),\n        legend.justification = c(.5,.5))\n\n\n\n\n\n\n\n\np &lt;- county_map |&gt; \n  mutate(GeoName = str_replace_all(GeoName, \"'\", '')) |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = perc, \n             tooltip = interaction(GeoName, str_c('\\n',as.character(perc))),\n             data_id = interaction(GeoName, str_c('\\n',as.character(perc))))) +\n  geom_polygon_interactive(color = 'grey70',\n                           linewidth = .1\n                           ) +\n  scale_fill_gradient2(\n    low = \"#2E74C0\",\n    mid = 'white',\n    high = \"#CB454A\",\n    midpoint = 50,\n    breaks = c(min(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .25, na.rm = T),\n               median(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .75, na.rm = T),\n               max(climate_opinion_long$perc, na.rm = T)\n               ),\n    labels = c(paste(round(min(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Min)\"),\n               paste(round(quantile(climate_opinion_long$perc, .25, na.rm = T), 1), \"\\n(25th)\"),\n               paste(round(median(climate_opinion_long$perc, na.rm = T), 1), \"\\n(50th)\"),\n               paste(round(quantile(climate_opinion_long$perc, .75, na.rm = T), 1), \"\\n(75th)\"),\n               paste(round(max(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Max)\")\n               )\n  ) +\n  labs(fill = 'Percent\\nBelief',\n       title = 'U.S. Climate Opinion, 2021',\n       caption = 'Sources: Yale Program on Climate Change Communication\\n\n(https://climatecommunication.yale.edu/visualizations-data/ycom-us/') +\n  theme_map() +\n  guides(fill = guide_colorbar(direction = 'horizontal',\n                               barwidth = 25,\n                               title.vjust = 1)) +\n  theme(plot.caption = element_text(hjust = 1,\n                                    margin = margin(20,0,0,0)),\n        aspect.ratio = .75,\n        legend.position = c(.5, 0),\n        legend.justification = c(.5,.5))\n\np1 &lt;- girafe(ggobj = p)\n# p1\n\n# saveWidget(p1, 'interactive-ggirafe-map.html')"
  },
  {
    "objectID": "danl-class/danl-399-note-10-2024-0420.html#classwork-8",
    "href": "danl-class/danl-399-note-10-2024-0420.html#classwork-8",
    "title": "Note 10",
    "section": "",
    "text": "Filter climate_opinion_long, so that climate_opinion_long has only estimated percentage of people who think that global warming is caused mostly by human activities.\n\nclimate_opinion_long &lt;- climate_opinion_long |&gt; \n  filter(belief == 'human') |&gt; \n  select(-belief)\n\n\n\n\n\n\ncounty_map &lt;- socviz::county_map\n\ncounty_map &lt;- county_map |&gt; \n  mutate(id = as.numeric(id)) |&gt; \n  left_join(climate_opinion_long)\n\n\n\n\n\n\ncounty_map |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = perc)) +\n  geom_polygon(color = 'grey70',\n               linewidth = .1) +\n  scale_fill_gradient2(\n    low = \"#2E74C0\",\n    mid = 'white',\n    high = \"#CB454A\",\n    midpoint = 50,\n    breaks = c(min(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .25, na.rm = T),\n               median(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .75, na.rm = T),\n               max(climate_opinion_long$perc, na.rm = T)\n               ),\n    labels = c(paste(round(min(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Min)\"),\n               paste(round(quantile(climate_opinion_long$perc, .25, na.rm = T), 1), \"\\n(25th)\"),\n               paste(round(median(climate_opinion_long$perc, na.rm = T), 1), \"\\n(50th)\"),\n               paste(round(quantile(climate_opinion_long$perc, .75, na.rm = T), 1), \"\\n(75th)\"),\n               paste(round(max(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Max)\")\n               )\n  ) +\n  labs(fill = 'Percent\\nBelief',\n       title = 'U.S. Climate Opinion, 2021',\n       caption = 'Sources: Yale Program on Climate Change Communication\\n\n(https://climatecommunication.yale.edu/visualizations-data/ycom-us/') +\n  theme_map() +\n  guides(fill = guide_colorbar(direction = 'horizontal',\n                               barwidth = 25,\n                               title.vjust = 1)) +\n  theme(plot.caption = element_text(hjust = 1,\n                                    margin = margin(20,0,0,0)),\n        aspect.ratio = .75,\n        legend.position = c(.5, 0),\n        legend.justification = c(.5,.5))\n\n\n\n\n\n\n\n\np &lt;- county_map |&gt; \n  mutate(GeoName = str_replace_all(GeoName, \"'\", '')) |&gt; \n  ggplot(aes(x = long, y = lat, \n             group = group, fill = perc, \n             tooltip = interaction(GeoName, str_c('\\n',as.character(perc))),\n             data_id = interaction(GeoName, str_c('\\n',as.character(perc))))) +\n  geom_polygon_interactive(color = 'grey70',\n                           linewidth = .1\n                           ) +\n  scale_fill_gradient2(\n    low = \"#2E74C0\",\n    mid = 'white',\n    high = \"#CB454A\",\n    midpoint = 50,\n    breaks = c(min(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .25, na.rm = T),\n               median(climate_opinion_long$perc, na.rm = T),\n               quantile(climate_opinion_long$perc, .75, na.rm = T),\n               max(climate_opinion_long$perc, na.rm = T)\n               ),\n    labels = c(paste(round(min(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Min)\"),\n               paste(round(quantile(climate_opinion_long$perc, .25, na.rm = T), 1), \"\\n(25th)\"),\n               paste(round(median(climate_opinion_long$perc, na.rm = T), 1), \"\\n(50th)\"),\n               paste(round(quantile(climate_opinion_long$perc, .75, na.rm = T), 1), \"\\n(75th)\"),\n               paste(round(max(climate_opinion_long$perc, na.rm = T), 1), \"\\n(Max)\")\n               )\n  ) +\n  labs(fill = 'Percent\\nBelief',\n       title = 'U.S. Climate Opinion, 2021',\n       caption = 'Sources: Yale Program on Climate Change Communication\\n\n(https://climatecommunication.yale.edu/visualizations-data/ycom-us/') +\n  theme_map() +\n  guides(fill = guide_colorbar(direction = 'horizontal',\n                               barwidth = 25,\n                               title.vjust = 1)) +\n  theme(plot.caption = element_text(hjust = 1,\n                                    margin = margin(20,0,0,0)),\n        aspect.ratio = .75,\n        legend.position = c(.5, 0),\n        legend.justification = c(.5,.5))\n\np1 &lt;- girafe(ggobj = p)\n# p1\n\n# saveWidget(p1, 'interactive-ggirafe-map.html')"
  },
  {
    "objectID": "danl-class/danl-399-note-11-2024-0426.html",
    "href": "danl-class/danl-399-note-11-2024-0426.html",
    "title": "Note 11",
    "section": "",
    "text": "Interactive tables\n\nlibrary(gapminder)\nrmarkdown::paged_table(gapminder)\n\n\n\n  \n\n\n\n\nDT::datatable(gapminder)\n\n\n\n\n\n\n\nbeer_mkt &lt;- read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")\nrmarkdown::paged_table(beer_mkt)\n\n\n\n  \n\n\n\n\nDT::datatable(beer_mkt)\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-399-midterm-a.html",
    "href": "danl-399-midterm-a.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)\n\n # Honor Pledges\nI solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.\nI will not communicate with other students or use unauthorized materials.\nI will uphold the integrity of this exam and demonstrate my own knowledge and abilities.\nBy taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.\nI accept the consequences of any violation of this promise.\n\nStudent‚Äôs Name:\nStudent‚Äôs ID:\nStudent‚Äôs Signature:"
  },
  {
    "objectID": "danl-399-midterm-a.html#loading-r-packages",
    "href": "danl-399-midterm-a.html#loading-r-packages",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)\n\n # Honor Pledges\nI solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.\nI will not communicate with other students or use unauthorized materials.\nI will uphold the integrity of this exam and demonstrate my own knowledge and abilities.\nBy taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.\nI accept the consequences of any violation of this promise.\n\nStudent‚Äôs Name:\nStudent‚Äôs ID:\nStudent‚Äôs Signature:"
  },
  {
    "objectID": "danl-399-midterm-a.html#using-the-power-of-nature-to-clean-the-oceans",
    "href": "danl-399-midterm-a.html#using-the-power-of-nature-to-clean-the-oceans",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Using The Power of Nature to Clean the Oceans",
    "text": "Using The Power of Nature to Clean the Oceans\n\n\n\nMr.¬†Trash Wheel\n\n\nMr.¬†Trash Wheel is a semi-autonomous trash interceptor that is placed at the end of a river, stream or other outfall.\nFar too lazy to chase trash around the ocean, Mr.¬†Trash Wheel stays put and waits for the waste to flow to him.\nSustainably powered and built to withstand the biggest storms, Mr.¬†Trash Wheel uses a unique blend of solar and hydro power to pull hundreds of tons of trash out of the water each year."
  },
  {
    "objectID": "danl-399-midterm-a.html#meet-the-mr.-trash-wheel-family",
    "href": "danl-399-midterm-a.html#meet-the-mr.-trash-wheel-family",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Meet the Mr.¬†Trash Wheel Family",
    "text": "Meet the Mr.¬†Trash Wheel Family\n\n\n\n\n\n\nMister Trash Wheel\n\n\n\n\nInstalled: May 9, 2014\nLocation: Jones Falls stream, Inner Harbor, Baltimore, MD\n\n\n\n\n\n\n\n\nProfessor Trash Wheel\n\n\n\n\nInstalled: December 4, 2016\nLocation: Harris Creek, Canton neighborhood, Baltimore, MD\n\n\n\n\n\n\n\n\nCaptain Trash Wheel\n\n\n\n\n\nInstalled: June 5, 2018\nLocation: Masonville Cove, Baltimore, MD\n\n\n\n\n\n\n\n\nGwynnda Trash Wheel\n\n\n\n\n\nInstalled: June 3, 2021\nLocation: Gwynns Falls, West Baltimore, MD"
  },
  {
    "objectID": "danl-399-midterm-a.html#part-1",
    "href": "danl-399-midterm-a.html#part-1",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Part 1",
    "text": "Part 1\n\nThe following is the data frames for Part 1 in Question 1.\n\n\ntrashwheel &lt;- read_csv('https://bcdanl.github.io/data/trashwheel.csv')\n\n\nVariable Description\n\n\n\n\n\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nMonth\ncharacter\nMonth\n\n\nYear\nnumeric\nYear\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nWeight\nnumeric\nWeight in tons\n\n\nVolume\nnumeric\nVolume in cubic yards\n\n\nPlasticBottles\nnumeric\nNumber of plastic bottles\n\n\nPolystyrene\nnumeric\nNumber of polystyrene items\n\n\nCigaretteButts\nnumeric\nNumber of cigarette butts\n\n\nGlassBottles\nnumeric\nNumber of glass bottles\n\n\nPlasticBags\nnumeric\nNumber of plastic bags\n\n\nWrappers\nnumeric\nNumber of wrappers\n\n\nSportsBalls\nnumeric\nNumber of sports balls\n\n\nHomesPowered\nnumeric\nHomes Powered - Each ton of trash equates to on average 500 kilowatts of electricity. An average household will use 30 kilowatts per day.\n\n\n\n\n\nQ1a\n\nProvide an R code to calculate mean and standard deviation of Volume for ‚ÄúMister Trash Wheel‚Äù.\n\nAnswer :\n\n\n\nQ1b\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of Weight varies by Name.\n\nThe number of bins in each subplot below is 15.\n\n\n\nggplot(trashwheel, aes(x = Weight, fill = Name)) +\n  geom_histogram(bins = 15,\n                 show.legend = F) +\n  facet_wrap(Name ~ .)\n\n\n\n\nAnswer :\n\n\n\nQ1c\n\nProvide a comment to describe how the distribution of Weight varies by Name, as visualized in Q1b.\n\nAnswer :\n\n\n\nQ1d\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of HomesPowered varies by Name.\n\nThe number of bins in each subplot below is 75.\n\n\n\nggplot(trashwheel, aes(x = Date, y = HomesPowered)) +\n  geom_line(aes(color = Name),\n            show.legend = F) +\n  geom_point(size = .5) +\n  geom_smooth(se = F) +\n  facet_wrap(Name ~ ., scales = \"free\") \n\n\n\n\nAnswer :\n\n\n\nQ1e\n\nProvide a comment to describe how the daily trend of HomesPowered varies by Name, as visualized in Q1d.\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-a.html#part-ii",
    "href": "danl-399-midterm-a.html#part-ii",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Part II",
    "text": "Part II\nFor Part II, use the following data.frame, trashwheel_long.\n\ntrashwheel_long &lt;- trashwheel |&gt; \n  ungroup() |&gt; \n  select(Name, Date, PlasticBottles:SportsBalls) |&gt; \n  pivot_longer(cols = PlasticBottles:SportsBalls,\n               values_to = \"Number\",\n               names_to = \"Trash_Type\") |&gt; \n  arrange(Trash_Type, Date)\n\n\nVariable Description\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nTrash_Type\nnumeric\nType of Trashes\n\n\nNumber\nnumeric\nNumber of trash items\n\n\n\n\n\n\nQ1f\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of log10(Number) varies by Trash_Type and Name.\n\n\nggplot(data = trashwheel_long, aes(x = Date, y = log10(Number))) +\n  geom_line(aes(color = Trash_Type), \n            linewidth = .25) +\n  geom_point(size = .1) +\n  geom_smooth(aes(color = Trash_Type), \n              se = F) +\n  facet_wrap(Name ~ ., scales = \"free\") +\n  scale_color_brewer(palette = 'Dark2') +\n  theme(legend.position = \"top\")\n\n\n\n\nAnswer :\n\n\n\nQ1g\n\nProvide a comment to describes how the daily trend of log10(Number) varies by Trash_Type and Name, as visualized in Q1f.\n\nAnswer :\n\n\n\nQ1h\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of log10(Number) varies by Trash_Type and Name.\n\n\nggplot(trashwheel_long, aes(x = log10(Number), y = Trash_Type)) +\n  geom_boxplot((aes(fill = Trash_Type)), show.legend = F) +\n  facet_wrap(Name ~ ., scales = \"free\") \n\n\n\n\nAnswer :\n\n\n\nQ1i\n\nProvide a comment to describe how the distribution of Number varies by Trash_Type and Name, as visualized in Q1f.\n\nIn your comment, please include how the median Number of ‚ÄúCigaretteButts‚Äù varies by Name.\n\n\nAnswer :"
  },
  {
    "objectID": "danl-399-midterm-a.html#q2a",
    "href": "danl-399-midterm-a.html#q2a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nUse the color #496d9b for United States, and #fffff0 for the rest of countries.\n\n\n\ngapminder_sum &lt;- gapminder |&gt; \n  group_by(country, continent) |&gt; \n  summarise(lifeExp = median(lifeExp, na.rm = T)) |&gt; \n  filter(continent != 'Oceania') |&gt; \n  mutate(usa = ifelse(country == 'United States', T, F),\n         lifeExp = ifelse(country == 'United States', \n                          paste0(' Mean: ', round(lifeExp, 2)), \n                          NA))\n\n# Set the data and filter to include only observations excluding Oceania\nggplot(data = filter(gapminder, \n                     continent != 'Oceania') |&gt; \n         mutate(usa = ifelse(country == 'United States', T, F)),\n\n       # Set the aesthetics (x-axis and y-axis) to life expectancy and reorder countries by life expectancy\n       aes(x = lifeExp,\n           y = fct_reorder(country, lifeExp))) +\n\n  # Add a layer of points to the plot, setting the color to blue and size to 1.75\n  geom_boxplot(aes(fill = usa), show.legend = F, color = 'grey', linewidth = .25) +\n\n  # Add a layer of text labels to the plot, setting the label to life expectancy, hjust to -.25, and size to 2\n  geom_label(data = gapminder_sum, \n            x = .925*max(gapminder$lifeExp),\n            aes(label = lifeExp), hjust = -.25,\n            size = 2, color = '#496d9b', fontface = 'bold') +\n\n  # Facet the plot by continent, with y-scales free\n  facet_wrap(.~continent, scales = \"free_y\") +\n\n  # Set the x-axis label to NULL (no name) and limit the x-axis to 35-90\n  scale_x_continuous(\n    name = NULL,\n    lim = c(35, 90)\n  ) +\n\n  # Set the y-axis label to NULL (no name)\n  scale_y_discrete(name = NULL) +\n  \n  scale_fill_manual(values = c('#fffff0', '#496d9b')) +\n\n  # Add a title to the plot\n  labs(title = 'Box of Life Expectancy') +\n\n  # Set the theme to minimal\n  theme_minimal() +\n\n  # Customize theme elements: set the y-axis text size, the plot title size and position, and the facet strip text size and font face\n  theme(\n    text = element_text(size=16,  family=\"serif\"),\n    axis.text.y = element_text(size = rel(.75)),\n    plot.title = element_text(size = rel(1.5),\n                              hjust = 0.5,\n                              face = 'bold'),\n    strip.text = element_text(size = rel(1.25),\n                              face = 'bold')\n  )"
  },
  {
    "objectID": "danl-399-midterm-a.html#q2b",
    "href": "danl-399-midterm-a.html#q2b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b",
    "text": "Q2b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "danl-399-midterm-a.html#q3a",
    "href": "danl-399-midterm-a.html#q3a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot.\n\n\nggplot(political_ideology,\n       aes(\n         x = ideology_score,\n         y = year,\n         group = interaction(party, factor(year))  ,\n         fill = interaction(party, factor(year))\n       )\n) +\n  geom_density_ridges(scale = 5, size = 0.25,\n                      rel_min_height = 0.01,\n                      alpha=0.75, color = \"white\") +\n  geom_vline(xintercept = 0) +\n  scale_x_continuous(\n    name = \"Ideology score\",\n    limits = c(-.8, 1.3),\n    breaks = c(-1,-.75,-.5,-.25,\n               0,\n               .25,.5,.75,1)\n  ) +\n  scale_y_reverse(\n    name = \"Year\",\n    breaks=c(seq(2013, 1963, -10))\n  ) +\n  scale_fill_cyclical(\n    breaks = c(\"DEM.1963\", \"GOP.1963\"),\n    labels = c(`DEM.1963` = \"Democrats  \",\n               `GOP.1963` = \"Republicans\"),\n    values = c(\"#2e74c0\", \"#cb454a\", \n               \"#6c9dd2\", \"#da7c80\"),\n    name = NULL,\n    guide = \"legend\"\n  ) +\n  theme_ipsum() +\n  theme(\n    axis.text.x = element_text(size = rel(1.5)),\n    axis.text.y = element_text(vjust = 0,\n                               size = rel(1.5)),\n    axis.title.x = element_text(size = rel(2)),\n    axis.title.y = element_text(size = rel(2)),\n    legend.position = c(1, 1),\n    legend.justification = c(1, 1),\n    legend.direction = \"horizontal\",\n    legend.background = element_rect(fill = \"white\")\n  )"
  },
  {
    "objectID": "danl-399-midterm-a.html#q3b",
    "href": "danl-399-midterm-a.html#q3b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b",
    "text": "Q3b\n\nMake a simple comment on the visualization result in Q3a."
  },
  {
    "objectID": "danl-399-midterm-a.html#q4a",
    "href": "danl-399-midterm-a.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization\n\n\nbrexit &lt;- brexit |&gt; \n  mutate(\n    region = fct_relevel(region, \n                         \"london\", \"rest_of_south\", \"midlands_wales\", \"north\", \"scot\"),\n    region = fct_recode(region, \n                        London = \"london\", \n                        `Rest of South` = \"rest_of_south\", \n                        `Midlands / Wales` = \"midlands_wales\", \n                        North = \"north\", \n                        Scotland = \"scot\")\n  )\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap( ~ region, \n             nrow = 1, \n             labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-a.html#q4b",
    "href": "danl-399-midterm-a.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?\n\n\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, scales = 'free_x',\n    nrow = 1, labeller = label_wrap_gen(width = 12),\n    # ___\n  ) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-a.html#q4c",
    "href": "danl-399-midterm-a.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don‚Äôt know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?\n\n\n\nggplot(q4, aes(y = opinion, x = prop,\n               fill = opinion)) +\n  geom_col() +\n  facet_wrap(~region,\n    nrow = 1, labeller = label_wrap_gen(width = 12),\n    # ___\n  ) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = 'Percent', y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  scale_x_continuous(labels = scales::percent) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-399-midterm-a.html#q4d.",
    "href": "danl-399-midterm-a.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\nHow is the story this visualization telling different than the story the previous plot tells?\n\n\n\nggplot(q4, aes(y = region, x = prop,\n               fill = opinion)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = 'Percent', y = NULL, fill = 'Opinion'\n  ) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\",\n    \"Right\" = \"#67a9cf\",\n    \"Don't know\" = \"gray\"\n  )) +\n  scale_x_continuous(labels = scales::percent) +\n  theme_minimal()"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#building-interactive-apps-with-shiny",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#building-interactive-apps-with-shiny",
    "title": "Lecture 10",
    "section": "Building interactive apps with Shiny",
    "text": "Building interactive apps with Shiny"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#qmd-dashboard",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#qmd-dashboard",
    "title": "Lecture 10",
    "section": ".qmd ‚ûù Dashboard",
    "text": ".qmd ‚ûù Dashboard\n---\ntitle: \"Dashing through the snow ‚ùÑÔ∏è\"\nformat: dashboard\n---\n\n# content goes here..."
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-components",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-components",
    "title": "Lecture 10",
    "section": "Dashboard Components",
    "text": "Dashboard Components\n\n\nNavigation Bar and Pages ‚Äî Icon, title, and author along with links to sub-pages (if more than one page is defined).\nSidebars, Rows & Columns, and Tabsets ‚Äî Rows and columns using markdown heading (with optional attributes to control height, width, etc.). Sidebars for interactive inputs. Tabsets to further divide content.\nCards (Plots, Tables, Value Boxes, Content) ‚Äî Cards are containers for cell outputs and free form markdown text. The content of cards typically maps to cells in your notebook or source document."
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#navigation-bar-and-pages",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#navigation-bar-and-pages",
    "title": "Lecture 10",
    "section": "Navigation Bar and Pages",
    "text": "Navigation Bar and Pages\n\n\n--- \ntitle: \"Palmer Penguins\"\nauthor: \"Cobblepot Analytics\"\nformat: \n  dashboard:\n    logo: images/penguins.png\n    nav-buttons: [linkedin, twitter, github]\n---\n\n# Bills\n\n# Flippers\n\n# Data"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#sidebars-page-level",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#sidebars-page-level",
    "title": "Lecture 10",
    "section": "Sidebars: Page Level",
    "text": "Sidebars: Page Level\n\n\n---\ntitle: \"Sidebar\"\nformat: dashboard\n---\n    \n# Page 1\n\n## {.sidebar}\n\n```{r}\n```\n\n## Column \n\n```{r}\n```\n\n```{r}\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#sidebars-global",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#sidebars-global",
    "title": "Lecture 10",
    "section": "Sidebars: Global",
    "text": "Sidebars: Global\n\n\n---\ntitle: \"Global Sidebar\"\nformat: dashboard\n---\n    \n# {.sidebar}\n\nSidebar content (e.g. inputs)\n\n# Plot\n\n```{r}\n```\n\n# Data\n\n```{r}\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#layout-rows",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#layout-rows",
    "title": "Lecture 10",
    "section": "Layout: Rows",
    "text": "Layout: Rows\n\n\n---\ntitle: \"Focal (Top)\"\nformat: dashboard\n---\n    \n## Row {height=70%}\n\n```{r}\n```\n\n## Row {height=30%}\n\n```{r}\n```\n\n```{r}\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#layout-columns",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#layout-columns",
    "title": "Lecture 10",
    "section": "Layout: Columns",
    "text": "Layout: Columns\n\n\n---\ntitle: \"Focal (Top)\"\nformat: \n  dashboard:\n    orientation: columns\n---\n    \n## Column {width=60%}\n\n```{r}\n```\n\n## Column {width=40%}\n\n```{r}\n```\n\n```{python}\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#tabset",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#tabset",
    "title": "Lecture 10",
    "section": "Tabset",
    "text": "Tabset\n\n\n---\ntitle: \"Palmer Penguins\"\nformat: dashboard\n---\n    \n## Row\n\n```{r}\n```\n\n## Row {.tabset}\n\n```{r}\n#| title: Chart 2\n```\n\n```{r}\n#| title: Chart 3\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#plots",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#plots",
    "title": "Lecture 10",
    "section": "Plots",
    "text": "Plots\nEach code chunk makes a card, and can take a title\n\n\n```{r}\n#| title: GDP and Life Expectancy\n\nlibrary(gapminder)\nlibrary(tidyverse)\nggplot(gapminder, \n       aes(x = gdpPercap, \n           y = lifeExp, \n           color = continent)) +\n  geom_point()\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#tables",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#tables",
    "title": "Lecture 10",
    "section": "Tables",
    "text": "Tables\nEach code chunk makes a card, doesn‚Äôt have to have a title\n\n\n```{r}\nlibrary(gapminder)\nlibrary(tidyverse)\nlibrary(gt)\n\ngapminder |&gt;\n  group_by(continent, year) |&gt;\n  summarize(mean_lifeExp = \n              round(mean(lifeExp), 1)) |&gt;\n  pivot_wider(names_from = continent, \n              values_from = mean_lifeExp) |&gt;\n  gt()\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#other-features",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#other-features",
    "title": "Lecture 10",
    "section": "Other features",
    "text": "Other features\n\nText content\nExpanding cards"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-deployment",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-deployment",
    "title": "Lecture 10",
    "section": "Dashboard deployment",
    "text": "Dashboard deployment\nDashboards are typically just static HTML pages so can be deployed to any web server or web host!"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#interactive-dashboards",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#interactive-dashboards",
    "title": "Lecture 10",
    "section": "Interactive Dashboards",
    "text": "Interactive Dashboards\nhttps://quarto.org/docs/dashboards/interactivity/shiny-r\n\nFor interactive exploration, some dashboards can benefit from a live R backend\nTo do this with Quarto Dashboards, add interactive Shiny components\nDeploy with or without a server!"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-1",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-1",
    "title": "Lecture 10",
    "section": "ae-15 - Step 1",
    "text": "ae-15 - Step 1\n\n\nReview dashboard layout components.\nSidebar: Make callout collapsible.\nAll tabs: Add values to valueboxes.\nData tab: Add leaflet map and data table."
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-2",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-2",
    "title": "Lecture 10",
    "section": "ae-15 - Step 2",
    "text": "ae-15 - Step 2\n\nParameters: Make date a parameter."
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-3",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#ae-15---step-3",
    "title": "Lecture 10",
    "section": "ae-15 - Step 3",
    "text": "ae-15 - Step 3\n\nTheming: Add a light and dark theme."
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboard-but-make-it-python",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboard-but-make-it-python",
    "title": "Lecture 10",
    "section": "Quarto dashboard, but make it Python!",
    "text": "Quarto dashboard, but make it Python!\nhttps://github.com/mine-cetinkaya-rundel/dashing-through-snow\n\nR:\n\nDashboard: https://mine.quarto.pub/dashing-through-snow-r\nCode: https://github.com/mine-cetinkaya-rundel/dashing-through-snow/blob/main/snowdash-r.qmd\n\nPython:\n\nDashboard: https://mine.quarto.pub/dashing-through-snow-py\nCode: https://github.com/mine-cetinkaya-rundel/dashing-through-snow/blob/main/snowdash-py.qmd"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#learn-more",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#learn-more",
    "title": "Lecture 10",
    "section": "Learn more",
    "text": "Learn more\nhttps://quarto.org/docs/dashboards"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-1",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-1",
    "title": "Lecture 10",
    "section": "Quarto Dashboards",
    "text": "Quarto Dashboards\nWhat is a dashboard?\n\nA dashboard is a way of displaying various types of visual data in one place.\n\nUsually, a dashboard is intended to convey different, but related information in an easy-to-digest form.\nE.g., SUNY Geneseo Institutional Research Discovery Dashboards"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#what-is-a-dashboard",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#what-is-a-dashboard",
    "title": "Lecture 10",
    "section": "What is a dashboard?",
    "text": "What is a dashboard?\n\nA dashboard is a way of displaying various types of visual data in one place. Usually, a dashboard is intended to convey different, but related information in an easy-to-digest form.\n\nE.g., SUNY Geneseo Institutional Research Discovery Dashboards"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-2",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-2",
    "title": "Lecture 10",
    "section": "Quarto Dashboards",
    "text": "Quarto Dashboards\nA new output format for easily creating\ndashboards from .qmd files"
  },
  {
    "objectID": "danl-qa/danl-399-qa-10.html",
    "href": "danl-qa/danl-399-qa-10.html",
    "title": "Lecture 10 - Q & A",
    "section": "",
    "text": "Welcome to our Lecture 10 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Lecture 10 slides.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Lecture 10 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes",
    "title": "Lecture 10",
    "section": "Value Boxes",
    "text": "Value Boxes\n\nValue boxes are a great way to prominently display simple values within a dashboard. For example, here is a dashboard row with three value boxes:"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes-1",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes-1",
    "title": "Lecture 10",
    "section": "Value Boxes",
    "text": "Value Boxes\n```{r}\n#| content: valuebox\n#| title: \"Spam per day\"\n\nlist(\n  icon = \"trash\",\n  color = \"danger\",\n  value = spam\n)\n```"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes-2",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#value-boxes-2",
    "title": "Lecture 10",
    "section": "Value Boxes",
    "text": "Value Boxes\nicon and color\n\nThe icon used in value boxes can be any of the 2,000 available bootstrap icons.\nThe color can be any CSS color value, however there are some color aliases that are tuned specifically for dashboards that you might consider using by default:\n\n\n\n\nprimary: Blue\nsecondary: Gray\nsuccess: Green\ninfo: Bright Blue\n\n\n\nwarning: Yellow/Orange\ndanger: Red\nlight: Light Gray\ndark: Black"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-3",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#quarto-dashboards-3",
    "title": "Lecture 10",
    "section": "Quarto Dashboards",
    "text": "Quarto Dashboards\n\nQuarto Dashboards requires Quarto version above 1.4.\n\nDownload Quarto"
  },
  {
    "objectID": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-basics",
    "href": "danl-lec/danl-399-lec-10-2024-0503.html#dashboard-basics",
    "title": "Lecture 10",
    "section": "Dashboard Basics",
    "text": "Dashboard Basics\n\nDashboards are composed of cards\nCards are arranged into rows and columns\nPages, tabsets, and sidebars allow more advanced layouts\n\nWith these simple building blocks, it is pretty straightforward to build some cool dashboards‚Ä¶"
  }
]